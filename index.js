(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["React", "ReactDOM"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("react-dom")) : factory(root["React"], root["ReactDOM"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function(__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/createClass.js":
/*!*************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/createClass.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/defineProperty.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/extends.js":
/*!*********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/extends.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/inherits.js":
/*!**********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/inherits.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/inheritsLoose.js":
/*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/inheritsLoose.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

module.exports = _inheritsLoose;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/objectWithoutProperties.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__(/*! ./objectWithoutPropertiesLoose */ "../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "../node_modules/@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/typeof.js":
/*!********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/typeof.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/ButtonBase.js":
/*!******************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/ButtonBase.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js"));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "react-dom"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "../node_modules/classnames/index.js"));

var _keycode = _interopRequireDefault(__webpack_require__(/*! keycode */ "../node_modules/keycode/index.js"));

var _ownerWindow = _interopRequireDefault(__webpack_require__(/*! ../utils/ownerWindow */ "../node_modules/@material-ui/core/utils/ownerWindow.js"));

var _withStyles = _interopRequireDefault(__webpack_require__(/*! ../styles/withStyles */ "../node_modules/@material-ui/core/styles/withStyles.js"));

var _focusVisible = __webpack_require__(/*! ./focusVisible */ "../node_modules/@material-ui/core/ButtonBase/focusVisible.js");

var _TouchRipple = _interopRequireDefault(__webpack_require__(/*! ./TouchRipple */ "../node_modules/@material-ui/core/ButtonBase/TouchRipple.js"));

var _createRippleHandler = _interopRequireDefault(__webpack_require__(/*! ./createRippleHandler */ "../node_modules/@material-ui/core/ButtonBase/createRippleHandler.js"));

var styles = {
  /* Styles applied to the root element. */
  root: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    position: 'relative',
    // Remove grey highlight
    WebkitTapHighlightColor: 'transparent',
    backgroundColor: 'transparent',
    // Reset default value
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 'none',
    border: 0,
    margin: 0,
    // Remove the margin in Safari
    borderRadius: 0,
    padding: 0,
    // Remove the padding in Firefox
    cursor: 'pointer',
    userSelect: 'none',
    verticalAlign: 'middle',
    '-moz-appearance': 'none',
    // Reset
    '-webkit-appearance': 'none',
    // Reset
    textDecoration: 'none',
    // So we take precedent over the style of a native <a /> element.
    color: 'inherit',
    '&::-moz-focus-inner': {
      borderStyle: 'none' // Remove Firefox dotted outline.

    },
    '&$disabled': {
      pointerEvents: 'none',
      // Disable link interactions
      cursor: 'default'
    }
  },

  /* Styles applied to the root element if `disabled={true}`. */
  disabled: {},

  /* Styles applied to the root element if keyboard focused. */
  focusVisible: {}
};
/* istanbul ignore if */

exports.styles = styles;

if ("development" !== 'production' && !_react.default.createContext) {
  throw new Error('Material-UI: react@16.3.0 or greater is required.');
}
/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */


var ButtonBase =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(ButtonBase, _React$Component);

  function ButtonBase() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ButtonBase);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ButtonBase)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.ripple = null;
    _this.keyDown = false;
    _this.button = null;
    _this.focusVisibleTimeout = null;
    _this.focusVisibleCheckTime = 50;
    _this.focusVisibleMaxCheckTimes = 5;
    _this.handleMouseDown = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseDown', 'start', function () {
      clearTimeout(_this.focusVisibleTimeout);

      if (_this.state.focusVisible) {
        _this.setState({
          focusVisible: false
        });
      }
    });
    _this.handleMouseUp = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseUp', 'stop');
    _this.handleMouseLeave = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'MouseLeave', 'stop', function (event) {
      if (_this.state.focusVisible) {
        event.preventDefault();
      }
    });
    _this.handleTouchStart = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchStart', 'start');
    _this.handleTouchEnd = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchEnd', 'stop');
    _this.handleTouchMove = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'TouchMove', 'stop');
    _this.handleBlur = (0, _createRippleHandler.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), 'Blur', 'stop', function () {
      clearTimeout(_this.focusVisibleTimeout);

      if (_this.state.focusVisible) {
        _this.setState({
          focusVisible: false
        });
      }
    });
    _this.state = {};

    _this.onRippleRef = function (node) {
      _this.ripple = node;
    };

    _this.onFocusVisibleHandler = function (event) {
      _this.keyDown = false;

      _this.setState({
        focusVisible: true
      });

      if (_this.props.onFocusVisible) {
        _this.props.onFocusVisible(event);
      }
    };

    _this.handleKeyDown = function (event) {
      var _this$props = _this.props,
          component = _this$props.component,
          focusRipple = _this$props.focusRipple,
          onKeyDown = _this$props.onKeyDown,
          onClick = _this$props.onClick;
      var key = (0, _keycode.default)(event); // Check if key is already down to avoid repeats being counted as multiple activations

      if (focusRipple && !_this.keyDown && _this.state.focusVisible && _this.ripple && key === 'space') {
        _this.keyDown = true;
        event.persist();

        _this.ripple.stop(event, function () {
          _this.ripple.start(event);
        });
      }

      if (onKeyDown) {
        onKeyDown(event);
      } // Keyboard accessibility for non interactive elements


      if (event.target === event.currentTarget && component && component !== 'button' && (key === 'space' || key === 'enter') && !(_this.button.tagName === 'A' && _this.button.href)) {
        event.preventDefault();

        if (onClick) {
          onClick(event);
        }
      }
    };

    _this.handleKeyUp = function (event) {
      if (_this.props.focusRipple && (0, _keycode.default)(event) === 'space' && _this.ripple && _this.state.focusVisible) {
        _this.keyDown = false;
        event.persist();

        _this.ripple.stop(event, function () {
          _this.ripple.pulsate(event);
        });
      }

      if (_this.props.onKeyUp) {
        _this.props.onKeyUp(event);
      }
    };

    _this.handleFocus = function (event) {
      if (_this.props.disabled) {
        return;
      } // Fix for https://github.com/facebook/react/issues/7769


      if (!_this.button) {
        _this.button = event.currentTarget;
      }

      event.persist();
      (0, _focusVisible.detectFocusVisible)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), _this.button, function () {
        _this.onFocusVisibleHandler(event);
      });

      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(ButtonBase, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.button = _reactDom.default.findDOMNode(this);
      (0, _focusVisible.listenForFocusKeys)((0, _ownerWindow.default)(this.button));

      if (this.props.action) {
        this.props.action({
          focusVisible: function focusVisible() {
            _this2.setState({
              focusVisible: true
            });

            _this2.button.focus();
          }
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.focusRipple && !this.props.disableRipple && !prevState.focusVisible && this.state.focusVisible) {
        this.ripple.pulsate();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.button = null;
      clearTimeout(this.focusVisibleTimeout);
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props2 = this.props,
          action = _this$props2.action,
          buttonRef = _this$props2.buttonRef,
          centerRipple = _this$props2.centerRipple,
          children = _this$props2.children,
          classes = _this$props2.classes,
          classNameProp = _this$props2.className,
          component = _this$props2.component,
          disabled = _this$props2.disabled,
          disableRipple = _this$props2.disableRipple,
          disableTouchRipple = _this$props2.disableTouchRipple,
          focusRipple = _this$props2.focusRipple,
          focusVisibleClassName = _this$props2.focusVisibleClassName,
          onBlur = _this$props2.onBlur,
          onFocus = _this$props2.onFocus,
          onFocusVisible = _this$props2.onFocusVisible,
          onKeyDown = _this$props2.onKeyDown,
          onKeyUp = _this$props2.onKeyUp,
          onMouseDown = _this$props2.onMouseDown,
          onMouseLeave = _this$props2.onMouseLeave,
          onMouseUp = _this$props2.onMouseUp,
          onTouchEnd = _this$props2.onTouchEnd,
          onTouchMove = _this$props2.onTouchMove,
          onTouchStart = _this$props2.onTouchStart,
          tabIndex = _this$props2.tabIndex,
          TouchRippleProps = _this$props2.TouchRippleProps,
          type = _this$props2.type,
          other = (0, _objectWithoutProperties2.default)(_this$props2, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "type"]);
      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), (0, _defineProperty2.default)(_classNames, classes.focusVisible, this.state.focusVisible), (0, _defineProperty2.default)(_classNames, focusVisibleClassName, this.state.focusVisible), _classNames), classNameProp);
      var buttonProps = {};
      var ComponentProp = component;

      if (ComponentProp === 'button' && other.href) {
        ComponentProp = 'a';
      }

      if (ComponentProp === 'button') {
        buttonProps.type = type || 'button';
        buttonProps.disabled = disabled;
      } else {
        buttonProps.role = 'button';
      }

      return _react.default.createElement(ComponentProp, (0, _extends2.default)({
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        onMouseDown: this.handleMouseDown,
        onMouseLeave: this.handleMouseLeave,
        onMouseUp: this.handleMouseUp,
        onTouchEnd: this.handleTouchEnd,
        onTouchMove: this.handleTouchMove,
        onTouchStart: this.handleTouchStart,
        tabIndex: disabled ? '-1' : tabIndex,
        className: className,
        ref: buttonRef
      }, buttonProps, other), children, !disableRipple && !disabled ? _react.default.createElement(_TouchRipple.default, (0, _extends2.default)({
        innerRef: this.onRippleRef,
        center: centerRipple
      }, TouchRippleProps)) : null);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (typeof prevState.focusVisible === 'undefined') {
        return {
          focusVisible: false,
          lastDisabled: nextProps.disabled
        };
      } // The blur won't fire when the disabled state is set on a focused input.
      // We need to book keep the focused state manually.


      if (!prevState.prevState && nextProps.disabled && prevState.focusVisible) {
        return {
          focusVisible: false,
          lastDisabled: nextProps.disabled
        };
      }

      return {
        lastDisabled: nextProps.disabled
      };
    }
  }]);
  return ButtonBase;
}(_react.default.Component);

ButtonBase.propTypes =  true ? {
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It currently only supports `focusVisible()` action.
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: _propTypes.default.func,

  /**
   * Use that property to pass a ref callback to the native button component.
   */
  buttonRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),

  /**
   * If `true`, the ripples will be centered.
   * They won't start at the cursor interaction position.
   */
  centerRipple: _propTypes.default.bool,

  /**
   * The content of the component.
   */
  children: _propTypes.default.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css-api) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * The component used for the root node.
   * Either a string to use a DOM element or a component.
   */
  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),

  /**
   * If `true`, the base button will be disabled.
   */
  disabled: _propTypes.default.bool,

  /**
   * If `true`, the ripple effect will be disabled.
   */
  disableRipple: _propTypes.default.bool,

  /**
   * If `true`, the touch ripple effect will be disabled.
   */
  disableTouchRipple: _propTypes.default.bool,

  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * `disableRipple` must also be `false`.
   */
  focusRipple: _propTypes.default.bool,

  /**
   * This property can help a person know which element has the keyboard focus.
   * The class name will be applied when the element gain the focus through a keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible feature](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rational for using this feature [is explain here](https://github.com/WICG/focus-visible/blob/master/explainer.md).
   */
  focusVisibleClassName: _propTypes.default.string,

  /**
   * @ignore
   */
  onBlur: _propTypes.default.func,

  /**
   * @ignore
   */
  onClick: _propTypes.default.func,

  /**
   * @ignore
   */
  onFocus: _propTypes.default.func,

  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: _propTypes.default.func,

  /**
   * @ignore
   */
  onKeyDown: _propTypes.default.func,

  /**
   * @ignore
   */
  onKeyUp: _propTypes.default.func,

  /**
   * @ignore
   */
  onMouseDown: _propTypes.default.func,

  /**
   * @ignore
   */
  onMouseLeave: _propTypes.default.func,

  /**
   * @ignore
   */
  onMouseUp: _propTypes.default.func,

  /**
   * @ignore
   */
  onTouchEnd: _propTypes.default.func,

  /**
   * @ignore
   */
  onTouchMove: _propTypes.default.func,

  /**
   * @ignore
   */
  onTouchStart: _propTypes.default.func,

  /**
   * @ignore
   */
  role: _propTypes.default.string,

  /**
   * @ignore
   */
  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),

  /**
   * Properties applied to the `TouchRipple` element.
   */
  TouchRippleProps: _propTypes.default.object,

  /**
   * Used to control the button's purpose.
   * This property passes the value to the `type` attribute of the native button component.
   * Valid property values include `button`, `submit`, and `reset`.
   */
  type: _propTypes.default.string
} : undefined;
ButtonBase.defaultProps = {
  centerRipple: false,
  component: 'button',
  disableRipple: false,
  disableTouchRipple: false,
  focusRipple: false,
  tabIndex: '0',
  type: 'button'
};

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiButtonBase'
})(ButtonBase);

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/Ripple.js":
/*!**************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/Ripple.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "../node_modules/classnames/index.js"));

var _Transition = _interopRequireDefault(__webpack_require__(/*! react-transition-group/Transition */ "../node_modules/react-transition-group/Transition.js"));

/**
 * @ignore - internal component.
 */
var Ripple =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Ripple, _React$Component);

  function Ripple() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Ripple);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Ripple)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      visible: false,
      leaving: false
    };

    _this.handleEnter = function () {
      _this.setState({
        visible: true
      });
    };

    _this.handleExit = function () {
      _this.setState({
        leaving: true
      });
    };

    return _this;
  }

  (0, _createClass2.default)(Ripple, [{
    key: "render",
    value: function render() {
      var _classNames, _classNames2;

      var _this$props = this.props,
          classes = _this$props.classes,
          classNameProp = _this$props.className,
          pulsate = _this$props.pulsate,
          rippleX = _this$props.rippleX,
          rippleY = _this$props.rippleY,
          rippleSize = _this$props.rippleSize,
          other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "className", "pulsate", "rippleX", "rippleY", "rippleSize"]);
      var _this$state = this.state,
          visible = _this$state.visible,
          leaving = _this$state.leaving;
      var rippleClassName = (0, _classnames.default)(classes.ripple, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.rippleVisible, visible), (0, _defineProperty2.default)(_classNames, classes.ripplePulsate, pulsate), _classNames), classNameProp);
      var rippleStyles = {
        width: rippleSize,
        height: rippleSize,
        top: -(rippleSize / 2) + rippleY,
        left: -(rippleSize / 2) + rippleX
      };
      var childClassName = (0, _classnames.default)(classes.child, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.childLeaving, leaving), (0, _defineProperty2.default)(_classNames2, classes.childPulsate, pulsate), _classNames2));
      return _react.default.createElement(_Transition.default, (0, _extends2.default)({
        onEnter: this.handleEnter,
        onExit: this.handleExit
      }, other), _react.default.createElement("span", {
        className: rippleClassName,
        style: rippleStyles
      }, _react.default.createElement("span", {
        className: childClassName
      })));
    }
  }]);
  return Ripple;
}(_react.default.Component);

Ripple.propTypes =  true ? {
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css-api) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: _propTypes.default.bool,

  /**
   * Diameter of the ripple.
   */
  rippleSize: _propTypes.default.number,

  /**
   * Horizontal position of the ripple center.
   */
  rippleX: _propTypes.default.number,

  /**
   * Vertical position of the ripple center.
   */
  rippleY: _propTypes.default.number
} : undefined;
Ripple.defaultProps = {
  pulsate: false
};
var _default = Ripple;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/TouchRipple.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/TouchRipple.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = exports.DELAY_RIPPLE = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js"));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "react-dom"));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! react-transition-group/TransitionGroup */ "../node_modules/react-transition-group/TransitionGroup.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "../node_modules/classnames/index.js"));

var _withStyles = _interopRequireDefault(__webpack_require__(/*! ../styles/withStyles */ "../node_modules/@material-ui/core/styles/withStyles.js"));

var _Ripple = _interopRequireDefault(__webpack_require__(/*! ./Ripple */ "../node_modules/@material-ui/core/ButtonBase/Ripple.js"));

var DURATION = 550;
var DELAY_RIPPLE = 80;
exports.DELAY_RIPPLE = DELAY_RIPPLE;

var styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      display: 'block',
      position: 'absolute',
      overflow: 'hidden',
      borderRadius: 'inherit',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0,
      pointerEvents: 'none',
      zIndex: 0
    },

    /* Styles applied to the internal `Ripple` components `ripple` class. */
    ripple: {
      width: 50,
      height: 50,
      left: 0,
      top: 0,
      opacity: 0,
      position: 'absolute'
    },

    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */
    rippleVisible: {
      opacity: 0.3,
      transform: 'scale(1)',
      animation: "mui-ripple-enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
    },

    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */
    ripplePulsate: {
      animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
    },

    /* Styles applied to the internal `Ripple` components `child` class. */
    child: {
      opacity: 1,
      display: 'block',
      width: '100%',
      height: '100%',
      borderRadius: '50%',
      backgroundColor: 'currentColor'
    },

    /* Styles applied to the internal `Ripple` components `childLeaving` class. */
    childLeaving: {
      opacity: 0,
      animation: "mui-ripple-exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
    },

    /* Styles applied to the internal `Ripple` components `childPulsate` class. */
    childPulsate: {
      position: 'absolute',
      left: 0,
      top: 0,
      animation: "mui-ripple-pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
    },
    '@keyframes mui-ripple-enter': {
      '0%': {
        transform: 'scale(0)',
        opacity: 0.1
      },
      '100%': {
        transform: 'scale(1)',
        opacity: 0.3
      }
    },
    '@keyframes mui-ripple-exit': {
      '0%': {
        opacity: 1
      },
      '100%': {
        opacity: 0
      }
    },
    '@keyframes mui-ripple-pulsate': {
      '0%': {
        transform: 'scale(1)'
      },
      '50%': {
        transform: 'scale(0.92)'
      },
      '100%': {
        transform: 'scale(1)'
      }
    }
  };
};

exports.styles = styles;

var TouchRipple =
/*#__PURE__*/
function (_React$PureComponent) {
  (0, _inherits2.default)(TouchRipple, _React$PureComponent);

  function TouchRipple() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TouchRipple);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TouchRipple)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.ignoringMouseDown = false;
    _this.startTimer = null;
    _this.startTimerCommit = null;
    _this.state = {
      // eslint-disable-next-line react/no-unused-state
      nextKey: 0,
      ripples: []
    };

    _this.pulsate = function () {
      _this.start({}, {
        pulsate: true
      });
    };

    _this.start = function () {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var cb = arguments.length > 2 ? arguments[2] : undefined;
      var _options$pulsate = options.pulsate,
          pulsate = _options$pulsate === void 0 ? false : _options$pulsate,
          _options$center = options.center,
          center = _options$center === void 0 ? _this.props.center || options.pulsate : _options$center,
          _options$fakeElement = options.fakeElement,
          fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;

      if (event.type === 'mousedown' && _this.ignoringMouseDown) {
        _this.ignoringMouseDown = false;
        return;
      }

      if (event.type === 'touchstart') {
        _this.ignoringMouseDown = true;
      }

      var element = fakeElement ? null : _reactDom.default.findDOMNode((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
      var rect = element ? element.getBoundingClientRect() : {
        width: 0,
        height: 0,
        left: 0,
        top: 0
      }; // Get the size of the ripple

      var rippleX;
      var rippleY;
      var rippleSize;

      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
        rippleX = Math.round(rect.width / 2);
        rippleY = Math.round(rect.height / 2);
      } else {
        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
        rippleX = Math.round(clientX - rect.left);
        rippleY = Math.round(clientY - rect.top);
      }

      if (center) {
        rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.

        if (rippleSize % 2 === 0) {
          rippleSize += 1;
        }
      } else {
        var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
        var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
        rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
      } // Touche devices


      if (event.touches) {
        // Prepare the ripple effect.
        _this.startTimerCommit = function () {
          _this.startCommit({
            pulsate: pulsate,
            rippleX: rippleX,
            rippleY: rippleY,
            rippleSize: rippleSize,
            cb: cb
          });
        }; // Deplay the execution of the ripple effect.


        _this.startTimer = setTimeout(function () {
          if (_this.startTimerCommit) {
            _this.startTimerCommit();

            _this.startTimerCommit = null;
          }
        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
      } else {
        _this.startCommit({
          pulsate: pulsate,
          rippleX: rippleX,
          rippleY: rippleY,
          rippleSize: rippleSize,
          cb: cb
        });
      }
    };

    _this.startCommit = function (params) {
      var pulsate = params.pulsate,
          rippleX = params.rippleX,
          rippleY = params.rippleY,
          rippleSize = params.rippleSize,
          cb = params.cb;

      _this.setState(function (state) {
        return {
          nextKey: state.nextKey + 1,
          ripples: (0, _toConsumableArray2.default)(state.ripples).concat([_react.default.createElement(_Ripple.default, {
            key: state.nextKey,
            classes: _this.props.classes,
            timeout: {
              exit: DURATION,
              enter: DURATION
            },
            pulsate: pulsate,
            rippleX: rippleX,
            rippleY: rippleY,
            rippleSize: rippleSize
          })])
        };
      }, cb);
    };

    _this.stop = function (event, cb) {
      clearTimeout(_this.startTimer);
      var ripples = _this.state.ripples; // The touch interaction occurs too quickly.
      // We still want to show ripple effect.

      if (event.type === 'touchend' && _this.startTimerCommit) {
        event.persist();

        _this.startTimerCommit();

        _this.startTimerCommit = null;
        _this.startTimer = setTimeout(function () {
          _this.stop(event, cb);
        }, 0);
        return;
      }

      _this.startTimerCommit = null;

      if (ripples && ripples.length) {
        _this.setState({
          ripples: ripples.slice(1)
        }, cb);
      }
    };

    return _this;
  }

  (0, _createClass2.default)(TouchRipple, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.startTimer);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          center = _this$props.center,
          classes = _this$props.classes,
          className = _this$props.className,
          other = (0, _objectWithoutProperties2.default)(_this$props, ["center", "classes", "className"]);
      return _react.default.createElement(_TransitionGroup.default, (0, _extends2.default)({
        component: "span",
        enter: true,
        exit: true,
        className: (0, _classnames.default)(classes.root, className)
      }, other), this.state.ripples);
    }
  }]);
  return TouchRipple;
}(_react.default.PureComponent);

TouchRipple.propTypes =  true ? {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: _propTypes.default.bool,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css-api) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string
} : undefined;
TouchRipple.defaultProps = {
  center: false
};

var _default = (0, _withStyles.default)(styles, {
  flip: false,
  name: 'MuiTouchRipple'
})(TouchRipple);

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/createRippleHandler.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/createRippleHandler.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function createRippleHandler(instance, eventName, action, cb) {
  return function handleEvent(event) {
    if (cb) {
      cb.call(instance, event);
    }

    var ignore = false; // Ignore events that have been `event.preventDefault()` marked.

    if (event.defaultPrevented) {
      ignore = true;
    }

    if (instance.props.disableTouchRipple && eventName !== 'Blur') {
      ignore = true;
    }

    if (!ignore && instance.ripple) {
      instance.ripple[action](event);
    }

    if (typeof instance.props["on".concat(eventName)] === 'function') {
      instance.props["on".concat(eventName)](event);
    }

    return true;
  };
}

var _default = createRippleHandler;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/focusVisible.js":
/*!********************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/focusVisible.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.detectFocusVisible = detectFocusVisible;
exports.listenForFocusKeys = listenForFocusKeys;

var _keycode = _interopRequireDefault(__webpack_require__(/*! keycode */ "../node_modules/keycode/index.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _ownerDocument = _interopRequireDefault(__webpack_require__(/*! ../utils/ownerDocument */ "../node_modules/@material-ui/core/utils/ownerDocument.js"));

var internal = {
  focusKeyPressed: false,
  keyUpEventTimeout: -1
};

function detectFocusVisible(instance, element, callback) {
  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
   true ? (0, _warning.default)(instance.focusVisibleCheckTime, 'Material-UI: missing instance.focusVisibleCheckTime.') : undefined;
   true ? (0, _warning.default)(instance.focusVisibleMaxCheckTimes, 'Material-UI: missing instance.focusVisibleMaxCheckTimes.') : undefined;
  instance.focusVisibleTimeout = setTimeout(function () {
    var doc = (0, _ownerDocument.default)(element);

    if (internal.focusKeyPressed && (doc.activeElement === element || element.contains(doc.activeElement))) {
      callback();
    } else if (attempt < instance.focusVisibleMaxCheckTimes) {
      detectFocusVisible(instance, element, callback, attempt + 1);
    }
  }, instance.focusVisibleCheckTime);
}

var FOCUS_KEYS = ['tab', 'enter', 'space', 'esc', 'up', 'down', 'left', 'right'];

function isFocusKey(event) {
  return FOCUS_KEYS.indexOf((0, _keycode.default)(event)) > -1;
}

var handleKeyUpEvent = function handleKeyUpEvent(event) {
  if (isFocusKey(event)) {
    internal.focusKeyPressed = true; // Let's consider that the user is using a keyboard during a window frame of 1s.

    clearTimeout(internal.keyUpEventTimeout);
    internal.keyUpEventTimeout = setTimeout(function () {
      internal.focusKeyPressed = false;
    }, 1e3);
  }
};

function listenForFocusKeys(win) {
  // The event listener will only be added once per window.
  // Duplicate event listeners will be ignored by addEventListener.
  // Also, this logic is client side only, we don't need a teardown.
  win.addEventListener('keyup', handleKeyUpEvent);
}

/***/ }),

/***/ "../node_modules/@material-ui/core/ButtonBase/index.js":
/*!*************************************************************!*\
  !*** ../node_modules/@material-ui/core/ButtonBase/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _ButtonBase.default;
  }
});

var _ButtonBase = _interopRequireDefault(__webpack_require__(/*! ./ButtonBase */ "../node_modules/@material-ui/core/ButtonBase/ButtonBase.js"));

/***/ }),

/***/ "../node_modules/@material-ui/core/IconButton/IconButton.js":
/*!******************************************************************!*\
  !*** ../node_modules/@material-ui/core/IconButton/IconButton.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "../node_modules/classnames/index.js"));

var _withStyles = _interopRequireDefault(__webpack_require__(/*! ../styles/withStyles */ "../node_modules/@material-ui/core/styles/withStyles.js"));

var _colorManipulator = __webpack_require__(/*! ../styles/colorManipulator */ "../node_modules/@material-ui/core/styles/colorManipulator.js");

var _ButtonBase = _interopRequireDefault(__webpack_require__(/*! ../ButtonBase */ "../node_modules/@material-ui/core/ButtonBase/index.js"));

var _helpers = __webpack_require__(/*! ../utils/helpers */ "../node_modules/@material-ui/core/utils/helpers.js");

// @inheritedComponent ButtonBase
var styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      textAlign: 'center',
      flex: '0 0 auto',
      fontSize: theme.typography.pxToRem(24),
      padding: 12,
      borderRadius: '50%',
      overflow: 'visible',
      // Explicitly set the default value to solve a bug on IE11.
      color: theme.palette.action.active,
      transition: theme.transitions.create('background-color', {
        duration: theme.transitions.duration.shortest
      }),
      '&:hover': {
        backgroundColor: (0, _colorManipulator.fade)(theme.palette.action.active, theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        '@media (hover: none)': {
          backgroundColor: 'transparent'
        },
        '&$disabled': {
          backgroundColor: 'transparent'
        }
      },
      '&$disabled': {
        color: theme.palette.action.disabled
      }
    },

    /* Styles applied to the root element if `color="inherit"`. */
    colorInherit: {
      color: 'inherit'
    },

    /* Styles applied to the root element if `color="primary"`. */
    colorPrimary: {
      color: theme.palette.primary.main,
      '&:hover': {
        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        '@media (hover: none)': {
          backgroundColor: 'transparent'
        }
      }
    },

    /* Styles applied to the root element if `color="secondary"`. */
    colorSecondary: {
      color: theme.palette.secondary.main,
      '&:hover': {
        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        '@media (hover: none)': {
          backgroundColor: 'transparent'
        }
      }
    },

    /* Styles applied to the root element if `disabled={true}`. */
    disabled: {},

    /* Styles applied to the children container element. */
    label: {
      width: '100%',
      display: 'flex',
      alignItems: 'inherit',
      justifyContent: 'inherit'
    }
  };
};
/**
 * Refer to the [Icons](/style/icons) section of the documentation
 * regarding the available icon options.
 */


exports.styles = styles;

function IconButton(props) {
  var _classNames;

  var children = props.children,
      classes = props.classes,
      className = props.className,
      color = props.color,
      disabled = props.disabled,
      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "disabled"]);
  return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({
    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'default'), (0, _defineProperty2.default)(_classNames, classes.disabled, disabled), _classNames), className),
    centerRipple: true,
    focusRipple: true,
    disabled: disabled
  }, other), _react.default.createElement("span", {
    className: classes.label
  }, children));
}

IconButton.propTypes =  true ? {
  /**
   * The icon element.
   */
  children: _propTypes.default.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css-api) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */
  color: _propTypes.default.oneOf(['default', 'inherit', 'primary', 'secondary']),

  /**
   * If `true`, the button will be disabled.
   */
  disabled: _propTypes.default.bool,

  /**
   * If `true`, the ripple will be disabled.
   */
  disableRipple: _propTypes.default.bool
} : undefined;
IconButton.defaultProps = {
  color: 'default',
  disabled: false
};

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiIconButton'
})(IconButton);

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/IconButton/index.js":
/*!*************************************************************!*\
  !*** ../node_modules/@material-ui/core/IconButton/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _IconButton.default;
  }
});

var _IconButton = _interopRequireDefault(__webpack_require__(/*! ./IconButton */ "../node_modules/@material-ui/core/IconButton/IconButton.js"));

/***/ }),

/***/ "../node_modules/@material-ui/core/SvgIcon/SvgIcon.js":
/*!************************************************************!*\
  !*** ../node_modules/@material-ui/core/SvgIcon/SvgIcon.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "../node_modules/classnames/index.js"));

var _withStyles = _interopRequireDefault(__webpack_require__(/*! ../styles/withStyles */ "../node_modules/@material-ui/core/styles/withStyles.js"));

var _helpers = __webpack_require__(/*! ../utils/helpers */ "../node_modules/@material-ui/core/utils/helpers.js");

var styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      userSelect: 'none',
      width: '1em',
      height: '1em',
      display: 'inline-block',
      fill: 'currentColor',
      flexShrink: 0,
      fontSize: 24,
      transition: theme.transitions.create('fill', {
        duration: theme.transitions.duration.shorter
      })
    },

    /* Styles applied to the root element if `color="primary"`. */
    colorPrimary: {
      color: theme.palette.primary.main
    },

    /* Styles applied to the root element if `color="secondary"`. */
    colorSecondary: {
      color: theme.palette.secondary.main
    },

    /* Styles applied to the root element if `color="action"`. */
    colorAction: {
      color: theme.palette.action.active
    },

    /* Styles applied to the root element if `color="error"`. */
    colorError: {
      color: theme.palette.error.main
    },

    /* Styles applied to the root element if `color="disabled"`. */
    colorDisabled: {
      color: theme.palette.action.disabled
    },

    /* Styles applied to the root element if `fontSize="inherit"`. */
    fontSizeInherit: {
      fontSize: 'inherit'
    },

    /* Styles applied to the root element if `fontSize="small"`. */
    fontSizeSmall: {
      fontSize: 20
    },

    /* Styles applied to the root element if `fontSize="large"`. */
    fontSizeLarge: {
      fontSize: 36
    }
  };
};

exports.styles = styles;

function SvgIcon(props) {
  var _classNames;

  var children = props.children,
      classes = props.classes,
      className = props.className,
      color = props.color,
      Component = props.component,
      fontSize = props.fontSize,
      nativeColor = props.nativeColor,
      titleAccess = props.titleAccess,
      viewBox = props.viewBox,
      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "color", "component", "fontSize", "nativeColor", "titleAccess", "viewBox"]);
  return _react.default.createElement(Component, (0, _extends2.default)({
    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes["color".concat((0, _helpers.capitalize)(color))], color !== 'inherit'), (0, _defineProperty2.default)(_classNames, classes["fontSize".concat((0, _helpers.capitalize)(fontSize))], fontSize !== 'default'), _classNames), className),
    focusable: "false",
    viewBox: viewBox,
    color: nativeColor,
    "aria-hidden": titleAccess ? 'false' : 'true',
    role: titleAccess ? 'img' : 'presentation'
  }, other), children, titleAccess ? _react.default.createElement("title", null, titleAccess) : null);
}

SvgIcon.propTypes =  true ? {
  /**
   * Node passed into the SVG element.
   */
  children: _propTypes.default.node.isRequired,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css-api) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * You can use the `nativeColor` property to apply a color attribute to the SVG element.
   */
  color: _propTypes.default.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),

  /**
   * The component used for the root node.
   * Either a string to use a DOM element or a component.
   */
  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),

  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   */
  fontSize: _propTypes.default.oneOf(['inherit', 'default', 'small', 'large']),

  /**
   * Applies a color attribute to the SVG element.
   */
  nativeColor: _propTypes.default.string,

  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: _propTypes.default.string,

  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   */
  viewBox: _propTypes.default.string
} : undefined;
SvgIcon.defaultProps = {
  color: 'inherit',
  component: 'svg',
  fontSize: 'default',
  viewBox: '0 0 24 24'
};
SvgIcon.muiName = 'SvgIcon';

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiSvgIcon'
})(SvgIcon);

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/SvgIcon/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/core/SvgIcon/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _SvgIcon.default;
  }
});

var _SvgIcon = _interopRequireDefault(__webpack_require__(/*! ./SvgIcon */ "../node_modules/@material-ui/core/SvgIcon/SvgIcon.js"));

/***/ }),

/***/ "../node_modules/@material-ui/core/colors/common.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/core/colors/common.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var common = {
  black: '#000',
  white: '#fff'
};
var _default = common;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/colors/grey.js":
/*!********************************************************!*\
  !*** ../node_modules/@material-ui/core/colors/grey.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var grey = {
  50: '#fafafa',
  100: '#f5f5f5',
  200: '#eeeeee',
  300: '#e0e0e0',
  400: '#bdbdbd',
  500: '#9e9e9e',
  600: '#757575',
  700: '#616161',
  800: '#424242',
  900: '#212121',
  A100: '#d5d5d5',
  A200: '#aaaaaa',
  A400: '#303030',
  A700: '#616161'
};
var _default = grey;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/colors/indigo.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/core/colors/indigo.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var indigo = {
  50: '#e8eaf6',
  100: '#c5cae9',
  200: '#9fa8da',
  300: '#7986cb',
  400: '#5c6bc0',
  500: '#3f51b5',
  600: '#3949ab',
  700: '#303f9f',
  800: '#283593',
  900: '#1a237e',
  A100: '#8c9eff',
  A200: '#536dfe',
  A400: '#3d5afe',
  A700: '#304ffe'
};
var _default = indigo;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/colors/pink.js":
/*!********************************************************!*\
  !*** ../node_modules/@material-ui/core/colors/pink.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pink = {
  50: '#fce4ec',
  100: '#f8bbd0',
  200: '#f48fb1',
  300: '#f06292',
  400: '#ec407a',
  500: '#e91e63',
  600: '#d81b60',
  700: '#c2185b',
  800: '#ad1457',
  900: '#880e4f',
  A100: '#ff80ab',
  A200: '#ff4081',
  A400: '#f50057',
  A700: '#c51162'
};
var _default = pink;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/colors/red.js":
/*!*******************************************************!*\
  !*** ../node_modules/@material-ui/core/colors/red.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var red = {
  50: '#ffebee',
  100: '#ffcdd2',
  200: '#ef9a9a',
  300: '#e57373',
  400: '#ef5350',
  500: '#f44336',
  600: '#e53935',
  700: '#d32f2f',
  800: '#c62828',
  900: '#b71c1c',
  A100: '#ff8a80',
  A200: '#ff5252',
  A400: '#ff1744',
  A700: '#d50000'
};
var _default = red;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/colorManipulator.js":
/*!********************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/colorManipulator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertHexToRGB = convertHexToRGB;
exports.rgbToHex = rgbToHex;
exports.decomposeColor = decomposeColor;
exports.recomposeColor = recomposeColor;
exports.getContrastRatio = getContrastRatio;
exports.getLuminance = getLuminance;
exports.emphasize = emphasize;
exports.fade = fade;
exports.darken = darken;
exports.lighten = lighten;

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

/* eslint-disable no-use-before-define */

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
function clamp(value) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
   true ? (0, _warning.default)(value >= min && value <= max, "Material-UI: the value provided ".concat(value, " is out of range [").concat(min, ", ").concat(max, "].")) : undefined;

  if (value < min) {
    return min;
  }

  if (value > max) {
    return max;
  }

  return value;
}
/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */


function convertHexToRGB(color) {
  color = color.substr(1);
  var re = new RegExp(".{1,".concat(color.length / 3, "}"), 'g');
  var colors = color.match(re);

  if (colors && colors[0].length === 1) {
    colors = colors.map(function (n) {
      return n + n;
    });
  }

  return colors ? "rgb(".concat(colors.map(function (n) {
    return parseInt(n, 16);
  }).join(', '), ")") : '';
}
/**
 * Converts a color from CSS rgb format to CSS hex format.
 *
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */


function rgbToHex(color) {
  // Pass hex straight through
  if (color.indexOf('#') === 0) {
    return color;
  }

  function intToHex(c) {
    var hex = c.toString(16);
    return hex.length === 1 ? "0".concat(hex) : hex;
  }

  var _decomposeColor = decomposeColor(color),
      values = _decomposeColor.values;

  values = values.map(function (n) {
    return intToHex(n);
  });
  return "#".concat(values.join(''));
}
/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */


function decomposeColor(color) {
  if (color.charAt(0) === '#') {
    return decomposeColor(convertHexToRGB(color));
  }

  var marker = color.indexOf('(');
  var type = color.substring(0, marker);
  var values = color.substring(marker + 1, color.length - 1).split(',');
  values = values.map(function (value) {
    return parseFloat(value);
  });

  if (true) {
    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
      throw new Error(["Material-UI: unsupported `".concat(color, "` color."), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
    }
  }

  return {
    type: type,
    values: values
  };
}
/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */


function recomposeColor(color) {
  var type = color.type;
  var values = color.values;

  if (type.indexOf('rgb') !== -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map(function (n, i) {
      return i < 3 ? parseInt(n, 10) : n;
    });
  }

  if (type.indexOf('hsl') !== -1) {
    values[1] = "".concat(values[1], "%");
    values[2] = "".concat(values[2], "%");
  }

  return "".concat(color.type, "(").concat(values.join(', '), ")");
}
/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */


function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */


function getLuminance(color) {
  var decomposedColor = decomposeColor(color);

  if (decomposedColor.type.indexOf('rgb') !== -1) {
    var rgb = decomposedColor.values.map(function (val) {
      val /= 255; // normalized

      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
    }); // Truncate at 3 digits

    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
  } // else if (decomposedColor.type.indexOf('hsl') !== -1)


  return decomposedColor.values[2] / 100;
}
/**
 * Darken or lighten a colour, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */


function emphasize(color) {
  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}
/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */


function fade(color, value) {
   true ? (0, _warning.default)(color, "Material-UI: missing color argument in fade(".concat(color, ", ").concat(value, ").")) : undefined;
  if (!color) return color;
  color = decomposeColor(color);
  value = clamp(value);

  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }

  color.values[3] = value;
  return recomposeColor(color);
}
/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */


function darken(color, coefficient) {
   true ? (0, _warning.default)(color, "Material-UI: missing color argument in darken(".concat(color, ", ").concat(coefficient, ").")) : undefined;
  if (!color) return color;
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] *= 1 - coefficient;
    }
  }

  return recomposeColor(color);
}
/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */


function lighten(color, coefficient) {
   true ? (0, _warning.default)(color, "Material-UI: missing color argument in lighten(".concat(color, ", ").concat(coefficient, ").")) : undefined;
  if (!color) return color;
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  }

  return recomposeColor(color);
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createBreakpoints.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createBreakpoints.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createBreakpoints;
exports.keys = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

// Sorted ASC by size. That's important.
// It can't be configured as it's used statically for propTypes.
var keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.

exports.keys = keys;

function createBreakpoints(breakpoints) {
  var _breakpoints$values = breakpoints.values,
      values = _breakpoints$values === void 0 ? {
    xs: 0,
    sm: 600,
    md: 960,
    lg: 1280,
    xl: 1920
  } : _breakpoints$values,
      _breakpoints$unit = breakpoints.unit,
      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,
      _breakpoints$step = breakpoints.step,
      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,
      other = (0, _objectWithoutProperties2.default)(breakpoints, ["values", "unit", "step"]);

  function up(key) {
    var value = typeof values[key] === 'number' ? values[key] : key;
    return "@media (min-width:".concat(value).concat(unit, ")");
  }

  function down(key) {
    var endIndex = keys.indexOf(key) + 1;
    var upperbound = values[keys[endIndex]];

    if (endIndex === keys.length) {
      // xl down applies to all sizes
      return up('xs');
    }

    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;
    return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
  }

  function between(start, end) {
    var endIndex = keys.indexOf(end) + 1;

    if (endIndex === keys.length) {
      return up(start);
    }

    return "@media (min-width:".concat(values[start]).concat(unit, ") and ") + "(max-width:".concat(values[keys[endIndex]] - step / 100).concat(unit, ")");
  }

  function only(key) {
    return between(key, key);
  }

  function width(key) {
    return values[key];
  }

  return (0, _extends2.default)({
    keys: keys,
    values: values,
    up: up,
    down: down,
    between: between,
    only: only,
    width: width
  }, other);
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createGenerateClassName.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createGenerateClassName.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createGenerateClassName;

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

/* eslint-disable no-underscore-dangle */
var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;

function safePrefix(classNamePrefix) {
  var prefix = String(classNamePrefix);
   true ? (0, _warning.default)(prefix.length < 256, "Material-UI: the class name prefix is too long: ".concat(prefix, ".")) : undefined; // Sanitize the string as will be used to prefix the generated class name.

  return prefix.replace(escapeRegex, '-');
} // Returns a function which generates unique class names based on counters.
// When new generator function is created, rule counter is reset.
// We need to reset the rule counter for SSR for each request.
//
// It's inspired by
// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js


function createGenerateClassName() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,
      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,
      _options$productionPr = options.productionPrefix,
      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,
      _options$seed = options.seed,
      seed = _options$seed === void 0 ? '' : _options$seed;
  var ruleCounter = 0;
  return function (rule, styleSheet) {
    ruleCounter += 1;
     true ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : undefined; // Code branch the whole block at the expense of more code.

    if (dangerouslyUseGlobalCSS) {
      if (styleSheet) {
        if (styleSheet.options.name) {
          return "".concat(styleSheet.options.name, "-").concat(rule.key);
        }

        if (styleSheet.options.classNamePrefix && "development" !== 'production') {
          var prefix = safePrefix(styleSheet.options.classNamePrefix);
          return "".concat(prefix, "-").concat(rule.key, "-").concat(seed).concat(ruleCounter);
        }
      }

      if (false) {}

      return "".concat(rule.key, "-").concat(seed).concat(ruleCounter);
    }

    if (false) {}

    if (styleSheet && styleSheet.options.classNamePrefix) {
      var _prefix = safePrefix(styleSheet.options.classNamePrefix);

      return "".concat(_prefix, "-").concat(rule.key, "-").concat(seed).concat(ruleCounter);
    }

    return "".concat(rule.key, "-").concat(seed).concat(ruleCounter);
  };
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createMixins.js":
/*!****************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createMixins.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createMixins;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _extends3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

function createMixins(breakpoints, spacing, mixins) {
  var _toolbar;

  return (0, _extends3.default)({
    gutters: function gutters() {
      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return (0, _extends3.default)({
        paddingLeft: spacing.unit * 2,
        paddingRight: spacing.unit * 2
      }, styles, (0, _defineProperty2.default)({}, breakpoints.up('sm'), (0, _extends3.default)({
        paddingLeft: spacing.unit * 3,
        paddingRight: spacing.unit * 3
      }, styles[breakpoints.up('sm')])));
    },
    toolbar: (_toolbar = {
      minHeight: 56
    }, (0, _defineProperty2.default)(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), {
      minHeight: 48
    }), (0, _defineProperty2.default)(_toolbar, breakpoints.up('sm'), {
      minHeight: 64
    }), _toolbar)
  }, mixins);
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createMuiTheme.js":
/*!******************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createMuiTheme.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _deepmerge = _interopRequireDefault(__webpack_require__(/*! deepmerge */ "../node_modules/deepmerge/dist/es.js"));

var _isPlainObject = _interopRequireDefault(__webpack_require__(/*! is-plain-object */ "../node_modules/is-plain-object/index.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _createBreakpoints = _interopRequireDefault(__webpack_require__(/*! ./createBreakpoints */ "../node_modules/@material-ui/core/styles/createBreakpoints.js"));

var _createMixins = _interopRequireDefault(__webpack_require__(/*! ./createMixins */ "../node_modules/@material-ui/core/styles/createMixins.js"));

var _createPalette = _interopRequireDefault(__webpack_require__(/*! ./createPalette */ "../node_modules/@material-ui/core/styles/createPalette.js"));

var _createTypography = _interopRequireDefault(__webpack_require__(/*! ./createTypography */ "../node_modules/@material-ui/core/styles/createTypography.js"));

var _shadows = _interopRequireDefault(__webpack_require__(/*! ./shadows */ "../node_modules/@material-ui/core/styles/shadows.js"));

var _shape = _interopRequireDefault(__webpack_require__(/*! ./shape */ "../node_modules/@material-ui/core/styles/shape.js"));

var _spacing = _interopRequireDefault(__webpack_require__(/*! ./spacing */ "../node_modules/@material-ui/core/styles/spacing.js"));

var _transitions = _interopRequireDefault(__webpack_require__(/*! ./transitions */ "../node_modules/@material-ui/core/styles/transitions.js"));

var _zIndex = _interopRequireDefault(__webpack_require__(/*! ./zIndex */ "../node_modules/@material-ui/core/styles/zIndex.js"));

// < 1kb payload overhead when lodash/merge is > 3kb.
function createMuiTheme() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _options$breakpoints = options.breakpoints,
      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,
      _options$mixins = options.mixins,
      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,
      _options$palette = options.palette,
      paletteInput = _options$palette === void 0 ? {} : _options$palette,
      shadowsInput = options.shadows,
      _options$typography = options.typography,
      typographyInput = _options$typography === void 0 ? {} : _options$typography,
      other = (0, _objectWithoutProperties2.default)(options, ["breakpoints", "mixins", "palette", "shadows", "typography"]);
  var palette = (0, _createPalette.default)(paletteInput);
  var breakpoints = (0, _createBreakpoints.default)(breakpointsInput);
  var muiTheme = (0, _extends2.default)({
    breakpoints: breakpoints,
    direction: 'ltr',
    mixins: (0, _createMixins.default)(breakpoints, _spacing.default, mixinsInput),
    overrides: {},
    // Inject custom styles
    palette: palette,
    props: {},
    // Inject custom properties
    shadows: shadowsInput || _shadows.default,
    typography: (0, _createTypography.default)(palette, typographyInput)
  }, (0, _deepmerge.default)({
    shape: _shape.default,
    spacing: _spacing.default,
    transitions: _transitions.default,
    zIndex: _zIndex.default
  }, other, {
    isMergeableObject: _isPlainObject.default
  }));
   true ? (0, _warning.default)(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.') : undefined;
  return muiTheme;
}

var _default = createMuiTheme;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createPalette.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createPalette.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createPalette;
exports.dark = exports.light = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _deepmerge = _interopRequireDefault(__webpack_require__(/*! deepmerge */ "../node_modules/deepmerge/dist/es.js"));

var _indigo = _interopRequireDefault(__webpack_require__(/*! ../colors/indigo */ "../node_modules/@material-ui/core/colors/indigo.js"));

var _pink = _interopRequireDefault(__webpack_require__(/*! ../colors/pink */ "../node_modules/@material-ui/core/colors/pink.js"));

var _grey = _interopRequireDefault(__webpack_require__(/*! ../colors/grey */ "../node_modules/@material-ui/core/colors/grey.js"));

var _red = _interopRequireDefault(__webpack_require__(/*! ../colors/red */ "../node_modules/@material-ui/core/colors/red.js"));

var _common = _interopRequireDefault(__webpack_require__(/*! ../colors/common */ "../node_modules/@material-ui/core/colors/common.js"));

var _colorManipulator = __webpack_require__(/*! ./colorManipulator */ "../node_modules/@material-ui/core/styles/colorManipulator.js");

// < 1kb payload overhead when lodash/merge is > 3kb.
var light = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: 'rgba(0, 0, 0, 0.87)',
    // Secondary text.
    secondary: 'rgba(0, 0, 0, 0.54)',
    // Disabled text have even lower visual prominence.
    disabled: 'rgba(0, 0, 0, 0.38)',
    // Text hints.
    hint: 'rgba(0, 0, 0, 0.38)'
  },
  // The color used to divide different elements.
  divider: 'rgba(0, 0, 0, 0.12)',
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: _common.default.white,
    default: _grey.default[50]
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: 'rgba(0, 0, 0, 0.54)',
    // The color of an hovered action.
    hover: 'rgba(0, 0, 0, 0.08)',
    hoverOpacity: 0.08,
    // The color of a selected action.
    selected: 'rgba(0, 0, 0, 0.14)',
    // The color of a disabled action.
    disabled: 'rgba(0, 0, 0, 0.26)',
    // The background color of a disabled action.
    disabledBackground: 'rgba(0, 0, 0, 0.12)'
  }
};
exports.light = light;
var dark = {
  text: {
    primary: _common.default.white,
    secondary: 'rgba(255, 255, 255, 0.7)',
    disabled: 'rgba(255, 255, 255, 0.5)',
    hint: 'rgba(255, 255, 255, 0.5)',
    icon: 'rgba(255, 255, 255, 0.5)'
  },
  divider: 'rgba(255, 255, 255, 0.12)',
  background: {
    paper: _grey.default[800],
    default: '#303030'
  },
  action: {
    active: _common.default.white,
    hover: 'rgba(255, 255, 255, 0.1)',
    hoverOpacity: 0.1,
    selected: 'rgba(255, 255, 255, 0.2)',
    disabled: 'rgba(255, 255, 255, 0.3)',
    disabledBackground: 'rgba(255, 255, 255, 0.12)'
  }
};
exports.dark = dark;

function addLightOrDark(intent, direction, shade, tonalOffset) {
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === 'light') {
      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffset);
    } else if (direction === 'dark') {
      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffset * 1.5);
    }
  }
}

function createPalette(palette) {
  var _palette$primary = palette.primary,
      primary = _palette$primary === void 0 ? {
    light: _indigo.default[300],
    main: _indigo.default[500],
    dark: _indigo.default[700]
  } : _palette$primary,
      _palette$secondary = palette.secondary,
      secondary = _palette$secondary === void 0 ? {
    light: _pink.default.A200,
    main: _pink.default.A400,
    dark: _pink.default.A700
  } : _palette$secondary,
      _palette$error = palette.error,
      error = _palette$error === void 0 ? {
    light: _red.default[300],
    main: _red.default[500],
    dark: _red.default[700]
  } : _palette$error,
      _palette$type = palette.type,
      type = _palette$type === void 0 ? 'light' : _palette$type,
      _palette$contrastThre = palette.contrastThreshold,
      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,
      _palette$tonalOffset = palette.tonalOffset,
      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,
      other = (0, _objectWithoutProperties2.default)(palette, ["primary", "secondary", "error", "type", "contrastThreshold", "tonalOffset"]);

  function getContrastText(background) {
    // Use the same logic as
    // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
    // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
    var contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;

    if (true) {
      var contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);
       true ? (0, _warning.default)(contrast >= 3, ["Material-UI: the contrast ratio of ".concat(contrast, ":1 for ").concat(contrastText, " on ").concat(background), 'falls below the WACG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n')) : undefined;
    }

    return contrastText;
  }

  function augmentColor(color) {
    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;

    if (!color.main && color[mainShade]) {
      color.main = color[mainShade];
    }

    if ("development" !== 'production' && !color.main) {
      throw new Error(['Material-UI: the color provided to augmentColor(color) is invalid.', "The color object needs to have a `main` property or a `".concat(mainShade, "` property.")].join('\n'));
    }

    addLightOrDark(color, 'light', lightShade, tonalOffset);
    addLightOrDark(color, 'dark', darkShade, tonalOffset);

    if (!color.contrastText) {
      color.contrastText = getContrastText(color.main);
    }
  }

  augmentColor(primary);
  augmentColor(secondary, 'A400', 'A200', 'A700');
  augmentColor(error);
  var types = {
    dark: dark,
    light: light
  };
   true ? (0, _warning.default)(types[type], "Material-UI: the palette type `".concat(type, "` is not supported.")) : undefined;
  var paletteOutput = (0, _deepmerge.default)((0, _extends2.default)({
    // A collection of common colors.
    common: _common.default,
    // The palette type, can be light or dark.
    type: type,
    // The colors used to represent primary interface elements for a user.
    primary: primary,
    // The colors used to represent secondary interface elements for a user.
    secondary: secondary,
    // The colors used to represent interface elements that the user should be made aware of.
    error: error,
    // The grey colors.
    grey: _grey.default,
    // Used by `getContrastText()` to maximize the contrast between the background and
    // the text.
    contrastThreshold: contrastThreshold,
    // Take a background color and return the color of the text to maximize the contrast.
    getContrastText: getContrastText,
    // Generate a rich color object.
    augmentColor: augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: tonalOffset
  }, types[type]), other, {
    clone: false // No need to clone deep

  });
  return paletteOutput;
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/createTypography.js":
/*!********************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/createTypography.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createTypography;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _deepmerge = _interopRequireDefault(__webpack_require__(/*! deepmerge */ "../node_modules/deepmerge/dist/es.js"));

// < 1kb payload overhead when lodash/merge is > 3kb.
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}

function createTypography(palette, typography) {
  var _ref = typeof typography === 'function' ? typography(palette) : typography,
      _ref$fontFamily = _ref.fontFamily,
      fontFamily = _ref$fontFamily === void 0 ? '"Roboto", "Helvetica", "Arial", sans-serif' : _ref$fontFamily,
      _ref$fontSize = _ref.fontSize,
      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
      _ref$fontWeightLight = _ref.fontWeightLight,
      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,
      _ref$fontWeightRegula = _ref.fontWeightRegular,
      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,
      _ref$fontWeightMedium = _ref.fontWeightMedium,
      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,
      _ref$htmlFontSize = _ref.htmlFontSize,
      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,
      allVariants = _ref.allVariants,
      other = (0, _objectWithoutProperties2.default)(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "htmlFontSize", "allVariants"]);

  var coef = fontSize / 14;

  function pxToRem(value) {
    return "".concat(value / htmlFontSize * coef, "rem");
  }

  return (0, _deepmerge.default)({
    pxToRem: pxToRem,
    round: round,
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeightLight: fontWeightLight,
    fontWeightRegular: fontWeightRegular,
    fontWeightMedium: fontWeightMedium,
    display4: (0, _extends2.default)({
      fontSize: pxToRem(112),
      fontWeight: fontWeightLight,
      fontFamily: fontFamily,
      letterSpacing: '-.04em',
      lineHeight: "".concat(round(128 / 112), "em"),
      marginLeft: '-.04em',
      color: palette.text.secondary
    }, allVariants),
    display3: (0, _extends2.default)({
      fontSize: pxToRem(56),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      letterSpacing: '-.02em',
      lineHeight: "".concat(round(73 / 56), "em"),
      marginLeft: '-.02em',
      color: palette.text.secondary
    }, allVariants),
    display2: (0, _extends2.default)({
      fontSize: pxToRem(45),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(51 / 45), "em"),
      marginLeft: '-.02em',
      color: palette.text.secondary
    }, allVariants),
    display1: (0, _extends2.default)({
      fontSize: pxToRem(34),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(41 / 34), "em"),
      color: palette.text.secondary
    }, allVariants),
    headline: (0, _extends2.default)({
      fontSize: pxToRem(24),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(32.5 / 24), "em"),
      color: palette.text.primary
    }, allVariants),
    title: (0, _extends2.default)({
      fontSize: pxToRem(21),
      fontWeight: fontWeightMedium,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(24.5 / 21), "em"),
      color: palette.text.primary
    }, allVariants),
    subheading: (0, _extends2.default)({
      fontSize: pxToRem(16),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(24 / 16), "em"),
      color: palette.text.primary
    }, allVariants),
    body2: (0, _extends2.default)({
      fontSize: pxToRem(14),
      fontWeight: fontWeightMedium,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(24 / 14), "em"),
      color: palette.text.primary
    }, allVariants),
    body1: (0, _extends2.default)({
      fontSize: pxToRem(14),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(20.5 / 14), "em"),
      color: palette.text.primary
    }, allVariants),
    caption: (0, _extends2.default)({
      fontSize: pxToRem(12),
      fontWeight: fontWeightRegular,
      fontFamily: fontFamily,
      lineHeight: "".concat(round(16.5 / 12), "em"),
      color: palette.text.secondary
    }, allVariants),
    button: (0, _extends2.default)({
      fontSize: pxToRem(14),
      textTransform: 'uppercase',
      fontWeight: fontWeightMedium,
      fontFamily: fontFamily,
      color: palette.text.primary
    }, allVariants)
  }, other, {
    clone: false // No need to clone deep

  });
}

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/getStylesCreator.js":
/*!********************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/getStylesCreator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _deepmerge = _interopRequireDefault(__webpack_require__(/*! deepmerge */ "../node_modules/deepmerge/dist/es.js"));

// < 1kb payload overhead when lodash/merge is > 3kb.
// Support for the jss-expand plugin.
function arrayMerge(destination, source) {
  return source;
}

function getStylesCreator(stylesOrCreator) {
  var themingEnabled = typeof stylesOrCreator === 'function';
   true ? (0, _warning.default)((0, _typeof2.default)(stylesOrCreator) === 'object' || themingEnabled, ['Material-UI: the first argument provided to withStyles() is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\n')) : undefined;

  function create(theme, name) {
    var styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;

    if (!name || !theme.overrides || !theme.overrides[name]) {
      return styles;
    }

    var overrides = theme.overrides[name];
    var stylesWithOverrides = (0, _extends2.default)({}, styles);
    Object.keys(overrides).forEach(function (key) {
       true ? (0, _warning.default)(stylesWithOverrides[key], ['Material-UI: you are trying to override a style that does not exist.', "Fix the `".concat(key, "` key of `theme.overrides.").concat(name, "`.")].join('\n')) : undefined;
      stylesWithOverrides[key] = (0, _deepmerge.default)(stylesWithOverrides[key], overrides[key], {
        arrayMerge: arrayMerge
      });
    });
    return stylesWithOverrides;
  }

  return {
    create: create,
    options: {},
    themingEnabled: themingEnabled
  };
}

var _default = getStylesCreator;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/getThemeProps.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/getThemeProps.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* eslint-disable no-restricted-syntax */
function getThemeProps(params) {
  var theme = params.theme,
      name = params.name,
      props = params.props;

  if (!name || !theme.props || !theme.props[name]) {
    return props;
  } // Resolve default props, code borrow from React source.
  // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221


  var defaultProps = theme.props[name];
  var propName;

  for (propName in defaultProps) {
    if (props[propName] === undefined) {
      props[propName] = defaultProps[propName];
    }
  }

  return props;
}

var _default = getThemeProps;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/jssPreset.js":
/*!*************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/jssPreset.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _jssGlobal = _interopRequireDefault(__webpack_require__(/*! jss-global */ "../node_modules/jss-global/lib/index.js"));

var _jssNested = _interopRequireDefault(__webpack_require__(/*! jss-nested */ "../node_modules/jss-nested/lib/index.js"));

var _jssCamelCase = _interopRequireDefault(__webpack_require__(/*! jss-camel-case */ "../node_modules/jss-camel-case/lib/index.js"));

var _jssDefaultUnit = _interopRequireDefault(__webpack_require__(/*! jss-default-unit */ "../node_modules/jss-default-unit/lib/index.js"));

var _jssVendorPrefixer = _interopRequireDefault(__webpack_require__(/*! jss-vendor-prefixer */ "../node_modules/jss-vendor-prefixer/lib/index.js"));

var _jssPropsSort = _interopRequireDefault(__webpack_require__(/*! jss-props-sort */ "../node_modules/jss-props-sort/lib/index.js"));

// Subset of jss-preset-default with only the plugins the Material-UI
// components are using.
function jssPreset() {
  return {
    plugins: [(0, _jssGlobal.default)(), (0, _jssNested.default)(), (0, _jssCamelCase.default)(), (0, _jssDefaultUnit.default)(), (0, _jssVendorPrefixer.default)(), (0, _jssPropsSort.default)()]
  };
}

var _default = jssPreset;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/mergeClasses.js":
/*!****************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/mergeClasses.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _getDisplayName = _interopRequireDefault(__webpack_require__(/*! ../utils/getDisplayName */ "../node_modules/@material-ui/core/utils/getDisplayName.js"));

function mergeClasses() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var baseClasses = options.baseClasses,
      newClasses = options.newClasses,
      Component = options.Component,
      _options$noBase = options.noBase,
      noBase = _options$noBase === void 0 ? false : _options$noBase;

  if (!newClasses) {
    return baseClasses;
  }

  return (0, _extends2.default)({}, baseClasses, Object.keys(newClasses).reduce(function (accumulator, key) {
     true ? (0, _warning.default)(baseClasses[key] || noBase || !newClasses[key], ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not implemented in ".concat((0, _getDisplayName.default)(Component), "."), "You can only override one of the following: ".concat(Object.keys(baseClasses).join(','))].join('\n')) : undefined;
     true ? (0, _warning.default)(!newClasses[key] || typeof newClasses[key] === 'string', ["Material-UI: the key `".concat(key, "` ") + "provided to the classes property is not valid for ".concat((0, _getDisplayName.default)(Component), "."), "You need to provide a non empty string instead of: ".concat(newClasses[key], ".")].join('\n')) : undefined;

    if (newClasses[key]) {
      accumulator[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
    }

    return accumulator;
  }, {}));
}

var _default = mergeClasses;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/shadows.js":
/*!***********************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/shadows.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var shadowKeyUmbraOpacity = 0.2;
var shadowKeyPenumbraOpacity = 0.14;
var shadowAmbientShadowOpacity = 0.12;

function createShadow() {
  return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0, 0, 0, ").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0, 0, 0, ").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0, 0, 0, ").concat(shadowAmbientShadowOpacity, ")")].join(',');
}

var shadows = ['none', createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1), createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2), createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var _default = shadows;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/shape.js":
/*!*********************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/shape.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var shape = {
  borderRadius: 4
};
var _default = shape;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/spacing.js":
/*!***********************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/spacing.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var spacing = {
  // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
  // https://material.io/design/layout/understanding-layout.html#pixel-density
  unit: 8
};
var _default = spacing;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/themeListener.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/themeListener.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CHANNEL = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

// Same value used by react-jss
var CHANNEL = '__THEMING__';
exports.CHANNEL = CHANNEL;
var themeListener = {
  contextTypes: (0, _defineProperty2.default)({}, CHANNEL, _propTypes.default.object),
  initial: function initial(context) {
    if (!context[CHANNEL]) {
      return null;
    }

    return context[CHANNEL].getState();
  },
  subscribe: function subscribe(context, cb) {
    if (!context[CHANNEL]) {
      return null;
    }

    return context[CHANNEL].subscribe(cb);
  },
  unsubscribe: function unsubscribe(context, subscriptionId) {
    if (context[CHANNEL]) {
      context[CHANNEL].unsubscribe(subscriptionId);
    }
  }
};
var _default = themeListener;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/transitions.js":
/*!***************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/transitions.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

/* eslint-disable no-param-reassign */

/* eslint-disable no-restricted-globals */
// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
// to learn the context in which each easing should be used.
var easing = {
  // This is the most common easing curve.
  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
// to learn when use what timing

exports.easing = easing;
var duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
exports.duration = duration;

var formatMs = function formatMs(milliseconds) {
  return "".concat(Math.round(milliseconds), "ms");
};

exports.formatMs = formatMs;

var isString = function isString(value) {
  return typeof value === 'string';
};

exports.isString = isString;

var isNumber = function isNumber(value) {
  return !isNaN(parseFloat(value));
};
/**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */


exports.isNumber = isNumber;
var _default = {
  easing: easing,
  duration: duration,
  create: function create() {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _options$duration = options.duration,
        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,
        _options$easing = options.easing,
        easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,
        _options$delay = options.delay,
        delay = _options$delay === void 0 ? 0 : _options$delay,
        other = (0, _objectWithoutProperties2.default)(options, ["duration", "easing", "delay"]);
     true ? (0, _warning.default)(isString(props) || Array.isArray(props), 'Material-UI: argument "props" must be a string or Array.') : undefined;
     true ? (0, _warning.default)(isNumber(durationOption) || isString(durationOption), "Material-UI: argument \"duration\" must be a number or a string but found ".concat(durationOption, ".")) : undefined;
     true ? (0, _warning.default)(isString(easingOption), 'Material-UI: argument "easing" must be a string.') : undefined;
     true ? (0, _warning.default)(isNumber(delay) || isString(delay), 'Material-UI: argument "delay" must be a number or a string.') : undefined;
     true ? (0, _warning.default)(Object.keys(other).length === 0, "Material-UI: unrecognized argument(s) [".concat(Object.keys(other).join(','), "]")) : undefined;
    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
      return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
    }).join(',');
  },
  getAutoHeightDuration: function getAutoHeightDuration(height) {
    if (!height) {
      return 0;
    }

    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
  }
};
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/withStyles.js":
/*!**************************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/withStyles.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "../node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.sheetsManager = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

var _hoistNonReactStatics = _interopRequireDefault(__webpack_require__(/*! hoist-non-react-statics */ "../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"));

var _wrapDisplayName = _interopRequireDefault(__webpack_require__(/*! recompose/wrapDisplayName */ "../node_modules/recompose/wrapDisplayName.js"));

var _contextTypes = _interopRequireDefault(__webpack_require__(/*! react-jss/lib/contextTypes */ "../node_modules/react-jss/lib/contextTypes.js"));

var _jss = __webpack_require__(/*! jss */ "../node_modules/jss/lib/index.js");

var ns = _interopRequireWildcard(__webpack_require__(/*! react-jss/lib/ns */ "../node_modules/react-jss/lib/ns.js"));

var _jssPreset = _interopRequireDefault(__webpack_require__(/*! ./jssPreset */ "../node_modules/@material-ui/core/styles/jssPreset.js"));

var _mergeClasses = _interopRequireDefault(__webpack_require__(/*! ./mergeClasses */ "../node_modules/@material-ui/core/styles/mergeClasses.js"));

var _createMuiTheme = _interopRequireDefault(__webpack_require__(/*! ./createMuiTheme */ "../node_modules/@material-ui/core/styles/createMuiTheme.js"));

var _themeListener = _interopRequireDefault(__webpack_require__(/*! ./themeListener */ "../node_modules/@material-ui/core/styles/themeListener.js"));

var _createGenerateClassName = _interopRequireDefault(__webpack_require__(/*! ./createGenerateClassName */ "../node_modules/@material-ui/core/styles/createGenerateClassName.js"));

var _getStylesCreator = _interopRequireDefault(__webpack_require__(/*! ./getStylesCreator */ "../node_modules/@material-ui/core/styles/getStylesCreator.js"));

var _getDisplayName = _interopRequireDefault(__webpack_require__(/*! ../utils/getDisplayName */ "../node_modules/@material-ui/core/utils/getDisplayName.js"));

var _getThemeProps = _interopRequireDefault(__webpack_require__(/*! ./getThemeProps */ "../node_modules/@material-ui/core/styles/getThemeProps.js"));

// Default JSS instance.
var jss = (0, _jss.create)((0, _jssPreset.default)()); // Use a singleton or the provided one by the context.
//
// The counter-based approach doesn't tolerate any mistake.
// It's much safer to use the same counter everywhere.

var generateClassName = (0, _createGenerateClassName.default)(); // Global index counter to preserve source order.
// We create the style sheet during at the creation of the component,
// children are handled after the parents, so the order of style elements would be parent->child.
// It is a problem though when a parent passes a className
// which needs to override any childs styles.
// StyleSheet of the child has a higher specificity, because of the source order.
// So our solution is to render sheets them in the reverse order child->sheet, so
// that parent has a higher specificity.

var indexCounter = -10e10; // Exported for test purposes

var sheetsManager = new Map(); // We use the same empty object to ref count the styles that don't need a theme object.

exports.sheetsManager = sheetsManager;
var noopTheme = {}; // In order to have self-supporting components, we rely on default theme when not provided.

var defaultTheme;

function getDefaultTheme() {
  if (defaultTheme) {
    return defaultTheme;
  }

  defaultTheme = (0, _createMuiTheme.default)();
  return defaultTheme;
} // Link a style sheet with a component.
// It does not modify the component passed to it;
// instead, it returns a new component, with a `classes` property.


var withStyles = function withStyles(stylesOrCreator) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (Component) {
    var _options$withTheme = options.withTheme,
        withTheme = _options$withTheme === void 0 ? false : _options$withTheme,
        _options$flip = options.flip,
        flip = _options$flip === void 0 ? null : _options$flip,
        name = options.name,
        styleSheetOptions = (0, _objectWithoutProperties2.default)(options, ["withTheme", "flip", "name"]);
    var stylesCreator = (0, _getStylesCreator.default)(stylesOrCreator);
    var listenToTheme = stylesCreator.themingEnabled || withTheme || typeof name === 'string';
    indexCounter += 1;
    stylesCreator.options.index = indexCounter;
     true ? (0, _warning.default)(indexCounter < 0, ['Material-UI: you might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join(' ')) : undefined;

    var WithStyles =
    /*#__PURE__*/
    function (_React$Component) {
      (0, _inherits2.default)(WithStyles, _React$Component);

      function WithStyles(props, context) {
        var _this;

        (0, _classCallCheck2.default)(this, WithStyles);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WithStyles).call(this, props, context));
        _this.disableStylesGeneration = false;
        _this.jss = null;
        _this.sheetOptions = null;
        _this.sheetsManager = sheetsManager;
        _this.stylesCreatorSaved = null;
        _this.theme = null;
        _this.unsubscribeId = null;
        _this.state = {};
        _this.jss = context[ns.jss] || jss;
        var muiThemeProviderOptions = context.muiThemeProviderOptions;

        if (muiThemeProviderOptions) {
          if (muiThemeProviderOptions.sheetsManager) {
            _this.sheetsManager = muiThemeProviderOptions.sheetsManager;
          }

          _this.disableStylesGeneration = muiThemeProviderOptions.disableStylesGeneration;
        } // Attach the stylesCreator to the instance of the component as in the context
        // of react-hot-loader the hooks can be executed in a different closure context:
        // https://github.com/gaearon/react-hot-loader/blob/master/src/patch.dev.js#L107


        _this.stylesCreatorSaved = stylesCreator;
        _this.sheetOptions = (0, _extends2.default)({
          generateClassName: generateClassName
        }, context[ns.sheetOptions]); // We use || as the function call is lazy evaluated.

        _this.theme = listenToTheme ? _themeListener.default.initial(context) || getDefaultTheme() : noopTheme;

        _this.attach(_this.theme);

        _this.cacheClasses = {
          // Cache for the finalized classes value.
          value: null,
          // Cache for the last used classes prop pointer.
          lastProp: null,
          // Cache for the last used rendered classes pointer.
          lastJSS: {}
        };
        return _this;
      }

      (0, _createClass2.default)(WithStyles, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;

          if (!listenToTheme) {
            return;
          }

          this.unsubscribeId = _themeListener.default.subscribe(this.context, function (theme) {
            var oldTheme = _this2.theme;
            _this2.theme = theme;

            _this2.attach(_this2.theme); // Rerender the component so the underlying component gets the theme update.
            // By theme update we mean receiving and applying the new class names.


            _this2.setState({}, function () {
              _this2.detach(oldTheme);
            });
          });
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          // react-hot-loader specific logic
          if (this.stylesCreatorSaved === stylesCreator || "development" === 'production') {
            return;
          }

          this.detach(this.theme);
          this.stylesCreatorSaved = stylesCreator;
          this.attach(this.theme);
          this.forceUpdate();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.detach(this.theme);

          if (this.unsubscribeId !== null) {
            _themeListener.default.unsubscribe(this.context, this.unsubscribeId);
          }
        }
      }, {
        key: "getClasses",
        value: function getClasses() {
          // Tracks if either the rendered classes or classes prop has changed,
          // requiring the generation of a new finalized classes object.
          var generate = false;

          if (!this.disableStylesGeneration) {
            var sheetManager = this.sheetsManager.get(this.stylesCreatorSaved);
            var sheetsManagerTheme = sheetManager.get(this.theme);

            if (sheetsManagerTheme.sheet.classes !== this.cacheClasses.lastJSS) {
              this.cacheClasses.lastJSS = sheetsManagerTheme.sheet.classes;
              generate = true;
            }
          }

          if (this.props.classes !== this.cacheClasses.lastProp) {
            this.cacheClasses.lastProp = this.props.classes;
            generate = true;
          }

          if (generate) {
            this.cacheClasses.value = (0, _mergeClasses.default)({
              baseClasses: this.cacheClasses.lastJSS,
              newClasses: this.props.classes,
              Component: Component,
              noBase: this.disableStylesGeneration
            });
          }

          return this.cacheClasses.value;
        }
      }, {
        key: "attach",
        value: function attach(theme) {
          if (this.disableStylesGeneration) {
            return;
          }

          var stylesCreatorSaved = this.stylesCreatorSaved;
          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);

          if (!sheetManager) {
            sheetManager = new Map();
            this.sheetsManager.set(stylesCreatorSaved, sheetManager);
          }

          var sheetManagerTheme = sheetManager.get(theme);

          if (!sheetManagerTheme) {
            sheetManagerTheme = {
              refs: 0,
              sheet: null
            };
            sheetManager.set(theme, sheetManagerTheme);
          }

          if (sheetManagerTheme.refs === 0) {
            var styles = stylesCreatorSaved.create(theme, name);
            var meta = name;

            if ("development" !== 'production' && !meta) {
              meta = (0, _getDisplayName.default)(Component);
               true ? (0, _warning.default)(typeof meta === 'string', ['Material-UI: the component displayName is invalid. It needs to be a string.', "Please fix the following component: ".concat(Component, ".")].join('\n')) : undefined;
            }

            var sheet = this.jss.createStyleSheet(styles, (0, _extends2.default)({
              meta: meta,
              classNamePrefix: meta,
              flip: typeof flip === 'boolean' ? flip : theme.direction === 'rtl',
              link: false
            }, this.sheetOptions, stylesCreatorSaved.options, {
              name: name
            }, styleSheetOptions));
            sheetManagerTheme.sheet = sheet;
            sheet.attach();
            var sheetsRegistry = this.context[ns.sheetsRegistry];

            if (sheetsRegistry) {
              sheetsRegistry.add(sheet);
            }
          }

          sheetManagerTheme.refs += 1;
        }
      }, {
        key: "detach",
        value: function detach(theme) {
          if (this.disableStylesGeneration) {
            return;
          }

          var stylesCreatorSaved = this.stylesCreatorSaved;
          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);
          var sheetManagerTheme = sheetManager.get(theme);
          sheetManagerTheme.refs -= 1;

          if (sheetManagerTheme.refs === 0) {
            sheetManager.delete(theme);
            this.jss.removeStyleSheet(sheetManagerTheme.sheet);
            var sheetsRegistry = this.context[ns.sheetsRegistry];

            if (sheetsRegistry) {
              sheetsRegistry.remove(sheetManagerTheme.sheet);
            }
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props,
              classes = _this$props.classes,
              innerRef = _this$props.innerRef,
              other = (0, _objectWithoutProperties2.default)(_this$props, ["classes", "innerRef"]);
          var more = (0, _getThemeProps.default)({
            theme: this.theme,
            name: name,
            props: other
          }); // Provide the theme to the wrapped component.
          // So we don't have to use the `withTheme()` Higher-order Component.

          if (withTheme && !more.theme) {
            more.theme = this.theme;
          }

          return _react.default.createElement(Component, (0, _extends2.default)({}, more, {
            classes: this.getClasses(),
            ref: innerRef
          }));
        }
      }]);
      return WithStyles;
    }(_react.default.Component);

    WithStyles.propTypes =  true ? {
      /**
       * Override or extend the styles applied to the component.
       */
      classes: _propTypes.default.object,

      /**
       * Use that property to pass a ref callback to the decorated component.
       */
      innerRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
    } : undefined;
    WithStyles.contextTypes = (0, _extends2.default)({
      muiThemeProviderOptions: _propTypes.default.object
    }, _contextTypes.default, listenToTheme ? _themeListener.default.contextTypes : {});

    if (true) {
      WithStyles.displayName = (0, _wrapDisplayName.default)(Component, 'WithStyles');
    }

    (0, _hoistNonReactStatics.default)(WithStyles, Component);

    if (true) {
      // Exposed for test purposes.
      WithStyles.Naked = Component;
      WithStyles.options = options;
    }

    return WithStyles;
  };
};

var _default = withStyles;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/styles/zIndex.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/core/styles/zIndex.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// We need to centralize the zIndex definitions as they work
// like global values in the browser.
var zIndex = {
  mobileStepper: 1000,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
var _default = zIndex;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/utils/getDisplayName.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@material-ui/core/utils/getDisplayName.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFunctionName = getFunctionName;
exports.default = void 0;
// Fork of recompose/getDisplayName with added IE11 support
// Simplified polyfill for IE11 support
// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3
var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;

function getFunctionName(fn) {
  var match = "".concat(fn).match(fnNameMatchRegex);
  var name = match && match[1];
  return name || '';
}

function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  if (!Component) {
    return undefined;
  }

  return Component.displayName || Component.name || getFunctionName(Component) || 'Component';
}

var _default = getDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/utils/helpers.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/core/utils/helpers.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.capitalize = capitalize;
exports.contains = contains;
exports.findIndex = findIndex;
exports.find = find;
exports.createChainedFunction = createChainedFunction;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "../node_modules/warning/warning.js"));

function capitalize(string) {
  if ("development" !== 'production' && typeof string !== 'string') {
    throw new Error('Material-UI: capitalize(string) expects a string argument.');
  }

  return string.charAt(0).toUpperCase() + string.slice(1);
}

function contains(obj, pred) {
  return Object.keys(pred).every(function (key) {
    return obj.hasOwnProperty(key) && obj[key] === pred[key];
  });
}

function findIndex(arr, pred) {
  var predType = (0, _typeof2.default)(pred);

  for (var i = 0; i < arr.length; i += 1) {
    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {
      return i;
    }

    if (predType === 'object' && contains(arr[i], pred)) {
      return i;
    }

    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {
      return arr.indexOf(pred);
    }
  }

  return -1;
}

function find(arr, pred) {
  var index = findIndex(arr, pred);
  return index > -1 ? arr[index] : undefined;
}
/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @param {function} functions to chain
 * @returns {function|null}
 */


function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  return funcs.reduce(function (acc, func) {
    if (func == null) {
      return acc;
    }

     true ? (0, _warning.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : undefined;
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      acc.apply(this, args);
      func.apply(this, args);
    };
  }, function () {});
}

/***/ }),

/***/ "../node_modules/@material-ui/core/utils/ownerDocument.js":
/*!****************************************************************!*\
  !*** ../node_modules/@material-ui/core/utils/ownerDocument.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

var _default = ownerDocument;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/core/utils/ownerWindow.js":
/*!**************************************************************!*\
  !*** ../node_modules/@material-ui/core/utils/ownerWindow.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ownerDocument = _interopRequireDefault(__webpack_require__(/*! ./ownerDocument */ "../node_modules/@material-ui/core/utils/ownerDocument.js"));

function ownerWindow(node) {
  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var doc = (0, _ownerDocument.default)(node);
  return doc.defaultView || doc.parentView || fallback;
}

var _default = ownerWindow;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/Add.js":
/*!*************************************************!*\
  !*** ../node_modules/@material-ui/icons/Add.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'Add');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/Cancel.js":
/*!****************************************************!*\
  !*** ../node_modules/@material-ui/icons/Cancel.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'Cancel');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/Check.js":
/*!***************************************************!*\
  !*** ../node_modules/@material-ui/icons/Check.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
}), _react.default.createElement("path", {
  d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
})), 'Check');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/ChevronLeft.js":
/*!*********************************************************!*\
  !*** ../node_modules/@material-ui/icons/ChevronLeft.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'ChevronLeft');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/ChevronRight.js":
/*!**********************************************************!*\
  !*** ../node_modules/@material-ui/icons/ChevronRight.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'ChevronRight');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/Close.js":
/*!***************************************************!*\
  !*** ../node_modules/@material-ui/icons/Close.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'Close');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/Edit.js":
/*!**************************************************!*\
  !*** ../node_modules/@material-ui/icons/Edit.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'Edit');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/ExpandLess.js":
/*!********************************************************!*\
  !*** ../node_modules/@material-ui/icons/ExpandLess.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'ExpandLess');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/ExpandMore.js":
/*!********************************************************!*\
  !*** ../node_modules/@material-ui/icons/ExpandMore.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "../node_modules/@material-ui/icons/utils/createSvgIcon.js"));

var _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement("path", {
  d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), _react.default.createElement("path", {
  fill: "none",
  d: "M0 0h24v24H0z"
})), 'ExpandMore');

exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/getDisplayName.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/getDisplayName.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var getDisplayName = function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  if (!Component) {
    return undefined;
  }

  return Component.displayName || Component.name || 'Component';
};

var _default = getDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/pure.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/pure.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _shouldUpdate = _interopRequireDefault(__webpack_require__(/*! ./shouldUpdate */ "../node_modules/@material-ui/icons/node_modules/recompose/shouldUpdate.js"));

var _shallowEqual = _interopRequireDefault(__webpack_require__(/*! ./shallowEqual */ "../node_modules/@material-ui/icons/node_modules/recompose/shallowEqual.js"));

var _setDisplayName = _interopRequireDefault(__webpack_require__(/*! ./setDisplayName */ "../node_modules/@material-ui/icons/node_modules/recompose/setDisplayName.js"));

var _wrapDisplayName = _interopRequireDefault(__webpack_require__(/*! ./wrapDisplayName */ "../node_modules/@material-ui/icons/node_modules/recompose/wrapDisplayName.js"));

var pure = function pure(BaseComponent) {
  var hoc = (0, _shouldUpdate.default)(function (props, nextProps) {
    return !(0, _shallowEqual.default)(props, nextProps);
  });

  if (true) {
    return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
  }

  return hoc(BaseComponent);
};

var _default = pure;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/setDisplayName.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/setDisplayName.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _setStatic = _interopRequireDefault(__webpack_require__(/*! ./setStatic */ "../node_modules/@material-ui/icons/node_modules/recompose/setStatic.js"));

var setDisplayName = function setDisplayName(displayName) {
  return (0, _setStatic.default)('displayName', displayName);
};

var _default = setDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/setStatic.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/setStatic.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var setStatic = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */

    return BaseComponent;
  };
};

var _default = setStatic;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/shallowEqual.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/shallowEqual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _shallowEqual = _interopRequireDefault(__webpack_require__(/*! fbjs/lib/shallowEqual */ "../node_modules/fbjs/lib/shallowEqual.js"));

var _default = _shallowEqual.default;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/shouldUpdate.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/shouldUpdate.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ "../node_modules/@babel/runtime/helpers/inheritsLoose.js"));

var _react = __webpack_require__(/*! react */ "react");

var _setDisplayName = _interopRequireDefault(__webpack_require__(/*! ./setDisplayName */ "../node_modules/@material-ui/icons/node_modules/recompose/setDisplayName.js"));

var _wrapDisplayName = _interopRequireDefault(__webpack_require__(/*! ./wrapDisplayName */ "../node_modules/@material-ui/icons/node_modules/recompose/wrapDisplayName.js"));

var shouldUpdate = function shouldUpdate(test) {
  return function (BaseComponent) {
    var factory = (0, _react.createFactory)(BaseComponent);

    var ShouldUpdate =
    /*#__PURE__*/
    function (_Component) {
      (0, _inheritsLoose2.default)(ShouldUpdate, _Component);

      function ShouldUpdate() {
        return _Component.apply(this, arguments) || this;
      }

      var _proto = ShouldUpdate.prototype;

      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        return test(this.props, nextProps);
      };

      _proto.render = function render() {
        return factory(this.props);
      };

      return ShouldUpdate;
    }(_react.Component);

    if (true) {
      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
    }

    return ShouldUpdate;
  };
};

var _default = shouldUpdate;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/node_modules/recompose/wrapDisplayName.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@material-ui/icons/node_modules/recompose/wrapDisplayName.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _getDisplayName = _interopRequireDefault(__webpack_require__(/*! ./getDisplayName */ "../node_modules/@material-ui/icons/node_modules/recompose/getDisplayName.js"));

var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + "(" + (0, _getDisplayName.default)(BaseComponent) + ")";
};

var _default = wrapDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/@material-ui/icons/utils/createSvgIcon.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@material-ui/icons/utils/createSvgIcon.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _pure = _interopRequireDefault(__webpack_require__(/*! recompose/pure */ "../node_modules/@material-ui/icons/node_modules/recompose/pure.js"));

var _SvgIcon = _interopRequireDefault(__webpack_require__(/*! @material-ui/core/SvgIcon */ "../node_modules/@material-ui/core/SvgIcon/index.js"));

function createSvgIcon(path, displayName) {
  var Icon = function Icon(props) {
    return _react.default.createElement(_SvgIcon.default, props, path);
  };

  Icon.displayName = "".concat(displayName, "Icon");
  Icon = (0, _pure.default)(Icon);
  Icon.muiName = 'SvgIcon';
  return Icon;
}

;
var _default = createSvgIcon;
exports.default = _default;

/***/ }),

/***/ "../node_modules/axios/index.js":
/*!**************************************!*\
  !*** ../node_modules/axios/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "../node_modules/axios/lib/axios.js");

/***/ }),

/***/ "../node_modules/axios/lib/adapters/xhr.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/adapters/xhr.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "../node_modules/axios/lib/core/settle.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "../node_modules/axios/lib/helpers/buildURL.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "../node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "../node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "../node_modules/axios/lib/core/createError.js");
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ "../node_modules/axios/lib/helpers/btoa.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("development" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(/*! ./../helpers/cookies */ "../node_modules/axios/lib/helpers/cookies.js");

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "../node_modules/axios/lib/axios.js":
/*!******************************************!*\
  !*** ../node_modules/axios/lib/axios.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "../node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "../node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "../node_modules/axios/lib/core/Axios.js");
var defaults = __webpack_require__(/*! ./defaults */ "../node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "../node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "../node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "../node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "../node_modules/axios/lib/helpers/spread.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "../node_modules/axios/lib/cancel/Cancel.js":
/*!**************************************************!*\
  !*** ../node_modules/axios/lib/cancel/Cancel.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "../node_modules/axios/lib/cancel/CancelToken.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/cancel/CancelToken.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "../node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "../node_modules/axios/lib/cancel/isCancel.js":
/*!****************************************************!*\
  !*** ../node_modules/axios/lib/cancel/isCancel.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "../node_modules/axios/lib/core/Axios.js":
/*!***********************************************!*\
  !*** ../node_modules/axios/lib/core/Axios.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./../defaults */ "../node_modules/axios/lib/defaults.js");
var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "../node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "../node_modules/axios/lib/core/dispatchRequest.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "../node_modules/axios/lib/core/InterceptorManager.js":
/*!************************************************************!*\
  !*** ../node_modules/axios/lib/core/InterceptorManager.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "../node_modules/axios/lib/core/createError.js":
/*!*****************************************************!*\
  !*** ../node_modules/axios/lib/core/createError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "../node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "../node_modules/axios/lib/core/dispatchRequest.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/core/dispatchRequest.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "../node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "../node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "../node_modules/axios/lib/defaults.js");
var isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ "../node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ "../node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "../node_modules/axios/lib/core/enhanceError.js":
/*!******************************************************!*\
  !*** ../node_modules/axios/lib/core/enhanceError.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),

/***/ "../node_modules/axios/lib/core/settle.js":
/*!************************************************!*\
  !*** ../node_modules/axios/lib/core/settle.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "../node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "../node_modules/axios/lib/core/transformData.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/core/transformData.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "../node_modules/axios/lib/defaults.js":
/*!*********************************************!*\
  !*** ../node_modules/axios/lib/defaults.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(/*! ./utils */ "../node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "../node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "../node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "../node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "../node_modules/process/browser.js")))

/***/ }),

/***/ "../node_modules/axios/lib/helpers/bind.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/helpers/bind.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/btoa.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/helpers/btoa.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),

/***/ "../node_modules/axios/lib/helpers/buildURL.js":
/*!*****************************************************!*\
  !*** ../node_modules/axios/lib/helpers/buildURL.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/combineURLs.js":
/*!********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/combineURLs.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/cookies.js":
/*!****************************************************!*\
  !*** ../node_modules/axios/lib/helpers/cookies.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),

/***/ "../node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),

/***/ "../node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!****************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "../node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/parseHeaders.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/parseHeaders.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "../node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "../node_modules/axios/lib/helpers/spread.js":
/*!***************************************************!*\
  !*** ../node_modules/axios/lib/helpers/spread.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "../node_modules/axios/lib/utils.js":
/*!******************************************!*\
  !*** ../node_modules/axios/lib/utils.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "../node_modules/axios/lib/helpers/bind.js");
var isBuffer = __webpack_require__(/*! is-buffer */ "../node_modules/is-buffer/index.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),

/***/ "../node_modules/classnames/index.js":
/*!*******************************************!*\
  !*** ../node_modules/classnames/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "../node_modules/css-vendor/lib/camelize.js":
/*!**************************************************!*\
  !*** ../node_modules/css-vendor/lib/camelize.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = camelize;
var regExp = /[-\s]+(.)?/g;

/**
 * Convert dash separated strings to camel cased.
 *
 * @param {String} str
 * @return {String}
 */
function camelize(str) {
  return str.replace(regExp, toUpper);
}

function toUpper(match, c) {
  return c ? c.toUpperCase() : '';
}

/***/ }),

/***/ "../node_modules/css-vendor/lib/index.js":
/*!***********************************************!*\
  !*** ../node_modules/css-vendor/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;

var _prefix = __webpack_require__(/*! ./prefix */ "../node_modules/css-vendor/lib/prefix.js");

var _prefix2 = _interopRequireDefault(_prefix);

var _supportedProperty = __webpack_require__(/*! ./supported-property */ "../node_modules/css-vendor/lib/supported-property.js");

var _supportedProperty2 = _interopRequireDefault(_supportedProperty);

var _supportedValue = __webpack_require__(/*! ./supported-value */ "../node_modules/css-vendor/lib/supported-value.js");

var _supportedValue2 = _interopRequireDefault(_supportedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  prefix: _prefix2['default'],
  supportedProperty: _supportedProperty2['default'],
  supportedValue: _supportedValue2['default']
}; /**
    * CSS Vendor prefix detection and property feature testing.
    *
    * @copyright Oleg Slobodskoi 2015
    * @website https://github.com/jsstyles/css-vendor
    * @license MIT
    */

exports.prefix = _prefix2['default'];
exports.supportedProperty = _supportedProperty2['default'];
exports.supportedValue = _supportedValue2['default'];

/***/ }),

/***/ "../node_modules/css-vendor/lib/prefix.js":
/*!************************************************!*\
  !*** ../node_modules/css-vendor/lib/prefix.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isInBrowser = __webpack_require__(/*! is-in-browser */ "../node_modules/is-in-browser/dist/module.js");

var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var js = ''; /**
              * Export javascript style and css style vendor prefixes.
              * Based on "transform" support test.
              */

var css = '';

// We should not do anything if required serverside.
if (_isInBrowser2['default']) {
  // Order matters. We need to check Webkit the last one because
  // other vendors use to add Webkit prefixes to some properties
  var jsCssMap = {
    Moz: '-moz-',
    // IE did it wrong again ...
    ms: '-ms-',
    O: '-o-',
    Webkit: '-webkit-'
  };
  var style = document.createElement('p').style;
  var testProp = 'Transform';

  for (var key in jsCssMap) {
    if (key + testProp in style) {
      js = key;
      css = jsCssMap[key];
      break;
    }
  }
}

/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String}}
 * @api public
 */
exports['default'] = { js: js, css: css };

/***/ }),

/***/ "../node_modules/css-vendor/lib/supported-property.js":
/*!************************************************************!*\
  !*** ../node_modules/css-vendor/lib/supported-property.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = supportedProperty;

var _isInBrowser = __webpack_require__(/*! is-in-browser */ "../node_modules/is-in-browser/dist/module.js");

var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

var _prefix = __webpack_require__(/*! ./prefix */ "../node_modules/css-vendor/lib/prefix.js");

var _prefix2 = _interopRequireDefault(_prefix);

var _camelize = __webpack_require__(/*! ./camelize */ "../node_modules/css-vendor/lib/camelize.js");

var _camelize2 = _interopRequireDefault(_camelize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var el = void 0;
var cache = {};

if (_isInBrowser2['default']) {
  el = document.createElement('p');

  /**
   * We test every property on vendor prefix requirement.
   * Once tested, result is cached. It gives us up to 70% perf boost.
   * http://jsperf.com/element-style-object-access-vs-plain-object
   *
   * Prefill cache with known css properties to reduce amount of
   * properties we need to feature test at runtime.
   * http://davidwalsh.name/vendor-prefix
   */
  var computed = window.getComputedStyle(document.documentElement, '');
  for (var key in computed) {
    if (!isNaN(key)) cache[computed[key]] = computed[key];
  }
}

/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @return {String|Boolean}
 * @api public
 */
function supportedProperty(prop) {
  // For server-side rendering.
  if (!el) return prop;

  // We have not tested this prop yet, lets do the test.
  if (cache[prop] != null) return cache[prop];

  // Camelization is required because we can't test using
  // css syntax for e.g. in FF.
  // Test if property is supported as it is.
  if ((0, _camelize2['default'])(prop) in el.style) {
    cache[prop] = prop;
  }
  // Test if property is supported with vendor prefix.
  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {
      cache[prop] = _prefix2['default'].css + prop;
    } else {
      cache[prop] = false;
    }

  return cache[prop];
}

/***/ }),

/***/ "../node_modules/css-vendor/lib/supported-value.js":
/*!*********************************************************!*\
  !*** ../node_modules/css-vendor/lib/supported-value.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = supportedValue;

var _isInBrowser = __webpack_require__(/*! is-in-browser */ "../node_modules/is-in-browser/dist/module.js");

var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

var _prefix = __webpack_require__(/*! ./prefix */ "../node_modules/css-vendor/lib/prefix.js");

var _prefix2 = _interopRequireDefault(_prefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var cache = {};
var el = void 0;

if (_isInBrowser2['default']) el = document.createElement('p');

/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */
function supportedValue(property, value) {
  // For server-side rendering.
  if (!el) return value;

  // It is a string or a number as a string like '1'.
  // We want only prefixable values here.
  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;

  var cacheKey = property + value;

  if (cache[cacheKey] != null) return cache[cacheKey];

  // IE can even throw an error in some cases, for e.g. style.content = 'bar'
  try {
    // Test value as it is.
    el.style[property] = value;
  } catch (err) {
    cache[cacheKey] = false;
    return false;
  }

  // Value is supported as it is.
  if (el.style[property] !== '') {
    cache[cacheKey] = value;
  } else {
    // Test value with vendor prefix.
    value = _prefix2['default'].css + value;

    // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
    if (value === '-ms-flex') value = '-ms-flexbox';

    el.style[property] = value;

    // Value is supported with vendor prefix.
    if (el.style[property] !== '') cache[cacheKey] = value;
  }

  if (!cache[cacheKey]) cache[cacheKey] = false;

  // Reset style value.
  el.style[property] = '';

  return cache[cacheKey];
}

/***/ }),

/***/ "../node_modules/deepmerge/dist/es.js":
/*!********************************************!*\
  !*** ../node_modules/deepmerge/dist/es.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var isMergeableObject = function isMergeableObject(value) {
	return isNonNullObject(value)
		&& !isSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue === '[object RegExp]'
		|| stringValue === '[object Date]'
		|| isReactElement(value)
}

// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
	return value.$$typeof === REACT_ELEMENT_TYPE
}

function emptyTarget(val) {
	return Array.isArray(val) ? [] : {}
}

function cloneUnlessOtherwiseSpecified(value, options) {
	return (options.clone !== false && options.isMergeableObject(value))
		? deepmerge(emptyTarget(value), value, options)
		: value
}

function defaultArrayMerge(target, source, options) {
	return target.concat(source).map(function(element) {
		return cloneUnlessOtherwiseSpecified(element, options)
	})
}

function mergeObject(target, source, options) {
	var destination = {};
	if (options.isMergeableObject(target)) {
		Object.keys(target).forEach(function(key) {
			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
		});
	}
	Object.keys(source).forEach(function(key) {
		if (!options.isMergeableObject(source[key]) || !target[key]) {
			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
		} else {
			destination[key] = deepmerge(target[key], source[key], options);
		}
	});
	return destination
}

function deepmerge(target, source, options) {
	options = options || {};
	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
	options.isMergeableObject = options.isMergeableObject || isMergeableObject;

	var sourceIsArray = Array.isArray(source);
	var targetIsArray = Array.isArray(target);
	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

	if (!sourceAndTargetTypesMatch) {
		return cloneUnlessOtherwiseSpecified(source, options)
	} else if (sourceIsArray) {
		return options.arrayMerge(target, source, options)
	} else {
		return mergeObject(target, source, options)
	}
}

deepmerge.all = function deepmergeAll(array, options) {
	if (!Array.isArray(array)) {
		throw new Error('first argument should be an array')
	}

	return array.reduce(function(prev, next) {
		return deepmerge(prev, next, options)
	}, {})
};

var deepmerge_1 = deepmerge;

/* harmony default export */ __webpack_exports__["default"] = (deepmerge_1);


/***/ }),

/***/ "../node_modules/engine/SharedResources.js":
/*!*************************************************!*\
  !*** ../node_modules/engine/SharedResources.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var GPUDevice_1 = __webpack_require__(/*! ./rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var SharedResources = /** @class */ (function () {
    function SharedResources() {
    }
    SharedResources.getProgram = function (device, vertexCode, fragmentCode, attributeLayout) {
        var key = vertexCode + '\x1D' + fragmentCode + '\x1D' + attributeLayout.map(function (a) { return a.name + ':' + a.type; }).join('\x1F');
        var gpuProgram = this.programs[key];
        if (gpuProgram == null) {
            gpuProgram = device.createProgram(vertexCode, fragmentCode, attributeLayout);
            this.programs[key] = gpuProgram;
        }
        return gpuProgram;
    };
    SharedResources.deleteProgram = function (vertexCode, fragmentCode, attributeLayout) {
        var key = vertexCode + '\x1D' + fragmentCode + '\x1D' + attributeLayout.map(function (a) { return a.name + ':' + a.type; }).join('\x1F');
        var gpuProgram = this.programs[key];
        if (gpuProgram != null) {
            gpuProgram.delete();
            delete this.programs[key];
            return true;
        }
        return false;
    };
    SharedResources.getTexture = function (device, key, descriptor) {
        var gpuTexture = this.textures[key];
        if (gpuTexture == null) {
            gpuTexture = device.createTexture(descriptor);
            this.textures[key] = gpuTexture;
        }
        return gpuTexture;
    };
    SharedResources.deleteTexture = function (key) {
        var gpuTexture = this.textures[key];
        if (gpuTexture != null) {
            gpuTexture.delete();
            delete this.textures[key];
            return true;
        }
        return false;
    };
    SharedResources.getBuffer = function (device, key, descriptor) {
        var gpuBuffer = this.buffers[key];
        if (gpuBuffer == null) {
            gpuBuffer = device.createBuffer(descriptor);
            this.buffers[key] = gpuBuffer;
        }
        return gpuBuffer;
    };
    SharedResources.deleteBuffer = function (key) {
        var gpuBuffer = this.buffers[key];
        if (gpuBuffer != null) {
            gpuBuffer.delete();
            delete this.buffers[key];
            return true;
        }
        return false;
    };
    SharedResources.initialize = function (device) {
        this.quadIndexBuffer = device.createIndexBuffer({
            data: new Uint8Array([
                0, 1, 2,
                0, 3, 1
            ])
        });
        this.unitQuadVertexBuffer = device.createBuffer({
            data: new Float32Array([
                -1.0, -1.0,
                1.0, 1.0,
                -1.0, 1.0,
                1.0, -1.0,
            ]),
        });
        this.unitQuadVertexState = device.createVertexState({
            indexBuffer: this.quadIndexBuffer,
            attributeLayout: this.quadAttributeLayout,
            attributes: {
                'position': {
                    buffer: this.unitQuadVertexBuffer,
                    offsetBytes: 0,
                    strideBytes: 2 * 4
                }
            }
        });
        this.quad1x1VertexBuffer = device.createBuffer({
            data: new Float32Array([
                0, 0,
                1.0, 1.0,
                0, 1.0,
                1.0, 0,
            ]),
        });
        this.quad1x1VertexState = device.createVertexState({
            indexBuffer: this.quadIndexBuffer,
            attributeLayout: this.quadAttributeLayout,
            attributes: {
                'position': {
                    buffer: this.quad1x1VertexBuffer,
                    offsetBytes: 0,
                    strideBytes: 2 * 4
                }
            }
        });
    };
    SharedResources.release = function () {
        var e_1, _a, e_2, _b, e_3, _c;
        this.quadIndexBuffer.delete();
        this.quadIndexBuffer = null;
        this.unitQuadVertexState.delete();
        this.unitQuadVertexState = null;
        this.unitQuadVertexBuffer.delete();
        this.unitQuadVertexBuffer = null;
        this.quad1x1VertexState.delete();
        this.quad1x1VertexState = null;
        this.quad1x1VertexBuffer.delete();
        this.quad1x1VertexBuffer = null;
        try {
            for (var _d = __values(Object.keys(this.programs)), _e = _d.next(); !_e.done; _e = _d.next()) {
                var key = _e.value;
                this.programs[key].delete();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.programs = {};
        try {
            for (var _f = __values(Object.keys(this.textures)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var key = _g.value;
                this.textures[key].delete();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        this.textures = {};
        try {
            for (var _h = __values(Object.keys(this.buffers)), _j = _h.next(); !_j.done; _j = _h.next()) {
                var key = _j.value;
                this.buffers[key].delete();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.buffers = {};
    };
    SharedResources.quadAttributeLayout = [
        { name: 'position', type: GPUDevice_1.AttributeType.VEC2 },
    ];
    SharedResources.programs = {};
    SharedResources.textures = {};
    SharedResources.buffers = {};
    return SharedResources;
}());
exports.SharedResources = SharedResources;
exports.default = SharedResources;


/***/ }),

/***/ "../node_modules/engine/animation/Animator.js":
/*!****************************************************!*\
  !*** ../node_modules/engine/animation/Animator.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Physically based animation
 *
 * Todo:
 * - Improve data structures:
 *      - Can we avoid brute-force searches? (We should store hidden fields on the object, ugly but fast)
 *          - Risky if the object might iterate over keys
 *      - We could have an 'Animatable' type which could codify things like velocity
 *          - Less flexible more more powerful
 * - Parameterize springs by duration and normalized dampening
 * - Replace energy threshold with some user-controlled parameter?
 * - Implement traditional easing via step functions
 * - For fixed time springs we can implement a fix/physical blended version of springStep, that lerps to 0 as t -> duration
 */
var Animator = /** @class */ (function () {
    function Animator() {
    }
    Animator.springTo = function (object, fieldTargets, parameters, velocity) {
        // handle multiple types of spring parameters
        var springParameters = parameters instanceof Object ? parameters : {
            tension: parameters,
            friction: Math.sqrt(parameters) * 2
        };
        Animator.animation(object, fieldTargets, Animator.stringStep, springParameters, true, velocity);
    };
    Animator.spring = function (object, fieldTargets, parameters, velocity) {
        // handle multiple types of spring parameters
        var springParameters = parameters instanceof Object ? parameters : {
            tension: parameters,
            friction: Math.sqrt(parameters) * 2
        };
        Animator.animation(object, fieldTargets, Animator.stringStep, springParameters, false, velocity);
    };
    Animator.animation = function (object, fieldTargets, step, parameters, stopOnComplete, velocity) {
        var e_1, _a;
        var t_s = window.performance.now() / 1000;
        var entry = Animator.getActive(object);
        if (entry == null) {
            entry = {
                object: object,
                animatingFields: {},
            };
            Animator.active.add(entry);
        }
        var fields = Object.keys(fieldTargets);
        try {
            for (var fields_1 = __values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {
                var field = fields_1_1.value;
                var target = fieldTargets[field];
                var current = object[field];
                var animation = entry.animatingFields[field];
                // create or update dynamic motion fields
                if (animation == null) {
                    animation = {
                        state: {
                            // initial state
                            x: target - current,
                            v: velocity == null ? 0 : velocity,
                            pe: 0,
                            t0: t_s,
                            lastT: t_s,
                        },
                        target: fieldTargets[field],
                        step: step,
                        parameters: parameters,
                        stopOnComplete: stopOnComplete,
                    };
                    entry.animatingFields[field] = animation;
                }
                else {
                    // animation is already active, update state
                    animation.state.x = target - current;
                    animation.state.v = velocity == null ? animation.state.v : velocity;
                    animation.state.t0 = t_s; // set t0 so easings are reset
                    animation.target = target;
                    animation.step = step;
                    animation.parameters = parameters;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Animator.stop = function (object, fields) {
        var e_2, _a;
        if (fields == null) {
            Animator.removeActive(object);
        }
        else {
            var entry = Animator.getActive(object);
            if (entry === null)
                return;
            var fieldNames = Array.isArray(fields) ? fields : Object.keys(fields);
            try {
                for (var fieldNames_1 = __values(fieldNames), fieldNames_1_1 = fieldNames_1.next(); !fieldNames_1_1.done; fieldNames_1_1 = fieldNames_1.next()) {
                    var field = fieldNames_1_1.value;
                    delete entry.animatingFields[field];
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (fieldNames_1_1 && !fieldNames_1_1.done && (_a = fieldNames_1.return)) _a.call(fieldNames_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
            // if there's no field animations left then remove the entry
            if (Object.keys(entry.animatingFields).length === 0) {
                Animator.active.delete(entry);
            }
        }
    };
    Animator.frame = function (time_s) {
        var e_3, _a, e_4, _b, e_5, _c;
        if (time_s === void 0) { time_s = window.performance.now() / 1000; }
        var steppedAnimationCount = 0;
        try {
            for (var _d = __values(Animator.active), _e = _d.next(); !_e.done; _e = _d.next()) {
                var entry = _e.value;
                var object = entry.object;
                var animatingFields = Object.keys(entry.animatingFields);
                try {
                    for (var animatingFields_1 = __values(animatingFields), animatingFields_1_1 = animatingFields_1.next(); !animatingFields_1_1.done; animatingFields_1_1 = animatingFields_1.next()) {
                        var field = animatingFields_1_1.value;
                        var animation = entry.animatingFields[field];
                        animation.state.x = animation.target - object[field];
                        animation.step(time_s, animation.state, animation.parameters);
                        object[field] = animation.target - animation.state.x;
                        steppedAnimationCount++;
                        // in joules
                        var kineticEnergy = .5 * animation.state.v * animation.state.v;
                        var totalEnergy = animation.state.pe + kineticEnergy;
                        // @! magic number: can we derive a condition that's linked to user-known properties
                        if (animation.stopOnComplete && totalEnergy < 0.000001) {
                            delete entry.animatingFields[field];
                            object[field] = animation.target;
                            Animator.fieldComplete(object, field);
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (animatingFields_1_1 && !animatingFields_1_1.done && (_b = animatingFields_1.return)) _b.call(animatingFields_1);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
                // if there's no field animations left then remove the entry
                if (Object.keys(entry.animatingFields).length === 0) {
                    Animator.active.delete(entry);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            // execute post-step callbacks
            for (var _f = __values(Animator.stepCallbacks), _g = _f.next(); !_g.done; _g = _f.next()) {
                var callback = _g.value;
                callback(steppedAnimationCount);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    Animator.activeAnimationCount = function () {
        return Animator.active.size;
    };
    Animator.addAnimationCompleteCallback = function (object, field, callback, once) {
        if (once === void 0) { once = true; }
        Animator.animationCompleteCallbacks.add({
            callback: callback,
            object: object,
            field: field,
            once: once,
        });
    };
    Animator.removeAnimationCompleteCallbacks = function (object, field, callback) {
        var e_6, _a;
        var removed = 0;
        try {
            for (var _b = __values(Animator.animationCompleteCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (e.callback === callback &&
                    e.field === field &&
                    e.object === object) {
                    Animator.animationCompleteCallbacks.delete(e);
                    removed++;
                }
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_6) throw e_6.error; }
        }
        return removed > 0;
    };
    /**
     * It's often useful to be able to execute code straight after the global animation step has finished
     */
    Animator.addStepCompleteCallback = function (callback) {
        Animator.stepCallbacks.add(callback);
    };
    Animator.removeStepCompleteCallback = function (callback) {
        return Animator.stepCallbacks.delete(callback);
    };
    Animator.fieldComplete = function (object, field) {
        var e_7, _a;
        try {
            for (var _b = __values(this.animationCompleteCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (e.object === object && e.field === field) {
                    // delete the callback if set to 'once'
                    if (e.once) {
                        Animator.animationCompleteCallbacks.delete(e);
                    }
                    e.callback(object);
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
    };
    Animator.stringStep = function (t_s, state, parameters) {
        var dt_s = t_s - state.lastT;
        state.lastT = t_s;
        // analytic integration (unconditionally stable)
        // references:
        // http://mathworld.wolfram.com/OverdampedSimpleHarmonicMotion.html
        // http://mathworld.wolfram.com/CriticallyDampedSimpleHarmonicMotion.html
        var k = parameters.tension;
        var f = parameters.friction;
        var t = dt_s;
        var v0 = state.v;
        var x0 = state.x;
        var critical = k * 4 - f * f;
        if (critical === 0) {
            // critically damped
            var w = Math.sqrt(k);
            var A = x0;
            var B = v0 + w * x0;
            var e = Math.exp(-w * t);
            state.x = (A + B * t) * e;
            state.v = (B - w * (A + B * t)) * e;
        }
        else if (critical <= 0) {
            // over-damped
            var sqrt = Math.sqrt(-critical);
            var rp = 0.5 * (-f + sqrt);
            var rn = 0.5 * (-f - sqrt);
            var B = (rn * x0 - v0) / (rn - rp);
            var A = x0 - B;
            var en = Math.exp(rn * t);
            var ep = Math.exp(rp * t);
            state.x = A * en + B * ep;
            state.v = A * rn * en + B * rp * ep;
        }
        else {
            // under-damped
            var a = -f / 2;
            var b = Math.sqrt(critical * 0.25);
            var phaseShift = Math.atan(b / ((v0 / x0) - a));
            var A = x0 / Math.sin(phaseShift);
            var e = Math.exp(a * t);
            var s = Math.sin(b * t + phaseShift);
            var c = Math.cos(b * t + phaseShift);
            state.x = A * e * s;
            state.v = A * e * (a * s + b * c);
        }
        state.pe = 0.5 * k * state.x * state.x;
    };
    Animator.getActive = function (object) {
        var e_8, _a;
        try {
            for (var _b = __values(Animator.active), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (object === entry.object)
                    return entry;
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        return null;
    };
    Animator.removeActive = function (object) {
        var e_9, _a;
        try {
            for (var _b = __values(Animator.active), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (entry.object === object) {
                    Animator.active.delete(entry);
                    return;
                }
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
    };
    Animator.active = new Set();
    Animator.stepCallbacks = new Set();
    Animator.animationCompleteCallbacks = new Set();
    return Animator;
}());
exports.Animator = Animator;
exports.default = Animator;


/***/ }),

/***/ "../node_modules/engine/ds/UsageCache.js":
/*!***********************************************!*\
  !*** ../node_modules/engine/ds/UsageCache.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Useful for exploiting coherence between frames
 * - A 'usage cache' determines which objects can be reused and which objects can be released between frames
 */
var UsageCache = /** @class */ (function () {
    function UsageCache() {
        this.cache = {};
        this.count = 0;
    }
    UsageCache.prototype.get = function (key, onCacheMiss) {
        var entry = this.cache[key];
        if (entry === undefined) {
            var value = onCacheMiss(key);
            entry = this.cache[key] = {
                value: value,
                used: true,
            };
            this.count++;
        }
        entry.used = true;
        return entry.value;
    };
    UsageCache.prototype.keys = function () {
        return Object.keys(this.cache);
    };
    UsageCache.prototype.markUnused = function (key) {
        this.cache[key].used = false;
    };
    UsageCache.prototype.markAllUnused = function () {
        // reset 'used' flag in cache
        for (var key in this.cache) {
            this.cache[key].used = false;
        }
    };
    UsageCache.prototype.remove = function (key, onRemove) {
        var entry = this.cache[key];
        if (entry !== undefined) {
            this.count--;
            onRemove(entry.value);
            delete this.cache[key];
        }
    };
    UsageCache.prototype.removeUnused = function (onRemove) {
        for (var key in this.cache) {
            var entry = this.cache[key];
            if (!entry.used) {
                this.count--;
                onRemove(entry.value);
                delete this.cache[key];
            }
        }
    };
    UsageCache.prototype.removeAll = function (onRemove) {
        this.markAllUnused();
        this.removeUnused(onRemove);
    };
    return UsageCache;
}());
exports.UsageCache = UsageCache;
exports.default = UsageCache;


/***/ }),

/***/ "../node_modules/engine/math/Scalar.js":
/*!*********************************************!*\
  !*** ../node_modules/engine/math/Scalar.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Scalar = /** @class */ (function () {
    function Scalar() {
    }
    Scalar.clamp = function (x, min, max) {
        return Math.min(Math.max(x, min), max);
    };
    /**
     * Linearly interpolate from `a` to `b` using `t`, where return is `a` for `t = 0` and `b` for `t = 1`
     */
    Scalar.lerp = function (a, b, t) {
        return a * (1 - t) + b * t;
    };
    /**
     * Return 0 at x <= edge0, return 1 for x >= edge1 and linearly interpolate in-between
     */
    Scalar.linstep = function (edge0, edge1, x) {
        return Scalar.clamp((x - edge0) / (edge1 - edge0), 0, 1);
    };
    /**
     * Replicate GLSL smoothstep
     * - Return 0 for x <= edge0, 1 for x >= edge 1, and interpolate via 3x^2 - 2x^3 in-between
     * - Gradient is 0 at x = 0 and x = 1
     */
    Scalar.smoothstep = function (edge0, edge1, x) {
        x = Scalar.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
        return x * x * (3 - 2 * x);
    };
    // polyfill for ECMAScript 2015 Math methods
    Scalar.log2 = function (x) {
        return Math.log(x) * Math.LOG2E;
    };
    Scalar.log10 = function (x) {
        return Math.log(x) * Math.LOG10E;
    };
    Scalar.sign = function (x) {
        return ((x > 0) - (x < 0)) || +x;
    };
    return Scalar;
}());
exports.Scalar = Scalar;
exports.default = Scalar;


/***/ }),

/***/ "../node_modules/engine/rendering/GPUDevice.js":
/*!*****************************************************!*\
  !*** ../node_modules/engine/rendering/GPUDevice.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**

Dev Notes:
- Should be dependency free, doesn't know about Renderer
- Should not have any public state; purely object management
- TextureManager
    "Performance problems have been observed on some implementations when using uniform1i to update sampler uniforms. To change the texture referenced by a sampler uniform, binding a new texture to the texture unit referenced by the uniform should be preferred over using uniform1i to update the uniform itself."

**/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a, _b, _c, _d;
var GPUDevice = /** @class */ (function () {
    function GPUDevice(gl) {
        var _this = this;
        this.capabilities = {
            vertexArrayObjects: false,
            instancing: false,
            availableTextureUnits: 0,
        };
        this.vertexStateIds = new IdManager(true);
        this.programIds = new IdManager(true);
        this.vertexShaderCache = new ReferenceCountCache(function (shader) { return _this.gl.deleteShader(shader); });
        this.fragmentShaderCache = new ReferenceCountCache(function (shader) { return _this.gl.deleteShader(shader); });
        this.textureUnitUsageCounter = 0;
        this._programCount = 0;
        this._vertexStateCount = 0;
        this._bufferCount = 0;
        this._textureCount = 0;
        this.gl = gl;
        // the vertex array object extension makes controlling vertex state simpler and faster
        // however we fallback to normal vertex state handling when not available
        this.extVao = gl.getExtension('OES_vertex_array_object');
        this.extInstanced = gl.getExtension('ANGLE_instanced_arrays');
        var extDebugInfo = gl.getExtension('WEBGL_debug_renderer_info');
        this.name = gl.getParameter(extDebugInfo == null ? gl.RENDERER : extDebugInfo.UNMASKED_RENDERER_WEBGL);
        var availableTextureUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
        this.textureUnitState = new Array(availableTextureUnits);
        this.capabilities.vertexArrayObjects = this.extVao != null;
        this.capabilities.instancing = this.extInstanced != null;
        this.capabilities.availableTextureUnits = availableTextureUnits;
    }
    Object.defineProperty(GPUDevice.prototype, "programCount", {
        get: function () { return this._programCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GPUDevice.prototype, "vertexStateCount", {
        get: function () { return this._vertexStateCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GPUDevice.prototype, "bufferCount", {
        get: function () { return this._bufferCount; },
        enumerable: true,
        configurable: true
    });
    GPUDevice.prototype.createBuffer = function (bufferDescriptor) {
        var gl = this.gl;
        var b = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, b);
        gl.bufferData(gl.ARRAY_BUFFER, bufferDescriptor.data || bufferDescriptor.size, bufferDescriptor.usageHint || BufferUsageHint.STATIC);
        gl.bindBuffer(gl.ARRAY_BUFFER, null);
        var bufferHandle = new GPUBuffer(this, b);
        this._bufferCount++;
        return bufferHandle;
    };
    /**
     * @throws string if index data requires UInt extension on a device that doesn't support it
     * @throws string if both dataType _and_ data are not set
     */
    GPUDevice.prototype.createIndexBuffer = function (indexBufferDescriptor) {
        var gl = this.gl;
        // determine index data type from data array type
        var dataType = indexBufferDescriptor.dataType;
        if (dataType == null) {
            if (indexBufferDescriptor.data != null) {
                switch (indexBufferDescriptor.data.BYTES_PER_ELEMENT) {
                    case 1:
                        dataType = IndexDataType.UNSIGNED_BYTE;
                        break;
                    case 2:
                        dataType = IndexDataType.UNSIGNED_SHORT;
                        break;
                    case 4:
                        dataType = IndexDataType.UNSIGNED_INT;
                        break;
                    // @! UNSIGNED_INT requires extension, should enable when required and fallback to re-interpreting as UNSIGNED_SHORT
                }
            }
            else {
                throw 'dataType field is required if data is not set';
            }
        }
        if (dataType == IndexDataType.UNSIGNED_INT) {
            var uintExt = gl.getExtension('OES_element_index_uint');
            if (uintExt == null) {
                throw 'OES_element_index_uint is required but unavailable';
            }
        }
        var b = gl.createBuffer();
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufferDescriptor.data || indexBufferDescriptor.size, indexBufferDescriptor.usageHint || BufferUsageHint.STATIC);
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);
        var bufferHandle = new GPUIndexBuffer(this, b, dataType);
        this._bufferCount++;
        return bufferHandle;
    };
    GPUDevice.prototype.updateBufferData = function (handle, data, offsetBytes) {
        if (offsetBytes === void 0) { offsetBytes = 0; }
        var gl = this.gl;
        var target = handle instanceof GPUIndexBuffer ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;
        this.gl.bindBuffer(target, handle.native);
        this.gl.bufferSubData(target, offsetBytes, data);
        this.gl.bindBuffer(target, null);
    };
    GPUDevice.prototype.deleteBuffer = function (handle) {
        this.gl.deleteBuffer(handle.native);
        this._bufferCount--;
    };
    GPUDevice.prototype.createVertexState = function (vertexStateDescriptor) {
        var gl = this.gl;
        var extVao = this.extVao;
        var indexDataType = vertexStateDescriptor.indexBuffer != null ? vertexStateDescriptor.indexBuffer.dataType : null;
        var vaoSupported = extVao != null;
        var vertexStateHandle;
        if (vaoSupported) {
            var vao = extVao.createVertexArrayOES();
            extVao.bindVertexArrayOES(vao);
            this.applyVertexStateDescriptor(vertexStateDescriptor);
            extVao.bindVertexArrayOES(null);
            vertexStateHandle = new GPUVertexState(this, this.vertexStateIds.assign(), vao, vertexStateDescriptor.attributeLayout, indexDataType);
        }
        else {
            // when VAO is not supported, pass in the descriptor so vertex state can be applied when rendering
            vertexStateHandle = new GPUVertexState(this, this.vertexStateIds.assign(), null, vertexStateDescriptor.attributeLayout, indexDataType);
            vertexStateHandle._vaoFallbackDescriptor = vertexStateDescriptor;
        }
        this._vertexStateCount++;
        return vertexStateHandle;
    };
    GPUDevice.prototype.deleteVertexState = function (handle) {
        if (this.extVao != null) {
            this.extVao.deleteVertexArrayOES(handle.native);
        }
        this.vertexStateIds.release(handle.id);
        this._vertexStateCount--;
    };
    GPUDevice.prototype.createTexture = function (textureDescriptor) {
        var gl = this.gl;
        var t = gl.createTexture();
        var freeUnit = this.assignTextureUnit();
        gl.activeTexture(gl.TEXTURE0 + freeUnit);
        gl.bindTexture(gl.TEXTURE_2D, t);
        // sampling parameters
        var samplingParameters = __assign({ magFilter: TextureMagFilter.LINEAR, minFilter: TextureMagFilter.LINEAR, wrapT: TextureWrapMode.CLAMP_TO_EDGE, wrapS: TextureWrapMode.CLAMP_TO_EDGE }, textureDescriptor.samplingParameters);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, samplingParameters.magFilter);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, samplingParameters.minFilter);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, samplingParameters.wrapS);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, samplingParameters.wrapT);
        // set _global_ data upload parameters
        var pixelStorageParameters = __assign({ packAlignment: 4, unpackAlignment: 4, flipY: false, premultiplyAlpha: false, colorSpaceConversion: ColorSpaceConversion.DEFAULT }, textureDescriptor.pixelStorage);
        gl.pixelStorei(gl.PACK_ALIGNMENT, pixelStorageParameters.packAlignment);
        gl.pixelStorei(gl.UNPACK_ALIGNMENT, pixelStorageParameters.unpackAlignment);
        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, pixelStorageParameters.flipY);
        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, pixelStorageParameters.premultiplyAlpha);
        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, pixelStorageParameters.colorSpaceConversion);
        // upload data if supplied
        if (textureDescriptor.mipmapData != null) {
            for (var i = 0; i < textureDescriptor.mipmapData.length; i++) {
                var data = textureDescriptor.mipmapData[i];
                var mipScale = 1 / (1 << i);
                if (ArrayBuffer.isView(data)) {
                    gl.texImage2D(gl.TEXTURE_2D, i, textureDescriptor.format, Math.round(textureDescriptor.width / mipScale), Math.round(textureDescriptor.height / mipScale), 0, textureDescriptor.format, textureDescriptor.dataType, data);
                }
                else {
                    gl.texImage2D(gl.TEXTURE_2D, i, textureDescriptor.format, textureDescriptor.format, textureDescriptor.dataType, data);
                }
            }
        }
        else {
            // allocate empty texture
            gl.texImage2D(gl.TEXTURE_2D, 0, textureDescriptor.format, textureDescriptor.width, textureDescriptor.height, 0, textureDescriptor.format, textureDescriptor.dataType, null);
        }
        if (textureDescriptor.generateMipmaps) {
            gl.generateMipmap(gl.TEXTURE_2D);
        }
        // determine allocated size
        var allocatedWidth;
        var allocatedHeight;
        if (textureDescriptor.mipmapData !== null) {
            var data = textureDescriptor.mipmapData[0];
            if (ArrayBuffer.isView(data)) {
                allocatedWidth = textureDescriptor.width;
                allocatedHeight = textureDescriptor.height;
            }
            else {
                allocatedWidth = data.width;
                allocatedHeight = data.height;
            }
        }
        else {
            allocatedWidth = textureDescriptor.width;
            allocatedHeight = textureDescriptor.height;
        }
        // let usageHint = textureDescriptor.usageHint == null ? TextureUsageHint.UNKNOWN : textureDescriptor.usageHint;
        var handle = new GPUTexture(this, t, allocatedWidth, allocatedHeight, textureDescriptor.dataType);
        // update texture unit state
        var handleInternal = handle;
        handleInternal.boundUnit = freeUnit;
        this.textureUnitState[freeUnit] = {
            usageMetric: ++this.textureUnitUsageCounter,
            texture: handle,
        };
        this._textureCount++;
        return handle;
    };
    GPUDevice.prototype.updateTextureData = function (handle, level, format, data, x, y, w, h) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        if (w === void 0) { w = handle.w; }
        if (h === void 0) { h = handle.h; }
        var gl = this.gl;
        var handleInternal = handle;
        this.bindTexture(handle);
        if (ArrayBuffer.isView(data)) {
            gl.texSubImage2D(gl.TEXTURE_2D, level, x, y, w, h, format, handleInternal.type, data);
        }
        else {
            gl.texSubImage2D(gl.TEXTURE_2D, level, x, y, format, handleInternal.type, data);
        }
    };
    GPUDevice.prototype.deleteTexture = function (handle) {
        var gl = this.gl;
        // if texture is bound to a texture unit, unbind it and free the unit
        var handleInternal = handle;
        if (handleInternal.boundUnit !== -1) {
            this.clearTextureUnit(handleInternal.boundUnit);
        }
        gl.deleteTexture(handle.native);
        this._textureCount--;
    };
    /**
     * @throws string if shaders cannot be compiled or program cannot be linked
     */
    GPUDevice.prototype.createProgram = function (vertexCode, fragmentCode, attributeLayout) {
        var gl = this.gl;
        var vs = this.vertexShaderCache.reference(vertexCode);
        var fs = this.fragmentShaderCache.reference(fragmentCode);
        if (vs == null) {
            vs = this.compileShader(vertexCode, gl.VERTEX_SHADER);
            this.vertexShaderCache.add(vertexCode, vs);
        }
        if (fs == null) {
            fs = this.compileShader(fragmentCode, gl.FRAGMENT_SHADER);
            this.fragmentShaderCache.add(fragmentCode, fs);
        }
        var p = gl.createProgram();
        gl.attachShader(p, vs);
        gl.attachShader(p, fs);
        // set attribute bindings (before linking)
        // see applyVertexStateDescriptor() for corresponding layout handling
        var attributeRow = 0;
        for (var i = 0; i < attributeLayout.length; i++) {
            var attribute = attributeLayout[i];
            // how many elements are stored in this type?
            var typeLength = exports.shaderTypeLength[attribute.type];
            // determine how many rows this attribute will cover
            // e.g. float -> 1, vec4 -> 1, mat2 -> 2
            var attributeRowSpan = exports.shaderTypeRows[attribute.type];
            // "It is permissible to bind a generic attribute index to an attribute variable name that is never used in a vertex shader."
            // this enables us to have consistent attribute layouts between shaders
            // if attributeRowSpan > 1, the other rows are automatically bound
            gl.bindAttribLocation(p, attributeRow, attribute.name);
            attributeRow += attributeRowSpan;
        }
        gl.linkProgram(p);
        if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {
            throw "[program link]: " + gl.getProgramInfoLog(p);
        }
        // read all active uniform locations and cache them for later
        var uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);
        var uniformInfo = {};
        var uniformLocation = {};
        for (var i = 0; i < uniformCount; i++) {
            var info = gl.getActiveUniform(p, i);
            uniformInfo[info.name] = info;
            uniformLocation[info.name] = gl.getUniformLocation(p, info.name);
        }
        var programHandle = new GPUProgram(this, this.programIds.assign(), p, vertexCode, fragmentCode, attributeLayout, uniformInfo, uniformLocation);
        this._programCount++;
        return programHandle;
    };
    GPUDevice.prototype.deleteProgram = function (handle) {
        this.gl.deleteProgram(handle.native);
        this.vertexShaderCache.release(handle.vertexCode);
        this.fragmentShaderCache.release(handle.fragmentCode);
        this.programIds.release(handle.id);
        this._programCount--;
    };
    GPUDevice.prototype.compileShader = function (code, type) {
        var gl = this.gl;
        var s = gl.createShader(type);
        gl.shaderSource(s, code);
        gl.compileShader(s);
        if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {
            var typename = null;
            switch (type) {
                case gl.VERTEX_SHADER:
                    typename = 'vertex';
                    break;
                case gl.FRAGMENT_SHADER:
                    typename = 'fragment';
                    break;
            }
            throw "[" + typename + " compile]: " + gl.getShaderInfoLog(s);
        }
        return s;
    };
    GPUDevice.prototype.applyVertexStateDescriptor = function (vertexStateDescriptor) {
        var gl = this.gl;
        // set index
        if (vertexStateDescriptor.indexBuffer != null) {
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, vertexStateDescriptor.indexBuffer.native);
        }
        else {
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);
        }
        // set attributes
        // some attributes may span more than 1 attribute row (a vec4) so we track the current attribute row so attributes are packed sequentially
        var attributeRow = 0;
        for (var i = 0; i < vertexStateDescriptor.attributeLayout.length; i++) {
            var _a = vertexStateDescriptor.attributeLayout[i], name_1 = _a.name, type = _a.type;
            // how many elements are stored in this type?
            var typeLength = exports.shaderTypeLength[type];
            // determine how many rows this attribute will cover
            // e.g. float -> 1, vec4 -> 1, mat2 -> 2, mat4 -> 4
            var attributeRowSpan = exports.shaderTypeRows[type];
            // determine number of generic attribute columns this type requires (from 1 - 4)
            // 1, 2, 3, 4, 9, 16 -> 1, 2, 3, 4, 3, 4
            var typeColumns = typeLength / attributeRowSpan;
            // get the attribute assignment for this name (may be null or undefined)
            var vertexAttribute = vertexStateDescriptor.attributes[name_1];
            if (vertexAttribute != null) {
                // if .buffer is set then assume it's a VertexAttributeBuffer
                if (vertexAttribute.buffer !== undefined) {
                    var attributeBuffer = vertexAttribute;
                    var sourceDataType = attributeBuffer.sourceDataType;
                    if (sourceDataType == null) {
                        // assume source type is FLOAT (in WebGL1 all shader generic attributes are required to be floats)
                        sourceDataType = VertexAttributeSourceType.FLOAT;
                    }
                    gl.bindBuffer(gl.ARRAY_BUFFER, attributeBuffer.buffer.native);
                    // set all attribute arrays
                    for (var r = 0; r < attributeRowSpan; r++) {
                        var row = attributeRow + r;
                        // assume the data is formatted with columns that match the attribute type, but allow override with .sourceColumns field
                        var sourceColumns = attributeBuffer.sourceColumns != null ? attributeBuffer.sourceColumns : typeColumns;
                        // column offset for this attribute row
                        // this is only non-zero for matrix types
                        var columnBytesOffset = (r * sourceColumns * exports.dataTypeByteLength[sourceDataType]);
                        // console.log('enableVertexAttribArray', row);
                        gl.enableVertexAttribArray(row);
                        gl.vertexAttribPointer(row, sourceColumns, sourceDataType, !!attributeBuffer.normalize, attributeBuffer.strideBytes, 
                        // offset of attribute row
                        attributeBuffer.offsetBytes + columnBytesOffset);
                        if (this.extInstanced) {
                            // we should make sure to set vertexAttribDivisorANGLE even if 0, so that if we're altering global state we don't run into issues
                            // this helps ensure we can applyVertexStateDescriptor even when VAOs are unavailable
                            this.extInstanced.vertexAttribDivisorANGLE(row, attributeBuffer.instanceDivisor != null ? attributeBuffer.instanceDivisor : 0);
                        }
                    }
                }
                else {
                    // constant value attribute
                    var attributeConstant = vertexAttribute;
                    if (attributeRowSpan === 1) {
                        // slightly faster path for most common case
                        gl.disableVertexAttribArray(attributeRow);
                        gl.vertexAttrib4fv(attributeRow, attributeConstant.data);
                    }
                    else {
                        for (var r = 0; r < attributeRowSpan; r++) {
                            gl.disableVertexAttribArray(attributeRow + r);
                            gl.vertexAttrib4fv(attributeRow + r, attributeConstant.data.subarray(r * 4, (r * 4) + 4));
                        }
                    }
                }
            }
            else {
                // set attribute value to constant 0s
                for (var r = 0; r < attributeRowSpan; r++) {
                    gl.disableVertexAttribArray(attributeRow + r);
                    gl.vertexAttrib4f(attributeRow + r, 0, 0, 0, 0);
                }
            }
            attributeRow += attributeRowSpan;
        }
    };
    GPUDevice.prototype.assignTextureUnit = function () {
        // console.debug(`%cassignTextureUnit`, 'color: blue');
        // return the first free texture unit
        var minUsageMetric = Infinity;
        var minUsageUnitIndex = undefined;
        for (var i = 0; i < this.textureUnitState.length; i++) {
            var unit = this.textureUnitState[i];
            if (unit === undefined) {
                // console.debug(`%c\tfound free ${i}`, 'color: blue');
                return i;
            }
            if (unit.usageMetric < minUsageMetric) {
                minUsageUnitIndex = i;
                minUsageMetric = unit.usageMetric;
            }
        }
        // at this point we know no texture units are empty, so instead we pick a unit to empty
        // the best units to empty are ones in which their textures haven't been used recently
        // hinting can override this behavior
        // console.debug(`%c\tclearing ${minUsageUnitIndex}`, 'color: blue');
        this.clearTextureUnit(minUsageUnitIndex);
        return minUsageUnitIndex;
    };
    GPUDevice.prototype.bindTexture = function (handle) {
        var gl = this.gl;
        var handleInternal = handle;
        if (handleInternal.boundUnit === -1) {
            var freeUnit = this.assignTextureUnit();
            gl.activeTexture(gl.TEXTURE0 + freeUnit);
            gl.bindTexture(gl.TEXTURE_2D, handle.native);
            handleInternal.boundUnit = freeUnit;
            this.textureUnitState[freeUnit] = {
                usageMetric: ++this.textureUnitUsageCounter,
                texture: handle,
            };
        }
        else {
            gl.activeTexture(gl.TEXTURE0 + handleInternal.boundUnit);
            gl.bindTexture(gl.TEXTURE_2D, handle.native);
            this.textureUnitState[handleInternal.boundUnit].usageMetric = ++this.textureUnitUsageCounter;
        }
    };
    GPUDevice.prototype.clearTextureUnit = function (unit) {
        // console.debug(`%cclearTextureUnit ${unit}`, 'color: blue');
        var gl = this.gl;
        var texture = this.textureUnitState[unit].texture;
        var textureInternal = texture;
        gl.activeTexture(gl.TEXTURE0 + unit);
        gl.bindTexture(gl.TEXTURE_2D, null);
        this.textureUnitState[unit] = undefined;
        if (texture !== undefined) {
            textureInternal.boundUnit = -1;
        }
    };
    GPUDevice.prototype.markTextureUsage = function (handle) {
        var handleInternal = handle;
        this.textureUnitState[handleInternal.boundUnit].usageMetric = ++this.textureUnitUsageCounter;
    };
    return GPUDevice;
}());
exports.GPUDevice = GPUDevice;
// Object Descriptors
var IndexDataType;
(function (IndexDataType) {
    IndexDataType[IndexDataType["UNSIGNED_BYTE"] = WebGLRenderingContext.UNSIGNED_BYTE] = "UNSIGNED_BYTE";
    IndexDataType[IndexDataType["UNSIGNED_SHORT"] = WebGLRenderingContext.UNSIGNED_SHORT] = "UNSIGNED_SHORT";
    IndexDataType[IndexDataType["UNSIGNED_INT"] = WebGLRenderingContext.UNSIGNED_INT] = "UNSIGNED_INT";
})(IndexDataType = exports.IndexDataType || (exports.IndexDataType = {}));
var VertexAttributeSourceType;
(function (VertexAttributeSourceType) {
    VertexAttributeSourceType[VertexAttributeSourceType["BYTE"] = WebGLRenderingContext.BYTE] = "BYTE";
    VertexAttributeSourceType[VertexAttributeSourceType["SHORT"] = WebGLRenderingContext.SHORT] = "SHORT";
    VertexAttributeSourceType[VertexAttributeSourceType["UNSIGNED_BYTE"] = WebGLRenderingContext.UNSIGNED_BYTE] = "UNSIGNED_BYTE";
    VertexAttributeSourceType[VertexAttributeSourceType["UNSIGNED_SHORT"] = WebGLRenderingContext.UNSIGNED_SHORT] = "UNSIGNED_SHORT";
    VertexAttributeSourceType[VertexAttributeSourceType["FLOAT"] = WebGLRenderingContext.FLOAT] = "FLOAT";
    // WebGL2 HALF_FLOAT
})(VertexAttributeSourceType = exports.VertexAttributeSourceType || (exports.VertexAttributeSourceType = {}));
var BufferUsageHint;
(function (BufferUsageHint) {
    BufferUsageHint[BufferUsageHint["STREAM"] = WebGLRenderingContext.STREAM_DRAW] = "STREAM";
    BufferUsageHint[BufferUsageHint["STATIC"] = WebGLRenderingContext.STATIC_DRAW] = "STATIC";
    BufferUsageHint[BufferUsageHint["DYNAMIC"] = WebGLRenderingContext.DYNAMIC_DRAW] = "DYNAMIC";
})(BufferUsageHint = exports.BufferUsageHint || (exports.BufferUsageHint = {}));
var UniformType;
(function (UniformType) {
    UniformType[UniformType["FLOAT"] = WebGLRenderingContext.FLOAT] = "FLOAT";
    UniformType[UniformType["VEC2"] = WebGLRenderingContext.FLOAT_VEC2] = "VEC2";
    UniformType[UniformType["VEC3"] = WebGLRenderingContext.FLOAT_VEC3] = "VEC3";
    UniformType[UniformType["VEC4"] = WebGLRenderingContext.FLOAT_VEC4] = "VEC4";
    UniformType[UniformType["IVEC2"] = WebGLRenderingContext.INT_VEC2] = "IVEC2";
    UniformType[UniformType["IVEC3"] = WebGLRenderingContext.INT_VEC3] = "IVEC3";
    UniformType[UniformType["IVEC4"] = WebGLRenderingContext.INT_VEC4] = "IVEC4";
    UniformType[UniformType["BOOL"] = WebGLRenderingContext.BOOL] = "BOOL";
    UniformType[UniformType["BVEC2"] = WebGLRenderingContext.BOOL_VEC2] = "BVEC2";
    UniformType[UniformType["BVEC3"] = WebGLRenderingContext.BOOL_VEC3] = "BVEC3";
    UniformType[UniformType["BVEC4"] = WebGLRenderingContext.BOOL_VEC4] = "BVEC4";
    UniformType[UniformType["MAT2"] = WebGLRenderingContext.FLOAT_MAT2] = "MAT2";
    UniformType[UniformType["MAT3"] = WebGLRenderingContext.FLOAT_MAT3] = "MAT3";
    UniformType[UniformType["MAT4"] = WebGLRenderingContext.FLOAT_MAT4] = "MAT4";
    UniformType[UniformType["SAMPLER_2D"] = WebGLRenderingContext.SAMPLER_2D] = "SAMPLER_2D";
    UniformType[UniformType["SAMPLER_CUBE"] = WebGLRenderingContext.SAMPLER_CUBE] = "SAMPLER_CUBE";
})(UniformType = exports.UniformType || (exports.UniformType = {}));
// subset of UniformType
var AttributeType;
(function (AttributeType) {
    AttributeType[AttributeType["FLOAT"] = WebGLRenderingContext.FLOAT] = "FLOAT";
    AttributeType[AttributeType["VEC2"] = WebGLRenderingContext.FLOAT_VEC2] = "VEC2";
    AttributeType[AttributeType["VEC3"] = WebGLRenderingContext.FLOAT_VEC3] = "VEC3";
    AttributeType[AttributeType["VEC4"] = WebGLRenderingContext.FLOAT_VEC4] = "VEC4";
    AttributeType[AttributeType["MAT2"] = WebGLRenderingContext.FLOAT_MAT2] = "MAT2";
    AttributeType[AttributeType["MAT3"] = WebGLRenderingContext.FLOAT_MAT3] = "MAT3";
    AttributeType[AttributeType["MAT4"] = WebGLRenderingContext.FLOAT_MAT4] = "MAT4";
})(AttributeType = exports.AttributeType || (exports.AttributeType = {}));
var TextureDataType;
(function (TextureDataType) {
    TextureDataType[TextureDataType["UNSIGNED_BYTE"] = WebGLRenderingContext.UNSIGNED_BYTE] = "UNSIGNED_BYTE";
    TextureDataType[TextureDataType["UNSIGNED_SHORT_5_6_5"] = WebGLRenderingContext.UNSIGNED_SHORT_5_6_5] = "UNSIGNED_SHORT_5_6_5";
    TextureDataType[TextureDataType["UNSIGNED_SHORT_4_4_4_4"] = WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4] = "UNSIGNED_SHORT_4_4_4_4";
    TextureDataType[TextureDataType["UNSIGNED_SHORT_5_5_5_1"] = WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1] = "UNSIGNED_SHORT_5_5_5_1";
    TextureDataType[TextureDataType["FLOAT"] = WebGLRenderingContext.FLOAT] = "FLOAT";
    // Extension HALF_FLOAT = 
})(TextureDataType = exports.TextureDataType || (exports.TextureDataType = {}));
var TextureFormat;
(function (TextureFormat) {
    TextureFormat[TextureFormat["ALPHA"] = WebGLRenderingContext.ALPHA] = "ALPHA";
    TextureFormat[TextureFormat["RGB"] = WebGLRenderingContext.RGB] = "RGB";
    TextureFormat[TextureFormat["RGBA"] = WebGLRenderingContext.RGBA] = "RGBA";
    TextureFormat[TextureFormat["LUMINANCE"] = WebGLRenderingContext.LUMINANCE] = "LUMINANCE";
    TextureFormat[TextureFormat["LUMINANCE_ALPHA"] = WebGLRenderingContext.LUMINANCE_ALPHA] = "LUMINANCE_ALPHA";
    // @! should include compressed texture formats from extensions
})(TextureFormat = exports.TextureFormat || (exports.TextureFormat = {}));
var ColorSpaceConversion;
(function (ColorSpaceConversion) {
    ColorSpaceConversion[ColorSpaceConversion["NONE"] = WebGLRenderingContext.NONE] = "NONE";
    ColorSpaceConversion[ColorSpaceConversion["DEFAULT"] = WebGLRenderingContext.BROWSER_DEFAULT_WEBGL] = "DEFAULT";
})(ColorSpaceConversion = exports.ColorSpaceConversion || (exports.ColorSpaceConversion = {}));
var TextureMagFilter;
(function (TextureMagFilter) {
    TextureMagFilter[TextureMagFilter["NEAREST"] = WebGLRenderingContext.NEAREST] = "NEAREST";
    TextureMagFilter[TextureMagFilter["LINEAR"] = WebGLRenderingContext.LINEAR] = "LINEAR";
})(TextureMagFilter = exports.TextureMagFilter || (exports.TextureMagFilter = {}));
var TextureMinFilter;
(function (TextureMinFilter) {
    TextureMinFilter[TextureMinFilter["NEAREST"] = WebGLRenderingContext.NEAREST] = "NEAREST";
    TextureMinFilter[TextureMinFilter["LINEAR"] = WebGLRenderingContext.LINEAR] = "LINEAR";
    TextureMinFilter[TextureMinFilter["NEAREST_MIPMAP_NEAREST"] = WebGLRenderingContext.NEAREST_MIPMAP_NEAREST] = "NEAREST_MIPMAP_NEAREST";
    TextureMinFilter[TextureMinFilter["LINEAR_MIPMAP_NEAREST"] = WebGLRenderingContext.LINEAR_MIPMAP_NEAREST] = "LINEAR_MIPMAP_NEAREST";
    TextureMinFilter[TextureMinFilter["NEAREST_MIPMAP_LINEAR"] = WebGLRenderingContext.NEAREST_MIPMAP_LINEAR] = "NEAREST_MIPMAP_LINEAR";
    TextureMinFilter[TextureMinFilter["LINEAR_MIPMAP_LINEAR"] = WebGLRenderingContext.LINEAR_MIPMAP_LINEAR] = "LINEAR_MIPMAP_LINEAR";
})(TextureMinFilter = exports.TextureMinFilter || (exports.TextureMinFilter = {}));
var TextureWrapMode;
(function (TextureWrapMode) {
    TextureWrapMode[TextureWrapMode["REPEAT"] = WebGLRenderingContext.REPEAT] = "REPEAT";
    TextureWrapMode[TextureWrapMode["CLAMP_TO_EDGE"] = WebGLRenderingContext.CLAMP_TO_EDGE] = "CLAMP_TO_EDGE";
    TextureWrapMode[TextureWrapMode["MIRRORED_REPEAT"] = WebGLRenderingContext.MIRRORED_REPEAT] = "MIRRORED_REPEAT";
})(TextureWrapMode = exports.TextureWrapMode || (exports.TextureWrapMode = {}));
var TextureUsageHint;
(function (TextureUsageHint) {
    TextureUsageHint[TextureUsageHint["LONG_LIFE"] = 1] = "LONG_LIFE";
    TextureUsageHint[TextureUsageHint["TRANSIENT"] = 0] = "TRANSIENT";
})(TextureUsageHint = exports.TextureUsageHint || (exports.TextureUsageHint = {}));
// Data Tables
exports.shaderTypeLength = (_a = {},
    _a[UniformType.FLOAT] = 1,
    _a[UniformType.VEC2] = 2,
    _a[UniformType.VEC3] = 3,
    _a[UniformType.VEC4] = 4,
    _a[UniformType.IVEC2] = 1,
    _a[UniformType.IVEC3] = 2,
    _a[UniformType.IVEC4] = 3,
    _a[UniformType.BOOL] = 1,
    _a[UniformType.BVEC2] = 2,
    _a[UniformType.BVEC3] = 3,
    _a[UniformType.BVEC4] = 4,
    _a[UniformType.MAT2] = 2 * 2,
    _a[UniformType.MAT3] = 3 * 3,
    _a[UniformType.MAT4] = 4 * 4,
    _a);
exports.shaderTypeRows = (_b = {},
    _b[UniformType.FLOAT] = 1,
    _b[UniformType.VEC2] = 1,
    _b[UniformType.VEC3] = 1,
    _b[UniformType.VEC4] = 1,
    _b[UniformType.IVEC2] = 1,
    _b[UniformType.IVEC3] = 1,
    _b[UniformType.IVEC4] = 1,
    _b[UniformType.BOOL] = 1,
    _b[UniformType.BVEC2] = 1,
    _b[UniformType.BVEC3] = 1,
    _b[UniformType.BVEC4] = 1,
    _b[UniformType.MAT2] = 2,
    _b[UniformType.MAT3] = 3,
    _b[UniformType.MAT4] = 4,
    _b);
exports.shaderTypeColumns = (_c = {},
    _c[UniformType.FLOAT] = 1,
    _c[UniformType.VEC2] = 2,
    _c[UniformType.VEC3] = 3,
    _c[UniformType.VEC4] = 4,
    _c[UniformType.IVEC2] = 2,
    _c[UniformType.IVEC3] = 3,
    _c[UniformType.IVEC4] = 4,
    _c[UniformType.BOOL] = 1,
    _c[UniformType.BVEC2] = 2,
    _c[UniformType.BVEC3] = 3,
    _c[UniformType.BVEC4] = 4,
    _c[UniformType.MAT2] = 2,
    _c[UniformType.MAT3] = 3,
    _c[UniformType.MAT4] = 4,
    _c);
exports.dataTypeByteLength = (_d = {},
    _d[WebGLRenderingContext.BYTE] = 1,
    _d[WebGLRenderingContext.UNSIGNED_BYTE] = 1,
    _d[WebGLRenderingContext.SHORT] = 2,
    _d[WebGLRenderingContext.UNSIGNED_SHORT] = 2,
    _d[WebGLRenderingContext.INT] = 4,
    _d[WebGLRenderingContext.UNSIGNED_INT] = 4,
    _d[WebGLRenderingContext.FLOAT] = 4,
    _d);
var GPUBuffer = /** @class */ (function () {
    function GPUBuffer(device, native) {
        this.device = device;
        this.native = native;
    }
    GPUBuffer.prototype.updateBufferData = function (data, offsetBytes) {
        if (offsetBytes === void 0) { offsetBytes = 0; }
        this.device.updateBufferData(this, data, offsetBytes);
    };
    GPUBuffer.prototype.delete = function () {
        this.device.deleteBuffer(this);
    };
    return GPUBuffer;
}());
exports.GPUBuffer = GPUBuffer;
var GPUIndexBuffer = /** @class */ (function (_super) {
    __extends(GPUIndexBuffer, _super);
    function GPUIndexBuffer(device, native, dataType) {
        var _this = _super.call(this, device, native) || this;
        _this.dataType = dataType;
        return _this;
    }
    return GPUIndexBuffer;
}(GPUBuffer));
exports.GPUIndexBuffer = GPUIndexBuffer;
var GPUVertexState = /** @class */ (function () {
    function GPUVertexState(device, id, native, attributeLayout, indexType) {
        this.device = device;
        this.id = id;
        this.native = native;
        this.attributeLayout = attributeLayout;
        this.indexType = indexType;
    }
    GPUVertexState.prototype.delete = function () {
        this.device.deleteVertexState(this);
    };
    return GPUVertexState;
}());
exports.GPUVertexState = GPUVertexState;
var GPUTexture = /** @class */ (function () {
    function GPUTexture(device, native, w, h, type) {
        this.device = device;
        this.native = native;
        this.w = w;
        this.h = h;
        this.type = type;
        this.boundUnit = -1;
    }
    GPUTexture.prototype.updateTextureData = function (level, format, data, x, y, w, h) {
        this.device.updateTextureData(this, level, format, data, x, y, w, h);
    };
    GPUTexture.prototype.delete = function () {
        this.device.deleteTexture(this);
    };
    return GPUTexture;
}());
exports.GPUTexture = GPUTexture;
var GPUProgram = /** @class */ (function () {
    function GPUProgram(device, id, native, vertexCode, fragmentCode, attributeLayout, uniformInfo, uniformLocation) {
        this.device = device;
        this.id = id;
        this.native = native;
        this.vertexCode = vertexCode;
        this.fragmentCode = fragmentCode;
        this.attributeLayout = attributeLayout;
        this.uniformInfo = uniformInfo;
        this.uniformLocation = uniformLocation;
        this.stateCache = {};
    }
    GPUProgram.prototype.delete = function () {
        this.device.deleteProgram(this);
    };
    return GPUProgram;
}());
exports.GPUProgram = GPUProgram;
exports.default = GPUDevice;
// private data structures
var IdManager = /** @class */ (function () {
    function IdManager(minimize) {
        this.minimize = minimize;
        this.top = 0;
        this.availableIdQueue = new Array();
    }
    IdManager.prototype.assign = function () {
        if (this.availableIdQueue.length > 0) {
            return this.availableIdQueue.pop();
        }
        return this.top++;
    };
    IdManager.prototype.release = function (id) {
        if (this.availableIdQueue.indexOf(id) !== -1)
            return false;
        this.availableIdQueue.push(id);
        if (this.minimize) {
            this.availableIdQueue.sort(function (a, b) { return b - a; });
        }
        return true;
    };
    IdManager.prototype.count = function () {
        return this.top - this.availableIdQueue.length;
    };
    return IdManager;
}());
var ReferenceCountCache = /** @class */ (function () {
    function ReferenceCountCache(onZeroReferences) {
        this.onZeroReferences = onZeroReferences;
        this.map = {};
    }
    ReferenceCountCache.prototype.add = function (key, value) {
        this.map[key] = {
            value: value,
            refs: 1,
        };
    };
    ReferenceCountCache.prototype.reference = function (key) {
        var r = this.map[key];
        if (r == null)
            return null;
        r.refs++;
        return r.value;
    };
    ReferenceCountCache.prototype.release = function (key) {
        var r = this.map[key];
        if (r == null)
            return false;
        r.refs--;
        if (r.refs === 0) {
            this.onZeroReferences(r.value);
            delete this.map[key];
            return false;
        }
        return true;
    };
    return ReferenceCountCache;
}());


/***/ }),

/***/ "../node_modules/engine/rendering/Node.js":
/*!************************************************!*\
  !*** ../node_modules/engine/rendering/Node.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Scene tree node
 * - Type parameter is used to constrain the type of the node's children
 * - Scene information flows from the roots to the leaves – by design, nodes only have knowledge about their children, not their parents
 */
var Node = /** @class */ (function () {
    function Node() {
        this.children = new Set();
    }
    Node.prototype.add = function (child) {
        this.children.add(child);
    };
    Node.prototype.has = function (child) {
        return this.children.has(child);
    };
    Node.prototype.remove = function (child) {
        return this.children.delete(child);
    };
    Node.prototype.applyTransformToSubNodes = function (root) {
        var e_1, _a;
        if (root === void 0) { root = true; }
        try {
            for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                child.applyTransformToSubNodes(true);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Node.prototype.forEachSubNode = function (callback) {
        var e_2, _a;
        try {
            for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                callback(child);
                child.forEachSubNode(callback);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    return Node;
}());
exports.Node = Node;
exports.default = Node;


/***/ }),

/***/ "../node_modules/engine/rendering/RenderPass.js":
/*!******************************************************!*\
  !*** ../node_modules/engine/rendering/RenderPass.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RenderPass = /** @class */ (function () {
    function RenderPass(target, root, clearOptions) {
        this.target = target;
        this.root = root;
        this.clearOptions = clearOptions;
        if (target != null) {
            throw 'Framebuffer target not yet supported';
        }
    }
    return RenderPass;
}());
exports.RenderPass = RenderPass;
exports.default = RenderPass;


/***/ }),

/***/ "../node_modules/engine/rendering/Renderable.js":
/*!******************************************************!*\
  !*** ../node_modules/engine/rendering/Renderable.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Node_1 = __webpack_require__(/*! ./Node */ "../node_modules/engine/rendering/Node.js");
/**
 * Renderable is the base type for a node that can be rendered via Renderer
 *
 * Renderer will call:
 * - `allocateGPUResources(device)` just before rendering the first time or if `gpuResourcesNeedAllocate` is true.
 * - `draw(context)` when executing `gpuProgram` with `gpuVertexState`
 *
 * Renderer will not call `releaseGPUResources()`, this is up to the Renderable instance or owner to call
 *
 * `allocateGPUResources(device)` must set the `gpu` prefixed fields before the instance is valid for rendering
 */
var Renderable = /** @class */ (function (_super) {
    __extends(Renderable, _super);
    function Renderable() {
        var _this = _super.call(this) || this;
        /**
         * Set to false to disable any interaction with the rendering system (including masking).
         * If this is true, the instance must have gpu* fields set before the rendering.
         */
        _this.render = true;
        /**
         * When opacity is less than 1, the object is rendered in the transparent pass with premultiplied alpha blending (unless overridden).
         * When opacity is 0 or less, it's not rendered to the color buffer (but will still be rendered to the stencil buffer).
         */
        _this.opacity = 1;
        /**
         * Set to false to disable writing to the color buffer, however the object will still be drawn to the stencil buffer if it's used as a mask
         */
        _this.visible = true;
        /**
         * Use another renderable as a clipping mask for this renderable. This is done by rendering the mask renderable to the stencil buffer and then stencil testing against it
         */
        _this.mask = null;
        // for future use
        // dependentRenderPasses = new Array<RenderPass>();
        _this.gpuProgram = null;
        _this.gpuVertexState = null;
        _this.gpuResourcesNeedAllocate = true;
        // non-owned fields
        _this._renderStateKey = 0 | 0;
        _this._maskIndex = -1;
        return _this;
    }
    Renderable.prototype.allocateGPUResources = function (device) { };
    Renderable.prototype.releaseGPUResources = function () { };
    Renderable.prototype.draw = function (context) { };
    return Renderable;
}(Node_1.default));
exports.Renderable = Renderable;
exports.default = Renderable;


/***/ }),

/***/ "../node_modules/engine/rendering/Renderer.js":
/*!****************************************************!*\
  !*** ../node_modules/engine/rendering/Renderer.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dev Notes
 * - State grouping: Often we want hierarchical state - i.e, set viewport for this node _and_ all of its children
 */
Object.defineProperty(exports, "__esModule", { value: true });
var GPUDevice_1 = __webpack_require__(/*! ./GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var Renderable_1 = __webpack_require__(/*! ./Renderable */ "../node_modules/engine/rendering/Renderable.js");
var BlendMode;
(function (BlendMode) {
    BlendMode[BlendMode["NONE"] = 0] = "NONE";
    /**
     * Premultiplied alpha provides improved alpha blending with the condition that the alpha is multiplied into the rgb channels
     *	`gl_FragColor = vec4(color.rgb * color.a, color.a)`
     *
     * This blend mode also provides additive blending when the alpha channel is set to 0
     * 	`gl_FragColor = vec4(color.rgb, 0);`
     */
    BlendMode[BlendMode["PREMULTIPLIED_ALPHA"] = 1] = "PREMULTIPLIED_ALPHA";
})(BlendMode = exports.BlendMode || (exports.BlendMode = {}));
var DrawMode;
(function (DrawMode) {
    DrawMode[DrawMode["POINTS"] = WebGLRenderingContext.POINTS] = "POINTS";
    DrawMode[DrawMode["LINE_STRIP"] = WebGLRenderingContext.LINE_STRIP] = "LINE_STRIP";
    DrawMode[DrawMode["LINE_LOOP"] = WebGLRenderingContext.LINE_LOOP] = "LINE_LOOP";
    DrawMode[DrawMode["LINES"] = WebGLRenderingContext.LINES] = "LINES";
    DrawMode[DrawMode["TRIANGLE_STRIP"] = WebGLRenderingContext.TRIANGLE_STRIP] = "TRIANGLE_STRIP";
    DrawMode[DrawMode["TRIANGLE_FAN"] = WebGLRenderingContext.TRIANGLE_FAN] = "TRIANGLE_FAN";
    DrawMode[DrawMode["TRIANGLES"] = WebGLRenderingContext.TRIANGLES] = "TRIANGLES";
})(DrawMode = exports.DrawMode || (exports.DrawMode = {}));
var Renderer = /** @class */ (function () {
    function Renderer(device) {
        // if number of unique masks used exceeds MAX_SAFE_MASKS then there may be mask-collisions when nodes overlap
        this.MAX_SAFE_MASKS = 254;
        this._masks = new Array();
        this._opaque = new Array();
        this._transparent = new Array();
        // gl state assumptions
        this.currentFramebuffer = -1;
        this.currentProgramId = -1;
        this.currentVertexStateId = -1;
        this.currentBlendMode = -1;
        this.currentStencilTestEnabled = -1;
        this.currentMaskTestValue = -1;
        this.currentVaoFallbackAttributeLayout = undefined;
        // In JavaScript we're limited to 32-bit for bitwise operations
        // 00000000 00000000 00000000 00000000
        // ssssssss bbbbbbbb bbbbbbbb bbbbmmmm
        this.stateSOffset = 24;
        this.stateSMask = 0xFF000000;
        this.stateBOffset = 4;
        this.stateBMask = 0x00FFFFF0;
        this.stateMOffset = 0;
        this.stateMMask = 0x0000000F;
        this.MAX_SHADERS = this.stateSMask >>> this.stateSOffset;
        this.MAX_BUFFERS = this.stateBMask >>> this.stateBOffset;
        this.MAX_BLEND_MODES = this.stateMMask >>> this.stateMOffset;
        this.device = device;
        this.deviceInternal = device;
        this.gl = this.deviceInternal.gl;
        this.extVao = this.deviceInternal.extVao;
        this.drawContext = DrawContext.create(device, this.deviceInternal.extInstanced);
    }
    Renderer.prototype.render = function (pass) {
        var _this = this;
        var gl = this.gl;
        var drawContextInternal = this.drawContext;
        pass.root.applyTransformToSubNodes(true);
        // render-state = transparent, programId, vertexStateId, blendMode, user
        // when transparent, z sort should override everything, but same-z should still sort by state
        // when opaque, z sort should come after user sort and depth within tree 
        //		programId, vertexStateId, blendMode, user-state, z, tree-depth
        // to avoid re-allocating a new array each frame, we reuse display list arrays from the previous frame and trim any excess
        var opaqueIndex = 0;
        var opaque = this._opaque;
        var transparentIndex = 0;
        var transparent = this._transparent;
        var maskIndex = 0;
        var masks = this._masks;
        // iterate nodes, build state-change minimizing list for rendering
        // for (let node of pass.root)
        pass.root.forEachSubNode(function (node) {
            if (node instanceof Renderable_1.Renderable && node.render === true) {
                var nodeInternal = node;
                // @! for future
                // render any dependent render passes
                // for (let subpass of node.dependentRenderPasses) {
                // this.render(subpass);
                // }
                if (node.mask != null) {
                    // we can't used indexOf because masks may contain data from previous frame that extends beyond existingMaskIndex
                    var existingMaskIndex = -1;
                    for (var i = 0; i < maskIndex; i++) {
                        if (masks[i] === node.mask) {
                            existingMaskIndex = i;
                            break;
                        }
                    }
                    if (existingMaskIndex === -1) {
                        nodeInternal._maskIndex = maskIndex;
                        masks[maskIndex++] = node.mask;
                    }
                    else {
                        nodeInternal._maskIndex = existingMaskIndex;
                    }
                }
                else {
                    nodeInternal._maskIndex = -1;
                }
                // perform any necessary allocations
                if (nodeInternal.gpuResourcesNeedAllocate) {
                    nodeInternal.allocateGPUResources(_this.device);
                    if (nodeInternal.gpuProgram == null) {
                        throw "Renderable field \"gpuProgram\" must be set before rendering (or set node's render field to false)";
                    }
                    if (nodeInternal.gpuVertexState == null) {
                        throw "Renderable field \"gpuVertexState\" must be set before rendering (or set node's render field to false)";
                    }
                    nodeInternal.gpuResourcesNeedAllocate = false;
                }
                // if node.transparent is not defined then use opacity to determine if transparency pass is required
                var useTransparentPass = node.transparent;
                if (useTransparentPass === undefined) {
                    useTransparentPass = node.opacity < 1 ? true : false;
                }
                // when blend mode is not specified, assume it's alpha-blending when it's in the transparency pass
                var blendMode = node.blendMode;
                if (blendMode === undefined) {
                    blendMode = useTransparentPass ? BlendMode.PREMULTIPLIED_ALPHA : BlendMode.NONE;
                }
                // store most important state in 32-bit key
                nodeInternal._renderStateKey = _this.encodeRenderState(nodeInternal.gpuProgram.id, nodeInternal.gpuVertexState.id, blendMode);
                // add node into pass bucket
                // transparent nodes are rendered from furthest to nearest
                if (useTransparentPass) {
                    transparent[transparentIndex++] = node;
                }
                else {
                    opaque[opaqueIndex++] = node;
                }
            }
        });
        // trim any excess elements from the last frame
        if (opaqueIndex < opaque.length) {
            opaque.length = opaqueIndex;
        }
        if (transparentIndex < transparent.length) {
            transparent.length = transparentIndex;
        }
        if (maskIndex < masks.length) {
            masks.length = maskIndex;
        }
        // sort opaque objects for rendering
        // @! this could be optimized by bucketing
        opaque.sort(function (a, b) {
            var ai = a;
            var bi = b;
            var delta = ai._renderStateKey - bi._renderStateKey;
            if (delta === 0) {
                // front to back z-ordering
                return ai.renderOrderZ - bi.renderOrderZ;
            }
            else {
                return delta;
            }
        });
        transparent.sort(function (a, b) {
            var ai = a;
            var bi = b;
            // back to front z-ordering
            var delta = bi.renderOrderZ - ai.renderOrderZ;
            if (delta === 0) {
                // when elements have the same z-index, use render-state to sort
                return ai._renderStateKey - bi._renderStateKey;
            }
            else {
                return delta;
            }
        });
        // begin rendering
        this.resetGLStateAssumptions();
        if (this.currentFramebuffer !== pass.target) {
            gl.bindFramebuffer(gl.FRAMEBUFFER, pass.target);
            this.currentFramebuffer = pass.target;
        }
        // by default, when starting a rendering pass the viewport is set to the render target dimensions
        if (pass.target == null) {
            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);
            drawContextInternal.viewport.x = 0;
            drawContextInternal.viewport.y = 0;
            drawContextInternal.viewport.w = gl.drawingBufferWidth;
            drawContextInternal.viewport.h = gl.drawingBufferHeight;
        }
        else {
            // @! todo
            throw 'Todo, custom framebuffers: use framebuffers size for viewport';
        }
        var clearFlags = 0;
        if (pass.clearOptions.clearColor != null) {
            clearFlags |= gl.COLOR_BUFFER_BIT;
            gl.clearColor(pass.clearOptions.clearColor[0], pass.clearOptions.clearColor[1], pass.clearOptions.clearColor[2], pass.clearOptions.clearColor[3]);
        }
        if (pass.clearOptions.clearDepth != null) {
            clearFlags |= gl.DEPTH_BUFFER_BIT;
            gl.clearDepth(pass.clearOptions.clearDepth);
        }
        if (pass.clearOptions.clearStencil != null) {
            clearFlags |= gl.STENCIL_BUFFER_BIT;
            gl.clearStencil(pass.clearOptions.clearStencil);
        }
        gl.clear(clearFlags);
        // draw mask nodes to stencil buffer
        if (masks.length > 0) {
            // enable stencil operations (required to write to the stencil buffer)
            gl.enable(gl.STENCIL_TEST);
            this.currentStencilTestEnabled = 1;
            // disable writing to the color buffer
            gl.colorMask(false, false, false, false);
            // enable writing to the depth buffer
            gl.depthMask(true);
            // @! do we actually benefit from disabling blending if we're false across the colorMask?
            gl.disable(gl.BLEND);
            this.currentBlendMode = BlendMode.NONE;
            // (depth-testing is assumed to be enabled)
            // enable stencil writing
            gl.stencilFunc(gl.ALWAYS, 0xFF, 0xFF);
            this.currentMaskTestValue = -1;
            gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);
            // draw mask nodes, each with a stencil write-mask
            for (var i = 0; i < masks.length; i++) {
                var renderable = masks[i];
                var internal = renderable;
                this.setProgram(internal);
                this.setVertexState(internal);
                // write (i + 1) into the stencil buffer
                var writeMaskValue = i + 1;
                gl.stencilMask(writeMaskValue);
                renderable.draw(this.drawContext);
            }
            // clear depth for main pass
            if (pass.clearOptions.clearDepth != null) {
                clearFlags |= gl.DEPTH_BUFFER_BIT;
                gl.clearDepth(pass.clearOptions.clearDepth);
            }
        }
        // draw opaque objects
        gl.colorMask(true, true, true, true);
        gl.depthMask(true);
        // disable writing to the stencil buffer
        gl.stencilMask(0x00);
        if (masks.length === 0) {
            gl.disable(gl.STENCIL_TEST);
            this.currentStencilTestEnabled = 0;
        }
        else {
            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);
        }
        this.renderArray(opaque);
        // draw transparent objects
        // transparent objects perform depth-test but don't write to the depth buffer
        gl.depthMask(false);
        this.renderArray(transparent);
    };
    Renderer.prototype.renderArray = function (renderables) {
        for (var i = 0; i < renderables.length; i++) {
            var renderable = renderables[i];
            if (renderable.opacity <= 0 || (renderable.visible === false))
                continue;
            var internal = renderable;
            // extract blend mode from render state (because it may not explicitly specified on the object)
            var blendMode = this.decodeRenderStateBlendMode(internal._renderStateKey);
            // set state for renderable
            this.setProgram(internal);
            this.setVertexState(internal);
            this.setBlendMode(blendMode);
            // mask state
            this.setMaskTest(internal._maskIndex !== -1, (internal._maskIndex + 1) % (0xFF + 1));
            renderable.draw(this.drawContext);
        }
    };
    Renderer.prototype.resetGLStateAssumptions = function () {
        this.currentFramebuffer = undefined;
        this.currentProgramId = -1;
        this.currentVertexStateId = -1;
        this.currentBlendMode = -1;
        this.currentStencilTestEnabled = -1;
        this.currentMaskTestValue = -1;
        // this.currentVaoFallbackAttributeLayout = undefined;
    };
    Renderer.prototype.setProgram = function (internal) {
        var gl = this.gl;
        var drawContextInternal = this.drawContext;
        if (internal.gpuProgram.id !== this.currentProgramId) {
            gl.useProgram(internal.gpuProgram.native);
            drawContextInternal.program = internal.gpuProgram;
            this.currentProgramId = internal.gpuProgram.id;
        }
    };
    Renderer.prototype.setVertexState = function (internal) {
        var gl = this.gl;
        var drawContextInternal = this.drawContext;
        if (internal.gpuVertexState.id !== this.currentVertexStateId) {
            if (internal.gpuVertexState.native !== null) {
                this.extVao.bindVertexArrayOES(internal.gpuVertexState.native);
            }
            else {
                // handle setting vertex state when VAO extension is not available 
                // WebGL requires that all enabled attribute vertex arrays must have valid buffers, whether consumed by shader or not
                // to work around this we disable all vertex arrays enabled by the last layout
                // applying the new layout then re-enables just the vertex arrays required
                if (this.currentVaoFallbackAttributeLayout !== undefined) {
                    var attributeRow = 0;
                    for (var i = 0; i < this.currentVaoFallbackAttributeLayout.length; i++) {
                        var type = this.currentVaoFallbackAttributeLayout[i].type;
                        // determine how many rows this attribute will cover
                        // e.g. float -> 1, vec4 -> 1, mat2 -> 2, mat4 -> 4
                        var attributeRowSpan = GPUDevice_1.shaderTypeRows[type];
                        if (attributeRowSpan === 1) {
                            // fast path
                            gl.disableVertexAttribArray(attributeRow);
                        }
                        else {
                            for (var r = 0; r < attributeRowSpan; r++) {
                                gl.disableVertexAttribArray(attributeRow + r);
                            }
                        }
                        attributeRow += attributeRowSpan;
                    }
                }
                // @! todo: this is incomplete – it doesn't account for changes to global state caused be previous calls
                // example: a number of vertex attributes may be set to array mode (enableVertexAttribArray), but never disabled
                this.deviceInternal.applyVertexStateDescriptor(internal.gpuVertexState._vaoFallbackDescriptor);
                this.currentVaoFallbackAttributeLayout = internal.gpuVertexState.attributeLayout;
            }
            drawContextInternal.vertexState = internal.gpuVertexState;
            this.currentVertexStateId = internal.gpuVertexState.id;
        }
    };
    Renderer.prototype.setBlendMode = function (blendMode) {
        var gl = this.gl;
        if (blendMode !== this.currentBlendMode) {
            if (blendMode === 0) {
                gl.disable(gl.BLEND);
            }
            else {
                if (this.currentBlendMode <= 0) {
                    gl.enable(gl.BLEND);
                }
                switch (blendMode) {
                    case BlendMode.PREMULTIPLIED_ALPHA:
                        gl.blendEquation(gl.FUNC_ADD);
                        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
                        break;
                    default:
                        throw "Blend mode \"" + BlendMode[blendMode] + "\" not yet implemented";
                }
            }
            this.currentBlendMode = blendMode;
        }
    };
    Renderer.prototype.setMaskTest = function (enabled, maskValue) {
        var gl = this.gl;
        if (enabled) {
            if (this.currentStencilTestEnabled !== 1) {
                gl.enable(gl.STENCIL_TEST);
                this.currentStencilTestEnabled = 1;
            }
            if (this.currentMaskTestValue !== maskValue) {
                gl.stencilFunc(gl.EQUAL, maskValue, 0xFF);
                this.currentMaskTestValue = maskValue;
            }
        }
        else {
            if (this.currentStencilTestEnabled !== 0) {
                gl.disable(gl.STENCIL_TEST);
                this.currentStencilTestEnabled = 0;
            }
        }
    };
    Renderer.prototype.encodeRenderState = function (programId, vertexStateId, blendMode) {
        return (programId << this.stateSOffset) |
            (vertexStateId << this.stateBOffset) |
            (blendMode << this.stateMOffset);
    };
    Renderer.prototype.decodeRenderState = function (bits) {
        return {
            programId: (bits & this.stateSMask) >>> this.stateSOffset,
            vertexStateId: (bits & this.stateBMask) >>> this.stateBOffset,
            blendMode: (bits & this.stateMMask) >>> this.stateMOffset
        };
    };
    Renderer.prototype.decodeRenderStateBlendMode = function (bits) {
        return (bits & this.stateMMask) >>> this.stateMOffset;
    };
    return Renderer;
}());
exports.Renderer = Renderer;
var DrawContext = /** @class */ (function () {
    function DrawContext(device, extInstanced) {
        this.device = device;
        this.extInstanced = extInstanced;
        // current state
        this.viewport = { x: 0, y: 0, w: 0, h: 0 };
        var gl = device.gl;
        this.gl = gl;
    }
    DrawContext.prototype.uniform1f = function (name, x) {
        var stateCache = this.program.stateCache;
        if (stateCache[name] !== x) {
            this.gl.uniform1f(this.program.uniformLocation[name], x);
            stateCache[name] = x;
        }
    };
    DrawContext.prototype.uniform1fv = function (name, v) {
        this.gl.uniform1fv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform1i = function (name, x) {
        var stateCache = this.program.stateCache;
        if (stateCache[name] !== x) {
            this.gl.uniform1i(this.program.uniformLocation[name], x);
            stateCache[name] = x;
        }
    };
    DrawContext.prototype.uniform1iv = function (name, v) {
        this.gl.uniform1iv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform2f = function (name, x, y) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(2);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y)) {
            this.gl.uniform2f(this.program.uniformLocation[name], x, y);
            cacheValue[0] = x;
            cacheValue[1] = y;
        }
    };
    DrawContext.prototype.uniform2fv = function (name, v) {
        this.gl.uniform2fv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform2i = function (name, x, y) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(2);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y)) {
            this.gl.uniform2i(this.program.uniformLocation[name], x, y);
            cacheValue[0] = x;
            cacheValue[1] = y;
        }
    };
    DrawContext.prototype.uniform2iv = function (name, v) {
        this.gl.uniform2iv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform3f = function (name, x, y, z) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(3);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y) ||
            (cacheValue[2] !== z)) {
            this.gl.uniform3f(this.program.uniformLocation[name], x, y, z);
            cacheValue[0] = x;
            cacheValue[1] = y;
            cacheValue[2] = z;
        }
    };
    DrawContext.prototype.uniform3fv = function (name, v) {
        this.gl.uniform3fv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform3i = function (name, x, y, z) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(3);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y) ||
            (cacheValue[2] !== z)) {
            this.gl.uniform3i(this.program.uniformLocation[name], x, y, z);
            cacheValue[0] = x;
            cacheValue[1] = y;
            cacheValue[2] = z;
        }
    };
    DrawContext.prototype.uniform3iv = function (name, v) {
        this.gl.uniform3iv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform4f = function (name, x, y, z, w) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(4);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y) ||
            (cacheValue[2] !== z) ||
            (cacheValue[3] !== w)) {
            this.gl.uniform4f(this.program.uniformLocation[name], x, y, z, w);
            cacheValue[0] = x;
            cacheValue[1] = y;
            cacheValue[2] = z;
            cacheValue[3] = w;
        }
    };
    DrawContext.prototype.uniform4fv = function (name, v) {
        this.gl.uniform4fv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniform4i = function (name, x, y, z, w) {
        var stateCache = this.program.stateCache;
        var cacheValue = stateCache[name];
        if (cacheValue === undefined) { // allocate cache entry
            cacheValue = stateCache[name] = new Array(4);
        }
        if ((cacheValue[0] !== x) ||
            (cacheValue[1] !== y) ||
            (cacheValue[2] !== z) ||
            (cacheValue[3] !== w)) {
            this.gl.uniform4i(this.program.uniformLocation[name], x, y, z, w);
            cacheValue[0] = x;
            cacheValue[1] = y;
            cacheValue[2] = z;
            cacheValue[3] = w;
        }
    };
    DrawContext.prototype.uniform4iv = function (name, v) {
        this.gl.uniform4iv(this.program.uniformLocation[name], v);
    };
    DrawContext.prototype.uniformMatrix2fv = function (name, transpose, value) {
        this.gl.uniformMatrix2fv(this.program.uniformLocation[name], transpose, value);
    };
    DrawContext.prototype.uniformMatrix3fv = function (name, transpose, value) {
        this.gl.uniformMatrix3fv(this.program.uniformLocation[name], transpose, value);
    };
    DrawContext.prototype.uniformMatrix4fv = function (name, transpose, value) {
        this.gl.uniformMatrix4fv(this.program.uniformLocation[name], transpose, value);
    };
    DrawContext.prototype.uniformTexture2D = function (name, texture) {
        var deviceInternal = this.device;
        var textureInternal = texture;
        // texture already has an assigned unit
        if (textureInternal.boundUnit !== -1) {
            this.uniform1i(name, textureInternal.boundUnit);
            // since we're not binding the texture we've got to manually mark the usage
            // (this helps the texture-unit system decide which units are least used)
            deviceInternal.markTextureUsage(texture);
        }
        else {
            deviceInternal.bindTexture(texture);
            this.uniform1i(name, textureInternal.boundUnit);
        }
    };
    /**
     * Draw, automatically accounting for vertex indexing
     */
    DrawContext.prototype.draw = function (mode, indexCount, indexOffset) {
        var gl = this.gl;
        if (this.vertexState.indexType != null) {
            gl.drawElements(mode, indexCount, this.vertexState.indexType, indexOffset);
        }
        else {
            gl.drawArrays(mode, indexOffset, indexCount);
        }
    };
    /**
     * Draw instances, automatically accounting for vertex indexing
     */
    DrawContext.prototype.extDrawInstanced = function (mode, indexCount, indexOffset, primCount) {
        if (this.vertexState.indexType != null) {
            this.extInstanced.drawElementsInstancedANGLE(mode, indexCount, this.vertexState.indexType, indexOffset, primCount);
        }
        else {
            this.extInstanced.drawArraysInstancedANGLE(mode, indexOffset, indexCount, primCount);
        }
    };
    DrawContext.create = function (device, extInstanced) {
        return new DrawContext(device, extInstanced);
    };
    return DrawContext;
}());
exports.DrawContext = DrawContext;
exports.default = Renderer;


/***/ }),

/***/ "../node_modules/engine/ui/InteractionEvent.js":
/*!*****************************************************!*\
  !*** ../node_modules/engine/ui/InteractionEvent.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var InteractionEvent = /** @class */ (function () {
    function InteractionEvent(init, sourceEvent) {
        this.sourceEvent = sourceEvent;
        this.defaultPrevented = false;
        this.propagationStopped = false;
        this.target = init.target;
        this.worldX = init.worldX;
        this.worldY = init.worldY;
        this.canvasX = init.canvasX;
        this.canvasY = init.canvasY;
        this.localX = init.localX;
        this.localY = init.localY;
        this.fractionX = init.fractionX;
        this.fractionY = init.fractionY;
        this.buttonChange = init.buttonChange;
        this.buttonState = init.buttonState;
        this.altKey = init.altKey;
        this.ctrlKey = init.ctrlKey;
        this.shiftKey = init.shiftKey;
        this.metaKey = init.metaKey;
        this.pointerId = init.pointerId;
        this.isPrimary = init.isPrimary;
        this.pointerType = init.pointerType;
        this.pressure = init.pressure;
        this.width = init.width;
        this.height = init.height;
        this.tiltX = init.tiltX;
        this.tiltY = init.tiltY;
    }
    InteractionEvent.prototype.preventDefault = function () {
        this.defaultPrevented = true;
        this.sourceEvent.preventDefault();
    };
    InteractionEvent.prototype.stopPropagation = function () {
        this.propagationStopped = true;
    };
    return InteractionEvent;
}());
exports.InteractionEvent = InteractionEvent;
var WheelDeltaMode;
(function (WheelDeltaMode) {
    WheelDeltaMode[WheelDeltaMode["Pixel"] = 1] = "Pixel";
    WheelDeltaMode[WheelDeltaMode["Line"] = 2] = "Line";
    WheelDeltaMode[WheelDeltaMode["Page"] = 3] = "Page";
})(WheelDeltaMode = exports.WheelDeltaMode || (exports.WheelDeltaMode = {}));
var WheelInteractionEvent = /** @class */ (function (_super) {
    __extends(WheelInteractionEvent, _super);
    function WheelInteractionEvent(init, sourceEvent) {
        var _this = _super.call(this, init, sourceEvent) || this;
        _this.wheelDeltaMode = init.wheelDeltaMode;
        _this.wheelDeltaX = init.wheelDeltaX;
        _this.wheelDeltaY = init.wheelDeltaY;
        _this.wheelDeltaZ = init.wheelDeltaZ;
        return _this;
    }
    return WheelInteractionEvent;
}(InteractionEvent));
exports.WheelInteractionEvent = WheelInteractionEvent;
exports.default = InteractionEvent;


/***/ }),

/***/ "../node_modules/engine/ui/Object2D.js":
/*!*********************************************!*\
  !*** ../node_modules/engine/ui/Object2D.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! events */ "../node_modules/events/events.js");
var Renderable_1 = __webpack_require__(/*! ../rendering/Renderable */ "../node_modules/engine/rendering/Renderable.js");
/**
 * Implements 2D transforms, hierarchical layout and user interaction event handling
 * - Doesn't imply any particular display units
 */
var Object2D = /** @class */ (function (_super) {
    __extends(Object2D, _super);
    function Object2D() {
        var _this = _super.call(this) || this;
        _this.cursorStyle = null;
        // transform parameters
        _this._x = 0;
        _this._y = 0;
        // the default local z-offset is 1 so that if z isn't changed then: worldZ = treeDepth
        _this._z = 1;
        _this._sx = 1;
        _this._sy = 1;
        _this._sz = 1;
        _this._w = 0;
        _this._h = 0;
        // layout parameters
        _this._layoutX = 0;
        _this._layoutY = 0;
        _this._layoutParentX = 0;
        _this._layoutParentY = 0;
        _this._layoutW = 0;
        _this._layoutH = 0;
        // we track the number of listeners for each interaction event to prevent work when emitting events
        _this.interactionEventListenerCount = null;
        _this.worldTransformNeedsUpdate = true;
        _this.worldTransformMat4 = new Float32Array([
            1, 0, 0, 0,
            0, 1, 0, 0,
            0, 0, 1, 0,
            0, 0, 0, 1
        ]);
        _this.computedX = 0;
        _this.computedY = 0;
        _this.computedWidth = 0;
        _this.computedHeight = 0;
        _this.eventEmitter = new events_1.EventEmitter();
        _this.resetEventListenerCount();
        // an Object2D cannot be rendered by itself but subclasses which can should set render to true
        _this.render = false;
        return _this;
    }
    Object.defineProperty(Object2D.prototype, "x", {
        get: function () { return this._x; },
        // position
        set: function (v) { this._x = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "y", {
        get: function () { return this._y; },
        set: function (v) { this._y = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "z", {
        get: function () { return this._z; },
        set: function (v) { this._z = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "sx", {
        get: function () { return this._sx; },
        // scale
        set: function (v) { this._sx = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "sy", {
        get: function () { return this._sy; },
        set: function (v) { this._sy = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "sz", {
        get: function () { return this._sz; },
        set: function (v) { this._sz = v; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "w", {
        get: function () { return this._w; },
        // width & height
        // interpreted individually by subclasses and does not correspond directly to vertex geometry
        set: function (w) { this._w = w; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Object2D.prototype, "h", {
        get: function () { return this._h; },
        set: function (h) { this._h = h; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(Object2D.prototype, "layoutX", {
        get: function () { return this._layoutX; },
        /**
         * When computing the world-transform, layoutX applies an offset in units of _this_ object's width
         */
        set: function (wx) { this._layoutX = wx; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "layoutY", {
        get: function () { return this._layoutY; },
        /**
         * When computing the world-transform, layoutY applies an offset in units of _this_ object's height
         */
        set: function (hy) { this._layoutY = hy; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "layoutParentX", {
        get: function () { return this._layoutParentX; },
        /**
         * When computing the world-transform, layoutParentX applies an offset in units of this object's _parent's_ width
         */
        set: function (wx) { this._layoutParentX = wx; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "layoutParentY", {
        get: function () { return this._layoutParentY; },
        /**
         * When computing the world-transform, layoutParentY applies an offset in units of this object's _parent's_ height
         */
        set: function (hy) { this._layoutParentY = hy; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "layoutW", {
        get: function () { return this._layoutW; },
        /**
         * When computing the world-transform, layoutW applies an offset to this object's width in units of this object's _parent's_ width
         */
        set: function (w) { this._layoutW = w; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Object2D.prototype, "layoutH", {
        get: function () { return this._layoutH; },
        /**
         * When computing the world-transform, layoutH applies an offset to this object's height in units of this object's _parent's_ height
         */
        set: function (h) { this._layoutH = h; this.worldTransformNeedsUpdate = true; },
        enumerable: true,
        configurable: true
    });
    Object2D.prototype.add = function (child) {
        _super.prototype.add.call(this, child);
        child.worldTransformNeedsUpdate = true;
        child.onAdded();
    };
    Object2D.prototype.remove = function (child) {
        if (_super.prototype.remove.call(this, child)) {
            child.onRemoved();
        }
        else {
            return false;
        }
    };
    Object2D.prototype.addEventListener = function (event, listener) {
        var isInteractionEvent = Object.keys(this.interactionEventListenerCount).indexOf(event) !== -1;
        if (isInteractionEvent) {
            this.addInteractionListener(event, listener);
        }
        else {
            this.eventEmitter.addListener(event, listener);
        }
    };
    Object2D.prototype.removeEventListener = function (event, listener) {
        var isInteractionEvent = Object.keys(this.interactionEventListenerCount).indexOf(event) !== -1;
        if (isInteractionEvent) {
            this.removeInteractionListener(event, listener);
        }
        else {
            this.eventEmitter.removeListener(event, listener);
        }
    };
    Object2D.prototype.addInteractionListener = function (event, listener) {
        this.eventEmitter.addListener(event, listener);
        this.interactionEventListenerCount[event]++;
    };
    Object2D.prototype.removeInteractionListener = function (event, listener) {
        if (this.eventEmitter.listenerCount(event) > 0) {
            this.eventEmitter.removeListener(event, listener);
            this.interactionEventListenerCount[event]--;
        }
    };
    Object2D.prototype.removeAllListeners = function (recursive) {
        var e_1, _a;
        this.eventEmitter.removeAllListeners();
        this.resetEventListenerCount();
        if (recursive) {
            try {
                for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    child.removeAllListeners(recursive);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    Object2D.prototype.emit = function (event, args) {
        this.eventEmitter.emit(event, args);
    };
    Object2D.prototype.applyTransformToSubNodes = function (root) {
        var e_2, _a;
        if (root === void 0) { root = true; }
        if (root && this.worldTransformNeedsUpdate) {
            this.computeLayout(0, 0);
            this.applyWorldTransform(null);
        }
        try {
            // apply world transform to children
            for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child.worldTransformNeedsUpdate) {
                    child.computeLayout(this.computedWidth, this.computedHeight);
                    child.applyWorldTransform(this.worldTransformMat4);
                }
                child.applyTransformToSubNodes(false);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    /**
     * Returns the local-space bounds in world-space coordinates
     * Assumes the scene-graph world transforms are all up-to-date
     */
    Object2D.prototype.getWorldBounds = function () {
        var w = this.worldTransformMat4;
        var b = this.getLocalBounds();
        return {
            l: w[0] * b.l + w[12],
            r: w[0] * b.r + w[12],
            t: w[5] * b.t + w[13],
            b: w[5] * b.b + w[13],
        };
    };
    Object2D.prototype.getWorldZ = function () {
        return this.worldTransformMat4[14];
    };
    Object2D.prototype.getComputedWidth = function () {
        return this.computedWidth;
    };
    Object2D.prototype.getComputedHeight = function () {
        return this.computedHeight;
    };
    Object2D.prototype.getComputedX = function () {
        return this.computedX;
    };
    Object2D.prototype.getComputedY = function () {
        return this.computedY;
    };
    Object2D.prototype.onAdded = function () { };
    Object2D.prototype.onRemoved = function () { };
    /**
     * Returns bounds in local-space coordinate after layout has been applied
     * Must be called _after_ tree transformations have been applied to correctly factor in layout
     */
    Object2D.prototype.getLocalBounds = function () {
        return {
            l: 0,
            r: this.computedWidth,
            t: 0,
            b: this.computedHeight,
        };
    };
    Object2D.prototype.computeLayout = function (parentWidth, parentHeight) {
        this.computedWidth = Math.max(this._w + parentWidth * this._layoutW, 0);
        this.computedHeight = Math.max(this._h + parentHeight * this._layoutH, 0);
        this.computedX = this._x + parentWidth * this._layoutParentX + this.computedWidth * this._layoutX;
        this.computedY = this._y + parentHeight * this._layoutParentY + this.computedHeight * this._layoutY;
    };
    Object2D.prototype.applyWorldTransform = function (transformMat4) {
        var e_3, _a, e_4, _b;
        if (transformMat4 == null) {
            var cx = this.computedX;
            var cy = this.computedY;
            this.worldTransformMat4.set([
                this._sx, 0, 0, 0,
                0, this._sy, 0, 0,
                0, 0, this._sz, 0,
                cx, cy, this._z, 1
            ]);
            this.worldTransformNeedsUpdate = false;
            try {
                for (var _c = __values(this.children), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var c = _d.value;
                    c.worldTransformNeedsUpdate = true;
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        else {
            var p = transformMat4;
            // in non-rotational affine transformation only elements 0, 5, 12, 13, 14 are non-zero
            // scale
            var m0 = p[0] * this._sx; // x
            var m5 = p[5] * this._sy; // y
            var m10 = p[10] * this._sz; // z
            var m15 = 1; // w
            // translation
            var m12 = p[0] * this.computedX + p[12]; // x
            var m13 = p[5] * this.computedY + p[13]; // y
            var m14 = p[10] * this._z + p[14]; // z
            // set world matrix
            var w = this.worldTransformMat4;
            w[0] = m0;
            w[1] = 0;
            w[2] = 0;
            w[3] = 0;
            w[4] = 0;
            w[5] = m5;
            w[6] = 0;
            w[7] = 0;
            w[8] = 0;
            w[9] = 0;
            w[10] = m10;
            w[11] = 0;
            w[12] = m12;
            w[13] = m13;
            w[14] = m14;
            w[15] = m15;
            this.worldTransformNeedsUpdate = false;
            try {
                // if the world matrix of the child has changed, then we must inform the children that they're out of sync also
                for (var _e = __values(this.children), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var cc = _f.value;
                    cc.worldTransformNeedsUpdate = true;
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        this.renderOrderZ = this.worldTransformMat4[14];
    };
    Object2D.prototype.resetEventListenerCount = function () {
        this.interactionEventListenerCount = {
            pointermove: 0,
            pointerdown: 0,
            pointerup: 0,
            pointerenter: 0,
            pointerleave: 0,
            click: 0,
            dblclick: 0,
            wheel: 0,
            dragstart: 0,
            dragmove: 0,
            dragend: 0,
        };
    };
    return Object2D;
}(Renderable_1.Renderable));
exports.Object2D = Object2D;
exports.default = Object2D;


/***/ }),

/***/ "../node_modules/engine/ui/Object2DInstances.js":
/*!******************************************************!*\
  !*** ../node_modules/engine/ui/Object2DInstances.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var GPUDevice_1 = __webpack_require__(/*! ../rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var Object2D_1 = __webpack_require__(/*! ./Object2D */ "../node_modules/engine/ui/Object2D.js");
var SharedResources_1 = __webpack_require__(/*! ../SharedResources */ "../node_modules/engine/SharedResources.js");
/**
 * Base class for instance rendering
 *
 * To use, override:
 * - draw()
 * - allocateVertexState()
 * - getVertexCode()
 * - getFragmentCode()
 */
var Object2DInstances = /** @class */ (function (_super) {
    __extends(Object2DInstances, _super);
    function Object2DInstances(instances, vertexAttributeLayout, instanceAttributeLayout, instanceFieldExtractors) {
        var e_1, _a;
        var _this = _super.call(this) || this;
        _this.vertexAttributeLayout = vertexAttributeLayout;
        _this.instanceAttributeLayout = instanceAttributeLayout;
        _this.instanceFieldExtractors = instanceFieldExtractors;
        _this.render = true;
        _this.attributeLayout = _this.vertexAttributeLayout.concat(_this.instanceAttributeLayout);
        _this.instanceCount = instances.length;
        // translate attribute layout into a details for packing attributes into a buffer
        _this.instancePacking = {};
        var runningLength = 0;
        try {
            for (var _b = __values(_this.instanceAttributeLayout), _c = _b.next(); !_c.done; _c = _b.next()) {
                var instanceAttribute = _c.value;
                var typeLength = GPUDevice_1.shaderTypeLength[instanceAttribute.type];
                _this.instancePacking[instanceAttribute.name] = {
                    length: typeLength,
                    offset: runningLength
                };
                runningLength += typeLength;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // length in floats of a single set of instance attributes
        _this.instancePackLength = runningLength;
        // allocate a array large enough to fit all instance attribute for all instances
        _this.instanceDataArray = new Float32Array(_this.instancePackLength * instances.length);
        // populate the array with attribute data (interleaved into a single array)
        for (var i = 0; i < instances.length; i++) {
            _this.writeInstanceAttributes(_this.instanceDataArray, instances[i], i);
        }
        return _this;
    }
    Object2DInstances.prototype.updateInstance = function (index, instance) {
        this.writeInstanceAttributes(this.instanceDataArray, instance, index);
        if (this.gpuInstanceBuffer != null) {
            // upload to subsection of gpu buffer
            var offsetFloats = index * this.instancePackLength;
            var offsetBytes = offsetFloats * 4;
            this.gpuInstanceBuffer.updateBufferData(this.instanceDataArray.subarray(offsetFloats, offsetFloats + this.instancePackLength), offsetBytes);
        }
    };
    Object2DInstances.prototype.allocateGPUResources = function (device) {
        var e_2, _a;
        this.gpuInstanceBuffer = device.createBuffer({ data: this.instanceDataArray });
        var instanceVertexAttributes = {};
        try {
            for (var _b = __values(this.instanceAttributeLayout), _c = _b.next(); !_c.done; _c = _b.next()) {
                var instanceAttribute = _c.value;
                instanceVertexAttributes[instanceAttribute.name] = {
                    buffer: this.gpuInstanceBuffer,
                    offsetBytes: this.instancePacking[instanceAttribute.name].offset * 4,
                    strideBytes: this.instancePackLength * 4,
                    instanceDivisor: 1
                };
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        // create vertex state
        this.gpuVertexState = this.allocateGPUVertexState(device, this.attributeLayout, instanceVertexAttributes);
        this.gpuProgram = SharedResources_1.default.getProgram(device, this.getVertexCode(), this.getFragmentCode(), this.attributeLayout);
    };
    Object2DInstances.prototype.releaseGPUResources = function () {
        if (this.gpuVertexState != null) {
            this.gpuVertexState.delete();
            this.gpuVertexState = null;
        }
        if (this.gpuInstanceBuffer != null) {
            this.gpuInstanceBuffer.delete();
            this.gpuInstanceBuffer = null;
        }
        // since our resources are shared we don't actually want to release anything here
        this.gpuProgram = null;
    };
    Object2DInstances.prototype.writeInstanceAttributes = function (instanceArray, instance, instanceIndex) {
        var e_3, _a;
        var instanceOffset = this.instancePackLength * instanceIndex;
        try {
            for (var _b = __values(this.instanceAttributeLayout), _c = _b.next(); !_c.done; _c = _b.next()) {
                var instanceAttribute = _c.value;
                var name_1 = instanceAttribute.name;
                var packing = this.instancePacking[name_1];
                var attributeOffset = instanceOffset + packing.offset;
                var attributeData = this.instanceFieldExtractors[name_1](instance);
                if (attributeData.length !== packing.length) {
                    console.warn("Instance attribute data length was " + attributeData.length + ", but expected length " + packing.length);
                }
                instanceArray.set(attributeData, attributeOffset);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    // override the following
    Object2DInstances.prototype.allocateGPUVertexState = function (device, attributeLayout, instanceVertexAttributes) {
        return null;
    };
    Object2DInstances.prototype.getVertexCode = function () { return null; };
    Object2DInstances.prototype.getFragmentCode = function () { return null; };
    return Object2DInstances;
}(Object2D_1.default));
exports.Object2DInstances = Object2DInstances;
exports.default = Object2DInstances;


/***/ }),

/***/ "../node_modules/engine/ui/Rect.js":
/*!*****************************************!*\
  !*** ../node_modules/engine/ui/Rect.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var GPUDevice_1 = __webpack_require__(/*! ../rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var SharedResources_1 = __webpack_require__(/*! ../SharedResources */ "../node_modules/engine/SharedResources.js");
var Renderer_1 = __webpack_require__(/*! ../rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Object2D_1 = __webpack_require__(/*! ./Object2D */ "../node_modules/engine/ui/Object2D.js");
/**
 * Rectangle UI element
 *
 * Todo:
 * - Support rounded corners, stroke, glow & shadows, background shaders
 */
var Rect = /** @class */ (function (_super) {
    __extends(Rect, _super);
    function Rect(w, h, color) {
        if (w === void 0) { w = 10; }
        if (h === void 0) { h = 10; }
        if (color === void 0) { color = [1, 0, 0, 1]; }
        var _this = _super.call(this) || this;
        _this.color = new Float32Array(4);
        _this.blendFactor = 1;
        _this.attributeLayout = [
            { name: 'position', type: GPUDevice_1.AttributeType.VEC2 },
        ];
        _this.render = true;
        _this.w = w;
        _this.h = h;
        _this.color.set(color);
        return _this;
    }
    Rect.prototype.allocateGPUResources = function (device) {
        this.gpuVertexState = SharedResources_1.SharedResources.quad1x1VertexState;
        this.gpuProgram = SharedResources_1.SharedResources.getProgram(device, this.getVertexCode(), this.getFragmentCode(), this.attributeLayout);
    };
    Rect.prototype.releaseGPUResources = function () {
        // since our resources are shared we don't actually want to release anything here
        this.gpuVertexState = null;
        this.gpuProgram = null;
    };
    Rect.prototype.draw = function (context) {
        context.uniform1f('blendFactor', this.blendFactor);
        context.uniform2f('size', this.computedWidth, this.computedHeight);
        context.uniformMatrix4fv('model', false, this.worldTransformMat4);
        context.uniform4f('color', this.color[0], this.color[1], this.color[2], this.color[3] * this.opacity);
        context.draw(Renderer_1.DrawMode.TRIANGLES, 6, 0);
    };
    Rect.prototype.getVertexCode = function () {
        return "\n            #version 100\n\n            attribute vec2 position;\n            uniform mat4 model;\n            uniform vec2 size;\n\n            varying vec2 vUv;\n\n            void main() {\n                vUv = position;\n                gl_Position = model * vec4(position * size, 0., 1.0);\n            }\n        ";
    };
    Rect.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision mediump float;\n            varying vec2 vUv;\n\n            uniform float blendFactor;\n            uniform vec4 color;\n            \n            void main() {\n                gl_FragColor = vec4(color.rgb, blendFactor) * color.a;\n            }\n        ";
    };
    return Rect;
}(Object2D_1.Object2D));
exports.Rect = Rect;
exports.default = Rect;


/***/ }),

/***/ "../node_modules/engine/ui/Text.js":
/*!*****************************************!*\
  !*** ../node_modules/engine/ui/Text.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var gputext_1 = __webpack_require__(/*! gputext */ "../node_modules/gputext/dist/GPUText.js");
var GPUDevice_1 = __webpack_require__(/*! ../rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var Renderer_1 = __webpack_require__(/*! ../rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Object2D_1 = __webpack_require__(/*! ./Object2D */ "../node_modules/engine/ui/Object2D.js");
var SharedResources_1 = __webpack_require__(/*! ./../SharedResources */ "../node_modules/engine/SharedResources.js");
/**
 * Text
 *
 * Todo:
 * - Glow and shadow
 * - Bake color into vertices
 * - Vertex index buffer
 */
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text(fontPath, string, fontSizePx, color) {
        if (fontSizePx === void 0) { fontSizePx = 16; }
        if (color === void 0) { color = [0, 0, 0, 1]; }
        var _this = _super.call(this) || this;
        _this.color = new Float32Array(4);
        _this.opacity = 1;
        // when additive blend factor is 1, the blend mode is additive, when 0, it's normal premultiplied alpha blended
        _this.additiveBlendFactor = 0;
        _this._kerningEnabled = true;
        _this._ligaturesEnabled = true;
        _this._lineHeight = 1.0;
        _this.vertexCount = 0;
        _this.blendMode = Renderer_1.BlendMode.PREMULTIPLIED_ALPHA;
        _this.transparent = true;
        // cannot allocate GPU resource until font asset is available
        _this.gpuResourcesNeedAllocate = false;
        // disable rendering initially, rendering will be enabled when the font assets are available and a glyph layout has been created
        _this.render = false;
        _this._fontSizePx = fontSizePx;
        _this.fontPath = fontPath;
        _this.string = string;
        _this.color.set(color);
        return _this;
    }
    Object.defineProperty(Text.prototype, "string", {
        get: function () {
            return this._string;
        },
        set: function (v) {
            var changed = this._string !== v;
            this._string = v;
            if (changed) {
                this.updateGlyphLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Text.prototype, "fontPath", {
        get: function () {
            return this._fontPath;
        },
        set: function (v) {
            var changed = this._fontPath !== v;
            this._fontPath = v;
            if (changed) {
                this.updateFontPath();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Text.prototype, "fontSizePx", {
        get: function () {
            return this._fontSizePx;
        },
        set: function (v) {
            var changed = v !== this._fontSizePx;
            this._fontSizePx = v;
            if (changed) {
                this.updateGlyphLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    Text.prototype.allocateGPUResources = function (device) {
        var programNeedsUpdate = false;
        if (this.gpuProgram == null || programNeedsUpdate) {
            this.gpuProgram = SharedResources_1.SharedResources.getProgram(device, "\n                #version 100\n\n                precision mediump float;\n\n                attribute vec2 position;\n                attribute vec3 uv;\n\n                uniform mat4 transform;\n                uniform float fieldRange;\n                uniform vec2 viewportSize;\n                uniform float glyphScale;\n\n                varying vec2 vUv;\n                varying float vFieldRangeDisplay_px;\n\n                void main() {\n                    vUv = uv.xy;\n\n                    // determine the field range in pixels when drawn to the framebuffer\n                    vec2 scale = abs(vec2(transform[0][0], transform[1][1])) * glyphScale;\n                    float atlasScale = uv.z;\n                    vFieldRangeDisplay_px = fieldRange * scale.y * (viewportSize.y * 0.5) / atlasScale;\n                    vFieldRangeDisplay_px = max(vFieldRangeDisplay_px, 1.0);\n\n                    // flip-y axis\n                    gl_Position = transform * vec4(vec2(position.x, -position.y) * glyphScale, 0.0, 1.0);\n                }\n                ", "\n                #version 100\n\n                precision mediump float;\n\n                uniform vec4 color;\n                uniform float blendFactor;\n\n                uniform sampler2D glyphAtlas;\n                uniform mat4 transform;\n\n                varying vec2 vUv;\n                varying float vFieldRangeDisplay_px;\n\n                float median(float r, float g, float b) {\n                    return max(min(r, g), min(max(r, g), b));\n                }\n\n                void main() {\n                    vec3 sample = texture2D(glyphAtlas, vUv).rgb;\n\n                    float sigDist = median(sample.r, sample.g, sample.b);\n\n                    // spread field range over 1px for antialiasing\n                    sigDist = clamp((sigDist - 0.5) * vFieldRangeDisplay_px + 0.5, 0.0, 1.0);\n\n                    float alpha = sigDist;\n\n                    gl_FragColor = vec4(color.rgb, blendFactor) * color.a * alpha;\n                }\n                ", Text.attributeLayout);
        }
        // initialize atlas texture if not already created
        var textureKey = this._fontAsset.descriptor.metadata.postScriptName;
        // only support for 1 glyph page at the moment
        var mipmapsProvided = this._fontAsset.images[0].length > 1;
        this.glyphAtlas = SharedResources_1.SharedResources.getTexture(device, textureKey, {
            format: GPUDevice_1.TextureFormat.RGBA,
            generateMipmaps: !mipmapsProvided,
            mipmapData: this._fontAsset.images[0],
            dataType: GPUDevice_1.TextureDataType.UNSIGNED_BYTE,
            usageHint: GPUDevice_1.TextureUsageHint.LONG_LIFE,
            samplingParameters: {
                magFilter: GPUDevice_1.TextureMagFilter.LINEAR,
                minFilter: mipmapsProvided ? GPUDevice_1.TextureMinFilter.LINEAR_MIPMAP_LINEAR : GPUDevice_1.TextureMinFilter.LINEAR,
                wrapS: GPUDevice_1.TextureWrapMode.CLAMP_TO_EDGE,
                wrapT: GPUDevice_1.TextureWrapMode.CLAMP_TO_EDGE,
            },
            pixelStorage: {
                flipY: false,
                premultiplyAlpha: false,
                colorSpaceConversion: GPUDevice_1.ColorSpaceConversion.NONE,
            }
        });
        // re-create text vertex buffer
        var vertexData = gputext_1.default.generateVertexData(this._glyphLayout);
        this.vertexCount = vertexData.vertexCount;
        this.gpuVertexBuffer = device.createBuffer({
            data: vertexData.vertexArray,
            usageHint: GPUDevice_1.BufferUsageHint.STATIC
        });
        // re-create text vertex state
        this.gpuVertexState = device.createVertexState({
            attributeLayout: Text.attributeLayout,
            attributes: {
                // position
                'position': {
                    buffer: this.gpuVertexBuffer,
                    sourceColumns: vertexData.vertexLayout.position.elements,
                    offsetBytes: vertexData.vertexLayout.position.offsetBytes,
                    strideBytes: vertexData.vertexLayout.position.strideBytes,
                    normalize: false,
                },
                // uv
                'uv': {
                    buffer: this.gpuVertexBuffer,
                    sourceColumns: vertexData.vertexLayout.uv.elements,
                    offsetBytes: vertexData.vertexLayout.uv.offsetBytes,
                    strideBytes: vertexData.vertexLayout.uv.strideBytes,
                    normalize: false,
                }
            }
        });
    };
    Text.prototype.releaseGPUResources = function () {
        if (this.gpuVertexState != null) {
            this.gpuVertexState.delete();
            this.gpuVertexState = null;
        }
        if (this.gpuVertexBuffer != null) {
            this.gpuVertexBuffer.delete();
            this.gpuVertexBuffer = null;
        }
        this.vertexCount = 0;
    };
    Text.prototype.draw = function (context) {
        // renderPass/shader
        context.uniform2f('viewportSize', context.viewport.w, context.viewport.h);
        // font
        context.uniform1f('fieldRange', this._fontAsset.descriptor.fieldRange_px);
        context.uniformTexture2D('glyphAtlas', this.glyphAtlas);
        // text instance
        context.uniform1f('glyphScale', this._glyphLayout.glyphScale);
        context.uniform4f('color', this.color[0], this.color[1], this.color[2], this.color[3] * this.opacity);
        context.uniform1f('blendFactor', 1.0 - this.additiveBlendFactor);
        context.uniformMatrix4fv('transform', false, this.worldTransformMat4);
        context.draw(Renderer_1.DrawMode.TRIANGLES, this.vertexCount, 0);
    };
    Text.prototype.updateFontPath = function () {
        var _this = this;
        Text.getFontAsset(this._fontPath, function (asset) {
            _this._fontAsset = asset;
            _this.updateGlyphLayout();
        });
    };
    Text.prototype.updateGlyphLayout = function () {
        var glyphLayoutChanged = false;
        if (this._string != null && this._fontAsset != null) {
            // generate glyphScale from css font-size px
            // in browsers, font-size corresponds to the difference between typoAscender and typoDescender
            var font = this._fontAsset.descriptor;
            var typoDelta = font.typoAscender - font.typoDescender;
            var glyphScale = this._fontSizePx / typoDelta;
            // @! potential performance improvement:
            // if only the glyphScale changed they we can avoid GPU realloc by just changing this._glyphLayout.glyphScale
            var glyphScaleChanged = this._glyphLayout !== null ? this._glyphLayout.glyphScale !== glyphScale : true;
            this._glyphLayout = gputext_1.default.layout(this._string, this._fontAsset.descriptor, {
                glyphScale: glyphScale,
                lineHeight: this._lineHeight,
                ligaturesEnabled: this._ligaturesEnabled,
                kerningEnabled: this._kerningEnabled,
            });
            this.w = (this._glyphLayout.bounds.r - this._glyphLayout.bounds.l) * this._glyphLayout.glyphScale;
            this.h = (this._glyphLayout.bounds.b - this._glyphLayout.bounds.t) * this._glyphLayout.glyphScale;
            glyphLayoutChanged = true;
        }
        else {
            glyphLayoutChanged = this._glyphLayout !== null;
            this._glyphLayout = null;
            this.w = 0;
            this.h = 0;
        }
        if (glyphLayoutChanged) {
            this.eventEmitter.emit('glyphLayoutChanged');
        }
        // we're only able to render if we have a glyphLayout (and implicitly font assets)
        this.render = this._glyphLayout != null;
        // if the glyph layout has changed then the vertex data must be updated on the GPU
        this.gpuResourcesNeedAllocate = glyphLayoutChanged;
        // if the vertex data has changed, we need to reallocate the GPU resources
        // delete any existing resources
        if (this.gpuResourcesNeedAllocate) {
            this.releaseGPUResources();
        }
    };
    // Font loading and caching
    Text.getFontAsset = function (path, onReady, onError) {
        var cachedAsset = Text.fontCache[path];
        if (cachedAsset != null) {
            onReady(cachedAsset);
            return;
        }
        var promise = Text.fontMap[path];
        if (promise == null) {
            promise = Text.fontMap[path] = new Promise(function (resolve, reject) {
                // parse path
                var directory = path.substr(0, path.lastIndexOf('/'));
                var ext = path.substr(path.lastIndexOf('.') + 1).toLowerCase();
                var jsonFormat = ext === 'json';
                var descriptor;
                var images = new Array();
                var complete = false;
                loadDescriptor(path);
                function tryComplete() {
                    var e_1, _a, e_2, _b;
                    try {
                        for (var images_1 = __values(images), images_1_1 = images_1.next(); !images_1_1.done; images_1_1 = images_1.next()) {
                            var page = images_1_1.value;
                            try {
                                for (var page_1 = __values(page), page_1_1 = page_1.next(); !page_1_1.done; page_1_1 = page_1.next()) {
                                    var mip = page_1_1.value;
                                    if (!mip.complete)
                                        return;
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (page_1_1 && !page_1_1.done && (_b = page_1.return)) _b.call(page_1);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (images_1_1 && !images_1_1.done && (_a = images_1.return)) _a.call(images_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    if (descriptor == null)
                        return;
                    if (complete)
                        return;
                    var fontAsset = {
                        descriptor: descriptor,
                        images: images
                    };
                    complete = true;
                    Text.fontCache[path] = fontAsset;
                    resolve(fontAsset);
                }
                function loadDescriptor(path) {
                    var req = new XMLHttpRequest();
                    req.open('GET', path);
                    req.responseType = jsonFormat ? 'json' : 'arraybuffer';
                    req.onerror = function (e) { return reject("Could not load font " + path); };
                    req.onload = function (e) {
                        descriptor = jsonFormat ? req.response : parseDescriptorBuffer(req.response);
                        if (descriptor == null) {
                            reject("Failed to parse font");
                            return;
                        }
                        if (descriptor.textures.length > 1) {
                            console.warn('Multiple-page glyph atlases are not yet supported');
                        }
                        loadImages(descriptor.textures);
                        tryComplete();
                    };
                    req.send();
                }
                function loadImages(pages) {
                    for (var i = 0; i < pages.length; i++) {
                        var page = pages[i];
                        images[i] = new Array();
                        for (var j = 0; j < page.length; j++) {
                            var mipResource = page[j];
                            var image = void 0;
                            if (mipResource instanceof HTMLImageElement) {
                                image = mipResource;
                            }
                            else {
                                image = new Image();
                                image.src = directory + '/' + mipResource.localPath;
                            }
                            image.onload = tryComplete;
                            images[i][j] = image;
                        }
                    }
                    tryComplete();
                }
                function parseDescriptorBuffer(buffer) {
                    try {
                        return gputext_1.default.parse(buffer);
                    }
                    catch (e) {
                        reject("Error parsing binary GPUText file: " + e);
                        return null;
                    }
                }
            });
        }
        promise.catch(onError).then(onReady);
    };
    Text.fontMap = {};
    Text.fontCache = {};
    Text.attributeLayout = [
        { name: 'position', type: GPUDevice_1.AttributeType.VEC2 },
        { name: 'uv', type: GPUDevice_1.AttributeType.VEC3 },
    ];
    return Text;
}(Object2D_1.Object2D));
exports.Text = Text;
exports.default = Text;


/***/ }),

/***/ "../node_modules/events/events.js":
/*!****************************************!*\
  !*** ../node_modules/events/events.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),

/***/ "../node_modules/fbjs/lib/shallowEqual.js":
/*!************************************************!*\
  !*** ../node_modules/fbjs/lib/shallowEqual.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),

/***/ "../node_modules/genomics-formats/dist/gff3/Strand.js":
/*!************************************************************!*\
  !*** ../node_modules/genomics-formats/dist/gff3/Strand.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Strand;
(function (Strand) {
    Strand[Strand["None"] = 0] = "None";
    Strand[Strand["Unknown"] = 1] = "Unknown";
    Strand[Strand["Positive"] = 2] = "Positive";
    Strand[Strand["Negative"] = 3] = "Negative";
})(Strand = exports.Strand || (exports.Strand = {}));
exports.default = Strand;
//# sourceMappingURL=Strand.js.map

/***/ }),

/***/ "../node_modules/gputext/dist/GPUText.js":
/*!***********************************************!*\
  !*** ../node_modules/gputext/dist/GPUText.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
    Provides text layout, vertex buffer generation and file parsing

    Dev notes:
    - Should have progressive layout where text can be appended to an existing layout
**/
var GPUText = /** @class */ (function () {
    function GPUText() {
    }
    // y increases from top-down (like HTML/DOM coordinates)
    // y = 0 is set to be the font's ascender: https://i.stack.imgur.com/yjbKI.png
    // https://stackoverflow.com/a/50047090/4038621
    GPUText.layout = function (text, font, layoutOptions) {
        var opts = __assign({ glyphScale: 1.0, kerningEnabled: true, ligaturesEnabled: true, lineHeight: 1.0 }, layoutOptions);
        // scale text-wrap container
        // @! let wrapWidth /= glyphScale;
        // pre-allocate for each character having a glyph
        var sequence = new Array(text.length);
        var sequenceIndex = 0;
        var bounds = {
            l: 0, r: 0,
            t: 0, b: 0,
        };
        var x = 0;
        var y = 0;
        for (var c = 0; c < text.length; c++) {
            var char = text[c];
            var charCode = text.charCodeAt(c);
            // @! layout
            switch (charCode) {
                case 0xA0:
                // space character that prevents an automatic line break at its position. In some formats, including HTML, it also prevents consecutive whitespace characters from collapsing into a single space.
                // @! todo
                case '\n'.charCodeAt(0): // newline
                    y += opts.lineHeight;
                    x = 0;
                    continue;
            }
            if (opts.ligaturesEnabled) {
                // @! todo, replace char and charCode if sequence maps to a ligature
            }
            if (opts.kerningEnabled && c > 0) {
                var kerningKey = text[c - 1] + char;
                x += font.kerning[kerningKey] || 0.0;
            }
            var fontCharacter = font.characters[char];
            if (fontCharacter == null) {
                console.warn("Font does not contain character for \"" + char + "\" (" + charCode + ")");
                continue;
            }
            if (fontCharacter.glyph != null) {
                // character has a glyph
                // this corresponds top-left coordinate of the glyph, like hanging letters on a line
                sequence[sequenceIndex++] = {
                    char: char,
                    x: x,
                    y: y
                };
                // width of a character is considered to be its 'advance'
                // height of a character is considered to be the lineHeight
                bounds.r = Math.max(bounds.r, x + fontCharacter.advance);
                bounds.b = Math.max(bounds.b, y + opts.lineHeight);
            }
            // advance glyph position
            // @! layout
            x += fontCharacter.advance;
        }
        // trim empty entries
        if (sequence.length > sequenceIndex) {
            sequence.length = sequenceIndex;
        }
        return {
            font: font,
            sequence: sequence,
            bounds: bounds,
            glyphScale: opts.glyphScale,
        };
    };
    /**
        Generates OpenGL coordinates where y increases from bottom to top

        @! improve docs

        => float32, [p, p, u, u, u], triangles with CCW face winding
    **/
    GPUText.generateVertexData = function (glyphLayout) {
        // memory layout details
        var elementSizeBytes = 4; // (float32)
        var positionElements = 2;
        var uvElements = 3; // uv.z = glyph.atlasScale
        var elementsPerVertex = positionElements + uvElements;
        var vertexSizeBytes = elementsPerVertex * elementSizeBytes;
        var characterVertexCount = 6;
        var vertexArray = new Float32Array(glyphLayout.sequence.length * characterVertexCount * elementsPerVertex);
        var characterOffset_vx = 0; // in terms of numbers of vertices rather than array elements
        for (var i = 0; i < glyphLayout.sequence.length; i++) {
            var item = glyphLayout.sequence[i];
            var font = glyphLayout.font;
            var fontCharacter = font.characters[item.char];
            // skip null-glyphs
            if (fontCharacter == null || fontCharacter.glyph == null)
                continue;
            var glyph = fontCharacter.glyph;
            // quad dimensions
            var px = item.x - glyph.offset.x;
            // y = 0 in the glyph corresponds to the baseline, which is font.ascender from the top of the glyph
            var py = -(item.y + font.ascender + glyph.offset.y);
            var w = glyph.atlasRect.w / glyph.atlasScale; // convert width to normalized font units
            var h = glyph.atlasRect.h / glyph.atlasScale;
            // uv
            // add half-text offset to map to texel centers
            var ux = (glyph.atlasRect.x + 0.5) / font.textureSize.w;
            var uy = (glyph.atlasRect.y + 0.5) / font.textureSize.h;
            var uw = (glyph.atlasRect.w - 1.0) / font.textureSize.w;
            var uh = (glyph.atlasRect.h - 1.0) / font.textureSize.h;
            // flip glyph uv y, this is different from flipping the glyph y _position_
            uy = uy + uh;
            uh = -uh;
            // two-triangle quad with ccw face winding
            vertexArray.set([
                px, py, ux, uy, glyph.atlasScale,
                px + w, py + h, ux + uw, uy + uh, glyph.atlasScale,
                px, py + h, ux, uy + uh, glyph.atlasScale,
                px, py, ux, uy, glyph.atlasScale,
                px + w, py, ux + uw, uy, glyph.atlasScale,
                px + w, py + h, ux + uw, uy + uh, glyph.atlasScale,
            ], characterOffset_vx * elementsPerVertex);
            // advance character quad in vertex array
            characterOffset_vx += characterVertexCount;
        }
        return {
            vertexArray: vertexArray,
            elementsPerVertex: elementsPerVertex,
            vertexCount: characterOffset_vx,
            vertexLayout: {
                position: {
                    elements: positionElements,
                    elementSizeBytes: elementSizeBytes,
                    strideBytes: vertexSizeBytes,
                    offsetBytes: 0,
                },
                uv: {
                    elements: uvElements,
                    elementSizeBytes: elementSizeBytes,
                    strideBytes: vertexSizeBytes,
                    offsetBytes: positionElements * elementSizeBytes,
                }
            }
        };
    };
    /**
     * Given buffer containing a binary GPUText file, parse it and generate a GPUTextFont object
     * @throws string on parse errors
     */
    GPUText.parse = function (buffer) {
        var dataView = new DataView(buffer);
        // read header string, expect utf-8 encoded
        // the end of the header string is marked by a null character
        var jsonHeader = '';
        var p = 0;
        for (; p < buffer.byteLength; p++) {
            var byte = dataView.getInt8(p);
            if (byte === 0)
                break;
            jsonHeader += String.fromCharCode(byte);
        }
        // payload is starts from the first byte after the null character
        var payloadStart = p + 1;
        var littleEndian = true;
        var header = JSON.parse(jsonHeader);
        // initialize GPUTextFont object
        var gpuTextFont = {
            format: header.format,
            version: header.version,
            technique: header.technique,
            ascender: header.ascender,
            descender: header.descender,
            typoAscender: header.typoAscender,
            typoDescender: header.typoDescender,
            lowercaseHeight: header.lowercaseHeight,
            metadata: header.metadata,
            fieldRange_px: header.fieldRange_px,
            characters: {},
            kerning: {},
            glyphBounds: undefined,
            textures: [],
            textureSize: header.textureSize,
        };
        // parse character data payload into GPUTextFont characters map
        var characterDataView = new DataView(buffer, payloadStart + header.characters.start, header.characters.length);
        var characterBlockLength_bytes = 4 + // advance: F32
            2 * 4 + // atlasRect(x, y, w, h): UI16
            4 + // atlasScale: F32
            4 * 2; // offset(x, y): F32
        for (var i = 0; i < header.charList.length; i++) {
            var char = header.charList[i];
            var b0 = i * characterBlockLength_bytes;
            var glyph = {
                atlasRect: {
                    x: characterDataView.getUint16(b0 + 4, littleEndian),
                    y: characterDataView.getUint16(b0 + 6, littleEndian),
                    w: characterDataView.getUint16(b0 + 8, littleEndian),
                    h: characterDataView.getUint16(b0 + 10, littleEndian),
                },
                atlasScale: characterDataView.getFloat32(b0 + 12, littleEndian),
                offset: {
                    x: characterDataView.getFloat32(b0 + 16, littleEndian),
                    y: characterDataView.getFloat32(b0 + 20, littleEndian),
                }
            };
            // A glyph with 0 size is considered to be a null-glyph
            var isNullGlyph = glyph.atlasRect.w === 0 || glyph.atlasRect.h === 0;
            var characterData = {
                advance: characterDataView.getFloat32(b0 + 0, littleEndian),
                glyph: isNullGlyph ? undefined : glyph
            };
            gpuTextFont.characters[char] = characterData;
        }
        // kerning payload
        var kerningDataView = new DataView(buffer, payloadStart + header.kerning.start, header.kerning.length);
        var kerningLength_bytes = 4;
        for (var i = 0; i < header.kerningPairs.length; i++) {
            var pair = header.kerningPairs[i];
            var kerning = kerningDataView.getFloat32(i * kerningLength_bytes, littleEndian);
            gpuTextFont.kerning[pair] = kerning;
        }
        // glyph bounds payload
        if (header.glyphBounds != null) {
            gpuTextFont.glyphBounds = {};
            var glyphBoundsDataView = new DataView(buffer, payloadStart + header.glyphBounds.start, header.glyphBounds.length);
            var glyphBoundsBlockLength_bytes = 4 * 4;
            for (var i = 0; i < header.charList.length; i++) {
                var char = header.charList[i];
                var b0 = i * glyphBoundsBlockLength_bytes;
                // t r b l
                var bounds = {
                    t: glyphBoundsDataView.getFloat32(b0 + 0, littleEndian),
                    r: glyphBoundsDataView.getFloat32(b0 + 4, littleEndian),
                    b: glyphBoundsDataView.getFloat32(b0 + 8, littleEndian),
                    l: glyphBoundsDataView.getFloat32(b0 + 12, littleEndian),
                };
                gpuTextFont.glyphBounds[char] = bounds;
            }
        }
        // texture payload
        // textures may be in the payload or an external reference
        for (var p_1 = 0; p_1 < header.textures.length; p_1++) {
            var page = header.textures[p_1];
            gpuTextFont.textures[p_1] = [];
            for (var m = 0; m < page.length; m++) {
                var mipmap = page[m];
                if (mipmap.payloadBytes != null) {
                    // convert payload's image bytes into a HTMLImageElement object
                    var imageBufferView = new Uint8Array(buffer, payloadStart + mipmap.payloadBytes.start, mipmap.payloadBytes.length);
                    var imageBlob = new Blob([imageBufferView], { type: "image/png" });
                    var image = new Image();
                    image.src = URL.createObjectURL(imageBlob);
                    gpuTextFont.textures[p_1][m] = image;
                }
                else if (mipmap.localPath != null) {
                    // payload contains no image bytes; the image is store externally, pass on the path
                    gpuTextFont.textures[p_1][m] = {
                        localPath: mipmap.localPath
                    };
                }
            }
        }
        return gpuTextFont;
    };
    return GPUText;
}());
exports.default = GPUText;
if (typeof window !== 'undefined') {
    // expose GPUText on the window object
    window.GPUText = GPUText;
}


/***/ }),

/***/ "../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "../node_modules/hyphenate-style-name/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/hyphenate-style-name/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uppercasePattern = /[A-Z]/g;
var msPattern = /^ms-/;
var cache = {};

function hyphenateStyleName(string) {
    return string in cache
    ? cache[string]
    : cache[string] = string
      .replace(uppercasePattern, '-$&')
      .toLowerCase()
      .replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;


/***/ }),

/***/ "../node_modules/is-buffer/index.js":
/*!******************************************!*\
  !*** ../node_modules/is-buffer/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),

/***/ "../node_modules/is-in-browser/dist/module.js":
/*!****************************************************!*\
  !*** ../node_modules/is-in-browser/dist/module.js ***!
  \****************************************************/
/*! exports provided: isBrowser, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBrowser", function() { return isBrowser; });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

/* harmony default export */ __webpack_exports__["default"] = (isBrowser);


/***/ }),

/***/ "../node_modules/is-plain-object/index.js":
/*!************************************************!*\
  !*** ../node_modules/is-plain-object/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */



var isObject = __webpack_require__(/*! isobject */ "../node_modules/isobject/index.js");

function isObjectObject(o) {
  return isObject(o) === true
    && Object.prototype.toString.call(o) === '[object Object]';
}

module.exports = function isPlainObject(o) {
  var ctor,prot;

  if (isObjectObject(o) === false) return false;

  // If has modified constructor
  ctor = o.constructor;
  if (typeof ctor !== 'function') return false;

  // If has modified prototype
  prot = ctor.prototype;
  if (isObjectObject(prot) === false) return false;

  // If constructor does not have an Object-specific method
  if (prot.hasOwnProperty('isPrototypeOf') === false) {
    return false;
  }

  // Most likely a plain Object
  return true;
};


/***/ }),

/***/ "../node_modules/isobject/index.js":
/*!*****************************************!*\
  !*** ../node_modules/isobject/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */



module.exports = function isObject(val) {
  return val != null && typeof val === 'object' && Array.isArray(val) === false;
};


/***/ }),

/***/ "../node_modules/jss-camel-case/lib/index.js":
/*!***************************************************!*\
  !*** ../node_modules/jss-camel-case/lib/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = camelCase;

var _hyphenateStyleName = __webpack_require__(/*! hyphenate-style-name */ "../node_modules/hyphenate-style-name/index.js");

var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */
function convertCase(style) {
  var converted = {};

  for (var prop in style) {
    converted[(0, _hyphenateStyleName2['default'])(prop)] = style[prop];
  }

  if (style.fallbacks) {
    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
  }

  return converted;
}

/**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */
function camelCase() {
  function onProcessStyle(style) {
    if (Array.isArray(style)) {
      // Handle rules like @font-face, which can have multiple styles in an array
      for (var index = 0; index < style.length; index++) {
        style[index] = convertCase(style[index]);
      }
      return style;
    }

    return convertCase(style);
  }

  function onChangeValue(value, prop, rule) {
    var hyphenatedProp = (0, _hyphenateStyleName2['default'])(prop);

    // There was no camel case in place
    if (prop === hyphenatedProp) return value;

    rule.prop(hyphenatedProp, value);

    // Core will ignore that property value we set the proper one above.
    return null;
  }

  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
}

/***/ }),

/***/ "../node_modules/jss-default-unit/lib/defaultUnits.js":
/*!************************************************************!*\
  !*** ../node_modules/jss-default-unit/lib/defaultUnits.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Generated jss-default-unit CSS property units
 *
 * @type object
 */
exports['default'] = {
  'animation-delay': 'ms',
  'animation-duration': 'ms',
  'background-position': 'px',
  'background-position-x': 'px',
  'background-position-y': 'px',
  'background-size': 'px',
  border: 'px',
  'border-bottom': 'px',
  'border-bottom-left-radius': 'px',
  'border-bottom-right-radius': 'px',
  'border-bottom-width': 'px',
  'border-left': 'px',
  'border-left-width': 'px',
  'border-radius': 'px',
  'border-right': 'px',
  'border-right-width': 'px',
  'border-spacing': 'px',
  'border-top': 'px',
  'border-top-left-radius': 'px',
  'border-top-right-radius': 'px',
  'border-top-width': 'px',
  'border-width': 'px',
  'border-after-width': 'px',
  'border-before-width': 'px',
  'border-end-width': 'px',
  'border-horizontal-spacing': 'px',
  'border-start-width': 'px',
  'border-vertical-spacing': 'px',
  bottom: 'px',
  'box-shadow': 'px',
  'column-gap': 'px',
  'column-rule': 'px',
  'column-rule-width': 'px',
  'column-width': 'px',
  'flex-basis': 'px',
  'font-size': 'px',
  'font-size-delta': 'px',
  height: 'px',
  left: 'px',
  'letter-spacing': 'px',
  'logical-height': 'px',
  'logical-width': 'px',
  margin: 'px',
  'margin-after': 'px',
  'margin-before': 'px',
  'margin-bottom': 'px',
  'margin-left': 'px',
  'margin-right': 'px',
  'margin-top': 'px',
  'max-height': 'px',
  'max-width': 'px',
  'margin-end': 'px',
  'margin-start': 'px',
  'mask-position-x': 'px',
  'mask-position-y': 'px',
  'mask-size': 'px',
  'max-logical-height': 'px',
  'max-logical-width': 'px',
  'min-height': 'px',
  'min-width': 'px',
  'min-logical-height': 'px',
  'min-logical-width': 'px',
  motion: 'px',
  'motion-offset': 'px',
  outline: 'px',
  'outline-offset': 'px',
  'outline-width': 'px',
  padding: 'px',
  'padding-bottom': 'px',
  'padding-left': 'px',
  'padding-right': 'px',
  'padding-top': 'px',
  'padding-after': 'px',
  'padding-before': 'px',
  'padding-end': 'px',
  'padding-start': 'px',
  'perspective-origin-x': '%',
  'perspective-origin-y': '%',
  perspective: 'px',
  right: 'px',
  'shape-margin': 'px',
  size: 'px',
  'text-indent': 'px',
  'text-stroke': 'px',
  'text-stroke-width': 'px',
  top: 'px',
  'transform-origin': '%',
  'transform-origin-x': '%',
  'transform-origin-y': '%',
  'transform-origin-z': '%',
  'transition-delay': 'ms',
  'transition-duration': 'ms',
  'vertical-align': 'px',
  width: 'px',
  'word-spacing': 'px',
  // Not existing properties.
  // Used to avoid issues with jss-expand intergration.
  'box-shadow-x': 'px',
  'box-shadow-y': 'px',
  'box-shadow-blur': 'px',
  'box-shadow-spread': 'px',
  'font-line-height': 'px',
  'text-shadow-x': 'px',
  'text-shadow-y': 'px',
  'text-shadow-blur': 'px'
};

/***/ }),

/***/ "../node_modules/jss-default-unit/lib/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/jss-default-unit/lib/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = defaultUnit;

var _defaultUnits = __webpack_require__(/*! ./defaultUnits */ "../node_modules/jss-default-unit/lib/defaultUnits.js");

var _defaultUnits2 = _interopRequireDefault(_defaultUnits);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Clones the object and adds a camel cased property version.
 */
function addCamelCasedVersion(obj) {
  var regExp = /(-[a-z])/g;
  var replace = function replace(str) {
    return str[1].toUpperCase();
  };
  var newObj = {};
  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp, replace)] = obj[key];
  }
  return newObj;
}

var units = addCamelCasedVersion(_defaultUnits2['default']);

/**
 * Recursive deep style passing function
 *
 * @param {String} current property
 * @param {(Object|Array|Number|String)} property value
 * @param {Object} options
 * @return {(Object|Array|Number|String)} resulting value
 */
function iterate(prop, value, options) {
  if (!value) return value;

  var convertedValue = value;

  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  if (type === 'object' && Array.isArray(value)) type = 'array';

  switch (type) {
    case 'object':
      if (prop === 'fallbacks') {
        for (var innerProp in value) {
          value[innerProp] = iterate(innerProp, value[innerProp], options);
        }
        break;
      }
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
      }
      break;
    case 'array':
      for (var i = 0; i < value.length; i++) {
        value[i] = iterate(prop, value[i], options);
      }
      break;
    case 'number':
      if (value !== 0) {
        convertedValue = value + (options[prop] || units[prop] || '');
      }
      break;
    default:
      break;
  }

  return convertedValue;
}

/**
 * Add unit to numeric values.
 */
function defaultUnit() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var camelCasedOptions = addCamelCasedVersion(options);

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    for (var prop in style) {
      style[prop] = iterate(prop, style[prop], camelCasedOptions);
    }

    return style;
  }

  function onChangeValue(value, prop) {
    return iterate(prop, value, camelCasedOptions);
  }

  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
}

/***/ }),

/***/ "../node_modules/jss-global/lib/index.js":
/*!***********************************************!*\
  !*** ../node_modules/jss-global/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports['default'] = jssGlobal;

var _jss = __webpack_require__(/*! jss */ "../node_modules/jss/lib/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var propKey = '@global';
var prefixKey = '@global ';

var GlobalContainerRule = function () {
  function GlobalContainerRule(key, styles, options) {
    _classCallCheck(this, GlobalContainerRule);

    this.type = 'global';

    this.key = key;
    this.options = options;
    this.rules = new _jss.RuleList(_extends({}, options, {
      parent: this
    }));

    for (var selector in styles) {
      this.rules.add(selector, styles[selector], { selector: selector });
    }

    this.rules.process();
  }

  /**
   * Get a rule.
   */


  _createClass(GlobalContainerRule, [{
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Create and register rule, run plugins.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, style, options) {
      var rule = this.rules.add(name, style, options);
      this.options.jss.plugins.onProcessRule(rule);
      return rule;
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString() {
      return this.rules.toString();
    }
  }]);

  return GlobalContainerRule;
}();

var GlobalPrefixedRule = function () {
  function GlobalPrefixedRule(name, style, options) {
    _classCallCheck(this, GlobalPrefixedRule);

    this.name = name;
    this.options = options;
    var selector = name.substr(prefixKey.length);
    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
      parent: this,
      selector: selector
    }));
  }

  _createClass(GlobalPrefixedRule, [{
    key: 'toString',
    value: function toString(options) {
      return this.rule.toString(options);
    }
  }]);

  return GlobalPrefixedRule;
}();

var separatorRegExp = /\s*,\s*/g;

function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = '';
  for (var i = 0; i < parts.length; i++) {
    scoped += scope + ' ' + parts[i].trim();
    if (parts[i + 1]) scoped += ', ';
  }
  return scoped;
}

function handleNestedGlobalContainerRule(rule) {
  var options = rule.options,
      style = rule.style;

  var rules = style[propKey];

  if (!rules) return;

  for (var name in rules) {
    options.sheet.addRule(name, rules[name], _extends({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }

  delete style[propKey];
}

function handlePrefixedGlobalRule(rule) {
  var options = rule.options,
      style = rule.style;

  for (var prop in style) {
    if (prop.substr(0, propKey.length) !== propKey) continue;

    var selector = addScope(prop.substr(propKey.length), rule.selector);
    options.sheet.addRule(selector, style[prop], _extends({}, options, {
      selector: selector
    }));
    delete style[prop];
  }
}

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */
function jssGlobal() {
  function onCreateRule(name, styles, options) {
    if (name === propKey) {
      return new GlobalContainerRule(name, styles, options);
    }

    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
      return new GlobalPrefixedRule(name, styles, options);
    }

    var parent = options.parent;


    if (parent) {
      if (parent.type === 'global' || parent.options.parent.type === 'global') {
        options.global = true;
      }
    }

    if (options.global) options.selector = name;

    return null;
  }

  function onProcessRule(rule) {
    if (rule.type !== 'style') return;

    handleNestedGlobalContainerRule(rule);
    handlePrefixedGlobalRule(rule);
  }

  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
}

/***/ }),

/***/ "../node_modules/jss-nested/lib/index.js":
/*!***********************************************!*\
  !*** ../node_modules/jss-nested/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = jssNested;

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss-nested/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var separatorRegExp = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp = /\$([\w-]+)/g;

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */
function jssNested() {
  // Get a function to be used for $ref replacement.
  function getReplaceRef(container) {
    return function (match, key) {
      var rule = container.getRule(key);
      if (rule) return rule.selector;
      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
      return key;
    };
  }

  var hasAnd = function hasAnd(str) {
    return str.indexOf('&') !== -1;
  };

  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp);
    var nestedSelectors = nestedProp.split(separatorRegExp);

    var result = '';

    for (var i = 0; i < parentSelectors.length; i++) {
      var parent = parentSelectors[i];

      for (var j = 0; j < nestedSelectors.length; j++) {
        var nested = nestedSelectors[j];
        if (result) result += ', ';
        // Replace all & by the parent or prefix & with the parent.
        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
      }
    }

    return result;
  }

  function getOptions(rule, container, options) {
    // Options has been already created, now we only increase index.
    if (options) return _extends({}, options, { index: options.index + 1 });

    var nestingLevel = rule.options.nestingLevel;

    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

    return _extends({}, rule.options, {
      nestingLevel: nestingLevel,
      index: container.indexOf(rule) + 1
    });
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;
    var container = rule.options.parent;
    var options = void 0;
    var replaceRef = void 0;
    for (var prop in style) {
      var isNested = hasAnd(prop);
      var isNestedConditional = prop[0] === '@';

      if (!isNested && !isNestedConditional) continue;

      options = getOptions(rule, container, options);

      if (isNested) {
        var selector = replaceParentRefs(prop, rule.selector
        // Lazily create the ref replacer function just once for
        // all nested rules within the sheet.
        );if (!replaceRef) replaceRef = getReplaceRef(container
        // Replace all $refs.
        );selector = selector.replace(refRegExp, replaceRef);

        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
      } else if (isNestedConditional) {
        container
        // Place conditional right after the parent rule to ensure right ordering.
        .addRule(prop, null, options).addRule(rule.key, style[prop], { selector: rule.selector });
      }

      delete style[prop];
    }

    return style;
  }

  return { onProcessStyle: onProcessStyle };
}

/***/ }),

/***/ "../node_modules/jss-nested/node_modules/warning/browser.js":
/*!******************************************************************!*\
  !*** ../node_modules/jss-nested/node_modules/warning/browser.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (true) {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;


/***/ }),

/***/ "../node_modules/jss-props-sort/lib/index.js":
/*!***************************************************!*\
  !*** ../node_modules/jss-props-sort/lib/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = jssPropsSort;
/**
 * Sort props by length.
 */
function jssPropsSort() {
  function sort(prop0, prop1) {
    return prop0.length - prop1.length;
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    var newStyle = {};
    var props = Object.keys(style).sort(sort);
    for (var prop in props) {
      newStyle[props[prop]] = style[props[prop]];
    }
    return newStyle;
  }

  return { onProcessStyle: onProcessStyle };
}

/***/ }),

/***/ "../node_modules/jss-vendor-prefixer/lib/index.js":
/*!********************************************************!*\
  !*** ../node_modules/jss-vendor-prefixer/lib/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = jssVendorPrefixer;

var _cssVendor = __webpack_require__(/*! css-vendor */ "../node_modules/css-vendor/lib/index.js");

var vendor = _interopRequireWildcard(_cssVendor);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 * Add vendor prefix to a property name when needed.
 *
 * @param {Rule} rule
 * @api public
 */
function jssVendorPrefixer() {
  function onProcessRule(rule) {
    if (rule.type === 'keyframes') {
      rule.key = '@' + vendor.prefix.css + rule.key.substr(1);
    }
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    for (var prop in style) {
      var value = style[prop];

      var changeProp = false;
      var supportedProp = vendor.supportedProperty(prop);
      if (supportedProp && supportedProp !== prop) changeProp = true;

      var changeValue = false;
      var supportedValue = vendor.supportedValue(supportedProp, value);
      if (supportedValue && supportedValue !== value) changeValue = true;

      if (changeProp || changeValue) {
        if (changeProp) delete style[prop];
        style[supportedProp || prop] = supportedValue || value;
      }
    }

    return style;
  }

  function onChangeValue(value, prop) {
    return vendor.supportedValue(prop, value);
  }

  return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
}

/***/ }),

/***/ "../node_modules/jss/lib/Jss.js":
/*!**************************************!*\
  !*** ../node_modules/jss/lib/Jss.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isInBrowser = __webpack_require__(/*! is-in-browser */ "../node_modules/is-in-browser/dist/module.js");

var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

var _StyleSheet = __webpack_require__(/*! ./StyleSheet */ "../node_modules/jss/lib/StyleSheet.js");

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _PluginsRegistry = __webpack_require__(/*! ./PluginsRegistry */ "../node_modules/jss/lib/PluginsRegistry.js");

var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);

var _rules = __webpack_require__(/*! ./plugins/rules */ "../node_modules/jss/lib/plugins/rules.js");

var _rules2 = _interopRequireDefault(_rules);

var _observables = __webpack_require__(/*! ./plugins/observables */ "../node_modules/jss/lib/plugins/observables.js");

var _observables2 = _interopRequireDefault(_observables);

var _functions = __webpack_require__(/*! ./plugins/functions */ "../node_modules/jss/lib/plugins/functions.js");

var _functions2 = _interopRequireDefault(_functions);

var _sheets = __webpack_require__(/*! ./sheets */ "../node_modules/jss/lib/sheets.js");

var _sheets2 = _interopRequireDefault(_sheets);

var _StyleRule = __webpack_require__(/*! ./rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createGenerateClassName = __webpack_require__(/*! ./utils/createGenerateClassName */ "../node_modules/jss/lib/utils/createGenerateClassName.js");

var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

var _createRule2 = __webpack_require__(/*! ./utils/createRule */ "../node_modules/jss/lib/utils/createRule.js");

var _createRule3 = _interopRequireDefault(_createRule2);

var _DomRenderer = __webpack_require__(/*! ./renderers/DomRenderer */ "../node_modules/jss/lib/renderers/DomRenderer.js");

var _DomRenderer2 = _interopRequireDefault(_DomRenderer);

var _VirtualRenderer = __webpack_require__(/*! ./renderers/VirtualRenderer */ "../node_modules/jss/lib/renderers/VirtualRenderer.js");

var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var defaultPlugins = _rules2['default'].concat([_observables2['default'], _functions2['default']]);

var instanceCounter = 0;

var Jss = function () {
  function Jss(options) {
    _classCallCheck(this, Jss);

    this.id = instanceCounter++;
    this.version = "9.8.7";
    this.plugins = new _PluginsRegistry2['default']();
    this.options = {
      createGenerateClassName: _createGenerateClassName2['default'],
      Renderer: _isInBrowser2['default'] ? _DomRenderer2['default'] : _VirtualRenderer2['default'],
      plugins: []
    };
    this.generateClassName = (0, _createGenerateClassName2['default'])();

    // eslint-disable-next-line prefer-spread
    this.use.apply(this, defaultPlugins);
    this.setup(options);
  }

  _createClass(Jss, [{
    key: 'setup',
    value: function setup() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (options.createGenerateClassName) {
        this.options.createGenerateClassName = options.createGenerateClassName;
        // $FlowFixMe
        this.generateClassName = options.createGenerateClassName();
      }

      if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;
      if (options.virtual || options.Renderer) {
        this.options.Renderer = options.Renderer || (options.virtual ? _VirtualRenderer2['default'] : _DomRenderer2['default']);
      }

      // eslint-disable-next-line prefer-spread
      if (options.plugins) this.use.apply(this, options.plugins);

      return this;
    }

    /**
     * Create a Style Sheet.
     */

  }, {
    key: 'createStyleSheet',
    value: function createStyleSheet(styles) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var index = options.index;
      if (typeof index !== 'number') {
        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
      }
      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
        jss: this,
        generateClassName: options.generateClassName || this.generateClassName,
        insertionPoint: this.options.insertionPoint,
        Renderer: this.options.Renderer,
        index: index
      }));
      this.plugins.onProcessSheet(sheet);

      return sheet;
    }

    /**
     * Detach the Style Sheet and remove it from the registry.
     */

  }, {
    key: 'removeStyleSheet',
    value: function removeStyleSheet(sheet) {
      sheet.detach();
      _sheets2['default'].remove(sheet);
      return this;
    }

    /**
     * Create a rule without a Style Sheet.
     */

  }, {
    key: 'createRule',
    value: function createRule(name) {
      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      // Enable rule without name for inline styles.
      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
        options = style;
        style = name;
        name = undefined;
      }

      // Cast from RuleFactoryOptions to RuleOptions
      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
      var ruleOptions = options;

      ruleOptions.jss = this;
      ruleOptions.Renderer = this.options.Renderer;
      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
      if (!ruleOptions.classes) ruleOptions.classes = {};
      var rule = (0, _createRule3['default'])(name, style, ruleOptions);

      if (!ruleOptions.selector && rule instanceof _StyleRule2['default']) {
        rule.selector = '.' + ruleOptions.generateClassName(rule);
      }

      this.plugins.onProcessRule(rule);

      return rule;
    }

    /**
     * Register plugin. Passed function will be invoked with a rule instance.
     */

  }, {
    key: 'use',
    value: function use() {
      var _this = this;

      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
        plugins[_key] = arguments[_key];
      }

      plugins.forEach(function (plugin) {
        // Avoids applying same plugin twice, at least based on ref.
        if (_this.options.plugins.indexOf(plugin) === -1) {
          _this.options.plugins.push(plugin);
          _this.plugins.use(plugin);
        }
      });

      return this;
    }
  }]);

  return Jss;
}();

exports['default'] = Jss;

/***/ }),

/***/ "../node_modules/jss/lib/PluginsRegistry.js":
/*!**************************************************!*\
  !*** ../node_modules/jss/lib/PluginsRegistry.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PluginsRegistry = function () {
  function PluginsRegistry() {
    _classCallCheck(this, PluginsRegistry);

    this.hooks = {
      onCreateRule: [],
      onProcessRule: [],
      onProcessStyle: [],
      onProcessSheet: [],
      onChangeValue: [],
      onUpdate: []

      /**
       * Call `onCreateRule` hooks and return an object if returned by a hook.
       */
    };
  }

  _createClass(PluginsRegistry, [{
    key: 'onCreateRule',
    value: function onCreateRule(name, decl, options) {
      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
        var rule = this.hooks.onCreateRule[i](name, decl, options);
        if (rule) return rule;
      }
      return null;
    }

    /**
     * Call `onProcessRule` hooks.
     */

  }, {
    key: 'onProcessRule',
    value: function onProcessRule(rule) {
      if (rule.isProcessed) return;
      var sheet = rule.options.sheet;

      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
        this.hooks.onProcessRule[i](rule, sheet);
      }

      // $FlowFixMe
      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);

      rule.isProcessed = true;
    }

    /**
     * Call `onProcessStyle` hooks.
     */

  }, {
    key: 'onProcessStyle',
    value: function onProcessStyle(style, rule, sheet) {
      var nextStyle = style;

      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
        // $FlowFixMe
        rule.style = nextStyle;
      }
    }

    /**
     * Call `onProcessSheet` hooks.
     */

  }, {
    key: 'onProcessSheet',
    value: function onProcessSheet(sheet) {
      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
        this.hooks.onProcessSheet[i](sheet);
      }
    }

    /**
     * Call `onUpdate` hooks.
     */

  }, {
    key: 'onUpdate',
    value: function onUpdate(data, rule, sheet) {
      for (var i = 0; i < this.hooks.onUpdate.length; i++) {
        this.hooks.onUpdate[i](data, rule, sheet);
      }
    }

    /**
     * Call `onChangeValue` hooks.
     */

  }, {
    key: 'onChangeValue',
    value: function onChangeValue(value, prop, rule) {
      var processedValue = value;
      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
      }
      return processedValue;
    }

    /**
     * Register a plugin.
     * If function is passed, it is a shortcut for `{onProcessRule}`.
     */

  }, {
    key: 'use',
    value: function use(plugin) {
      for (var name in plugin) {
        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
      }
    }
  }]);

  return PluginsRegistry;
}();

exports['default'] = PluginsRegistry;

/***/ }),

/***/ "../node_modules/jss/lib/RuleList.js":
/*!*******************************************!*\
  !*** ../node_modules/jss/lib/RuleList.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _createRule = __webpack_require__(/*! ./utils/createRule */ "../node_modules/jss/lib/utils/createRule.js");

var _createRule2 = _interopRequireDefault(_createRule);

var _linkRule = __webpack_require__(/*! ./utils/linkRule */ "../node_modules/jss/lib/utils/linkRule.js");

var _linkRule2 = _interopRequireDefault(_linkRule);

var _StyleRule = __webpack_require__(/*! ./rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _escape = __webpack_require__(/*! ./utils/escape */ "../node_modules/jss/lib/utils/escape.js");

var _escape2 = _interopRequireDefault(_escape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Contains rules objects and allows adding/removing etc.
 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
 */
var RuleList = function () {

  // Original styles object.
  function RuleList(options) {
    var _this = this;

    _classCallCheck(this, RuleList);

    this.map = {};
    this.raw = {};
    this.index = [];

    this.update = function (name, data) {
      var _options = _this.options,
          plugins = _options.jss.plugins,
          sheet = _options.sheet;

      if (typeof name === 'string') {
        plugins.onUpdate(data, _this.get(name), sheet);
      } else {
        for (var index = 0; index < _this.index.length; index++) {
          plugins.onUpdate(name, _this.index[index], sheet);
        }
      }
    };

    this.options = options;
    this.classes = options.classes;
  }

  /**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */


  // Used to ensure correct rules order.

  // Rules registry for access by .get() method.
  // It contains the same rule registered by name and by selector.


  _createClass(RuleList, [{
    key: 'add',
    value: function add(name, decl, options) {
      var _options2 = this.options,
          parent = _options2.parent,
          sheet = _options2.sheet,
          jss = _options2.jss,
          Renderer = _options2.Renderer,
          generateClassName = _options2.generateClassName;


      options = _extends({
        classes: this.classes,
        parent: parent,
        sheet: sheet,
        jss: jss,
        Renderer: Renderer,
        generateClassName: generateClassName
      }, options);

      if (!options.selector && this.classes[name]) {
        options.selector = '.' + (0, _escape2['default'])(this.classes[name]);
      }

      this.raw[name] = decl;

      var rule = (0, _createRule2['default'])(name, decl, options);

      var className = void 0;

      if (!options.selector && rule instanceof _StyleRule2['default']) {
        className = generateClassName(rule, sheet);
        rule.selector = '.' + (0, _escape2['default'])(className);
      }

      this.register(rule, className);

      var index = options.index === undefined ? this.index.length : options.index;
      this.index.splice(index, 0, rule);

      return rule;
    }

    /**
     * Get a rule.
     */

  }, {
    key: 'get',
    value: function get(name) {
      return this.map[name];
    }

    /**
     * Delete a rule.
     */

  }, {
    key: 'remove',
    value: function remove(rule) {
      this.unregister(rule);
      this.index.splice(this.indexOf(rule), 1);
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.index.indexOf(rule);
    }

    /**
     * Run `onProcessRule()` plugins on every rule.
     */

  }, {
    key: 'process',
    value: function process() {
      var plugins = this.options.jss.plugins;
      // We need to clone array because if we modify the index somewhere else during a loop
      // we end up with very hard-to-track-down side effects.

      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
    }

    /**
     * Register a rule in `.map` and `.classes` maps.
     */

  }, {
    key: 'register',
    value: function register(rule, className) {
      this.map[rule.key] = rule;
      if (rule instanceof _StyleRule2['default']) {
        this.map[rule.selector] = rule;
        if (className) this.classes[rule.key] = className;
      }
    }

    /**
     * Unregister a rule.
     */

  }, {
    key: 'unregister',
    value: function unregister(rule) {
      delete this.map[rule.key];
      if (rule instanceof _StyleRule2['default']) {
        delete this.map[rule.selector];
        delete this.classes[rule.key];
      }
    }

    /**
     * Update the function values with a new data.
     */

  }, {
    key: 'link',


    /**
     * Link renderable rules with CSSRuleList.
     */
    value: function link(cssRules) {
      var map = this.options.sheet.renderer.getUnescapedKeysMap(this.index);

      for (var i = 0; i < cssRules.length; i++) {
        var cssRule = cssRules[i];
        var _key = this.options.sheet.renderer.getKey(cssRule);
        if (map[_key]) _key = map[_key];
        var rule = this.map[_key];
        if (rule) (0, _linkRule2['default'])(rule, cssRule);
      }
    }

    /**
     * Convert rules to a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      var str = '';
      var sheet = this.options.sheet;

      var link = sheet ? sheet.options.link : false;

      for (var index = 0; index < this.index.length; index++) {
        var rule = this.index[index];
        var css = rule.toString(options);

        // No need to render an empty rule.
        if (!css && !link) continue;

        if (str) str += '\n';
        str += css;
      }

      return str;
    }
  }]);

  return RuleList;
}();

exports['default'] = RuleList;

/***/ }),

/***/ "../node_modules/jss/lib/SheetsManager.js":
/*!************************************************!*\
  !*** ../node_modules/jss/lib/SheetsManager.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */
var SheetsManager = function () {
  function SheetsManager() {
    _classCallCheck(this, SheetsManager);

    this.sheets = [];
    this.refs = [];
    this.keys = [];
  }

  _createClass(SheetsManager, [{
    key: 'get',
    value: function get(key) {
      var index = this.keys.indexOf(key);
      return this.sheets[index];
    }
  }, {
    key: 'add',
    value: function add(key, sheet) {
      var sheets = this.sheets,
          refs = this.refs,
          keys = this.keys;

      var index = sheets.indexOf(sheet);

      if (index !== -1) return index;

      sheets.push(sheet);
      refs.push(0);
      keys.push(key);

      return sheets.length - 1;
    }
  }, {
    key: 'manage',
    value: function manage(key) {
      var index = this.keys.indexOf(key);
      var sheet = this.sheets[index];
      if (this.refs[index] === 0) sheet.attach();
      this.refs[index]++;
      if (!this.keys[index]) this.keys.splice(index, 0, key);
      return sheet;
    }
  }, {
    key: 'unmanage',
    value: function unmanage(key) {
      var index = this.keys.indexOf(key);
      if (index === -1) {
        // eslint-ignore-next-line no-console
        (0, _warning2['default'])(false, "SheetsManager: can't find sheet to unmanage");
        return;
      }
      if (this.refs[index] > 0) {
        this.refs[index]--;
        if (this.refs[index] === 0) this.sheets[index].detach();
      }
    }
  }, {
    key: 'size',
    get: function get() {
      return this.keys.length;
    }
  }]);

  return SheetsManager;
}();

exports['default'] = SheetsManager;

/***/ }),

/***/ "../node_modules/jss/lib/SheetsRegistry.js":
/*!*************************************************!*\
  !*** ../node_modules/jss/lib/SheetsRegistry.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Sheets registry to access them all at one place.
 */
var SheetsRegistry = function () {
  function SheetsRegistry() {
    _classCallCheck(this, SheetsRegistry);

    this.registry = [];
  }

  _createClass(SheetsRegistry, [{
    key: 'add',


    /**
     * Register a Style Sheet.
     */
    value: function add(sheet) {
      var registry = this.registry;
      var index = sheet.options.index;


      if (registry.indexOf(sheet) !== -1) return;

      if (registry.length === 0 || index >= this.index) {
        registry.push(sheet);
        return;
      }

      // Find a position.
      for (var i = 0; i < registry.length; i++) {
        if (registry[i].options.index > index) {
          registry.splice(i, 0, sheet);
          return;
        }
      }
    }

    /**
     * Reset the registry.
     */

  }, {
    key: 'reset',
    value: function reset() {
      this.registry = [];
    }

    /**
     * Remove a Style Sheet.
     */

  }, {
    key: 'remove',
    value: function remove(sheet) {
      var index = this.registry.indexOf(sheet);
      this.registry.splice(index, 1);
    }

    /**
     * Convert all attached sheets to a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      return this.registry.filter(function (sheet) {
        return sheet.attached;
      }).map(function (sheet) {
        return sheet.toString(options);
      }).join('\n');
    }
  }, {
    key: 'index',


    /**
     * Current highest index number.
     */
    get: function get() {
      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
    }
  }]);

  return SheetsRegistry;
}();

exports['default'] = SheetsRegistry;

/***/ }),

/***/ "../node_modules/jss/lib/StyleSheet.js":
/*!*********************************************!*\
  !*** ../node_modules/jss/lib/StyleSheet.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _linkRule = __webpack_require__(/*! ./utils/linkRule */ "../node_modules/jss/lib/utils/linkRule.js");

var _linkRule2 = _interopRequireDefault(_linkRule);

var _RuleList = __webpack_require__(/*! ./RuleList */ "../node_modules/jss/lib/RuleList.js");

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable-next-line no-use-before-define */
var StyleSheet = function () {
  function StyleSheet(styles, options) {
    var _this = this;

    _classCallCheck(this, StyleSheet);

    this.update = function (name, data) {
      if (typeof name === 'string') {
        _this.rules.update(name, data);
      } else {
        _this.rules.update(name);
      }
      return _this;
    };

    this.attached = false;
    this.deployed = false;
    this.linked = false;
    this.classes = {};
    this.options = _extends({}, options, {
      sheet: this,
      parent: this,
      classes: this.classes
    });
    this.renderer = new options.Renderer(this);
    this.rules = new _RuleList2['default'](this.options);

    for (var _name in styles) {
      this.rules.add(_name, styles[_name]);
    }

    this.rules.process();
  }

  /**
   * Attach renderable to the render tree.
   */


  _createClass(StyleSheet, [{
    key: 'attach',
    value: function attach() {
      if (this.attached) return this;
      if (!this.deployed) this.deploy();
      this.renderer.attach();
      if (!this.linked && this.options.link) this.link();
      this.attached = true;
      return this;
    }

    /**
     * Remove renderable from render tree.
     */

  }, {
    key: 'detach',
    value: function detach() {
      if (!this.attached) return this;
      this.renderer.detach();
      this.attached = false;
      return this;
    }

    /**
     * Add a rule to the current stylesheet.
     * Will insert a rule also after the stylesheet has been rendered first time.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, decl, options) {
      var queue = this.queue;

      // Plugins can create rules.
      // In order to preserve the right order, we need to queue all `.addRule` calls,
      // which happen after the first `rules.add()` call.

      if (this.attached && !queue) this.queue = [];

      var rule = this.rules.add(name, decl, options);
      this.options.jss.plugins.onProcessRule(rule);

      if (this.attached) {
        if (!this.deployed) return rule;
        // Don't insert rule directly if there is no stringified version yet.
        // It will be inserted all together when .attach is called.
        if (queue) queue.push(rule);else {
          this.insertRule(rule);
          if (this.queue) {
            this.queue.forEach(this.insertRule, this);
            this.queue = undefined;
          }
        }
        return rule;
      }

      // We can't add rules to a detached style node.
      // We will redeploy the sheet once user will attach it.
      this.deployed = false;

      return rule;
    }

    /**
     * Insert rule into the StyleSheet
     */

  }, {
    key: 'insertRule',
    value: function insertRule(rule) {
      var renderable = this.renderer.insertRule(rule);
      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
    }

    /**
     * Create and add rules.
     * Will render also after Style Sheet was rendered the first time.
     */

  }, {
    key: 'addRules',
    value: function addRules(styles, options) {
      var added = [];
      for (var _name2 in styles) {
        added.push(this.addRule(_name2, styles[_name2], options));
      }
      return added;
    }

    /**
     * Get a rule by name.
     */

  }, {
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Delete a rule by name.
     * Returns `true`: if rule has been deleted from the DOM.
     */

  }, {
    key: 'deleteRule',
    value: function deleteRule(name) {
      var rule = this.rules.get(name);

      if (!rule) return false;

      this.rules.remove(rule);

      if (this.attached && rule.renderable) {
        return this.renderer.deleteRule(rule.renderable);
      }

      return true;
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Deploy pure CSS string to a renderable.
     */

  }, {
    key: 'deploy',
    value: function deploy() {
      this.renderer.deploy();
      this.deployed = true;
      return this;
    }

    /**
     * Link renderable CSS rules from sheet with their corresponding models.
     */

  }, {
    key: 'link',
    value: function link() {
      var cssRules = this.renderer.getRules();

      // Is undefined when VirtualRenderer is used.
      if (cssRules) this.rules.link(cssRules);
      this.linked = true;
      return this;
    }

    /**
     * Update the function values with a new data.
     */

  }, {
    key: 'toString',


    /**
     * Convert rules to a CSS string.
     */
    value: function toString(options) {
      return this.rules.toString(options);
    }
  }]);

  return StyleSheet;
}();

exports['default'] = StyleSheet;

/***/ }),

/***/ "../node_modules/jss/lib/index.js":
/*!****************************************!*\
  !*** ../node_modules/jss/lib/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = exports.createGenerateClassName = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.toCssValue = exports.getDynamicStyles = undefined;

var _getDynamicStyles = __webpack_require__(/*! ./utils/getDynamicStyles */ "../node_modules/jss/lib/utils/getDynamicStyles.js");

Object.defineProperty(exports, 'getDynamicStyles', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_getDynamicStyles)['default'];
  }
});

var _toCssValue = __webpack_require__(/*! ./utils/toCssValue */ "../node_modules/jss/lib/utils/toCssValue.js");

Object.defineProperty(exports, 'toCssValue', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_toCssValue)['default'];
  }
});

var _SheetsRegistry = __webpack_require__(/*! ./SheetsRegistry */ "../node_modules/jss/lib/SheetsRegistry.js");

Object.defineProperty(exports, 'SheetsRegistry', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SheetsRegistry)['default'];
  }
});

var _SheetsManager = __webpack_require__(/*! ./SheetsManager */ "../node_modules/jss/lib/SheetsManager.js");

Object.defineProperty(exports, 'SheetsManager', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_SheetsManager)['default'];
  }
});

var _RuleList = __webpack_require__(/*! ./RuleList */ "../node_modules/jss/lib/RuleList.js");

Object.defineProperty(exports, 'RuleList', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_RuleList)['default'];
  }
});

var _sheets = __webpack_require__(/*! ./sheets */ "../node_modules/jss/lib/sheets.js");

Object.defineProperty(exports, 'sheets', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_sheets)['default'];
  }
});

var _createGenerateClassName = __webpack_require__(/*! ./utils/createGenerateClassName */ "../node_modules/jss/lib/utils/createGenerateClassName.js");

Object.defineProperty(exports, 'createGenerateClassName', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_createGenerateClassName)['default'];
  }
});

var _Jss = __webpack_require__(/*! ./Jss */ "../node_modules/jss/lib/Jss.js");

var _Jss2 = _interopRequireDefault(_Jss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Creates a new instance of Jss.
 */
var create = exports.create = function create(options) {
  return new _Jss2['default'](options);
};

/**
 * A global Jss instance.
 */
exports['default'] = create();

/***/ }),

/***/ "../node_modules/jss/lib/plugins/functions.js":
/*!****************************************************!*\
  !*** ../node_modules/jss/lib/plugins/functions.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _RuleList = __webpack_require__(/*! ../RuleList */ "../node_modules/jss/lib/RuleList.js");

var _RuleList2 = _interopRequireDefault(_RuleList);

var _StyleRule = __webpack_require__(/*! ../rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createRule = __webpack_require__(/*! ../utils/createRule */ "../node_modules/jss/lib/utils/createRule.js");

var _createRule2 = _interopRequireDefault(_createRule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// A symbol replacement.
var now = Date.now();

var fnValuesNs = 'fnValues' + now;
var fnStyleNs = 'fnStyle' + ++now;

exports['default'] = {
  onCreateRule: function onCreateRule(name, decl, options) {
    if (typeof decl !== 'function') return null;
    var rule = (0, _createRule2['default'])(name, {}, options);
    rule[fnStyleNs] = decl;
    return rule;
  },
  onProcessStyle: function onProcessStyle(style, rule) {
    var fn = {};
    for (var prop in style) {
      var value = style[prop];
      if (typeof value !== 'function') continue;
      delete style[prop];
      fn[prop] = value;
    }
    rule = rule;
    rule[fnValuesNs] = fn;
    return style;
  },
  onUpdate: function onUpdate(data, rule) {
    // It is a rules container like for e.g. ConditionalRule.
    if (rule.rules instanceof _RuleList2['default']) {
      rule.rules.update(data);
      return;
    }
    if (!(rule instanceof _StyleRule2['default'])) return;

    rule = rule;

    // If we have a fn values map, it is a rule with function values.
    if (rule[fnValuesNs]) {
      for (var prop in rule[fnValuesNs]) {
        rule.prop(prop, rule[fnValuesNs][prop](data));
      }
    }

    rule = rule;

    var fnStyle = rule[fnStyleNs];

    // If we have a style function, the entire rule is dynamic and style object
    // will be returned from that function.
    if (fnStyle) {
      var style = fnStyle(data);
      for (var _prop in style) {
        rule.prop(_prop, style[_prop]);
      }
    }
  }
};

/***/ }),

/***/ "../node_modules/jss/lib/plugins/observables.js":
/*!******************************************************!*\
  !*** ../node_modules/jss/lib/plugins/observables.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _StyleRule = __webpack_require__(/*! ../rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _createRule = __webpack_require__(/*! ../utils/createRule */ "../node_modules/jss/lib/utils/createRule.js");

var _createRule2 = _interopRequireDefault(_createRule);

var _isObservable = __webpack_require__(/*! ../utils/isObservable */ "../node_modules/jss/lib/utils/isObservable.js");

var _isObservable2 = _interopRequireDefault(_isObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  onCreateRule: function onCreateRule(name, decl, options) {
    if (!(0, _isObservable2['default'])(decl)) return null;

    // Cast `decl` to `Observable`, since it passed the type guard.
    var style$ = decl;

    var rule = (0, _createRule2['default'])(name, {}, options);

    // TODO
    // Call `stream.subscribe()` returns a subscription, which should be explicitly
    // unsubscribed from when we know this sheet is no longer needed.
    style$.subscribe(function (style) {
      for (var prop in style) {
        rule.prop(prop, style[prop]);
      }
    });

    return rule;
  },
  onProcessRule: function onProcessRule(rule) {
    if (!(rule instanceof _StyleRule2['default'])) return;
    var styleRule = rule;
    var style = styleRule.style;

    var _loop = function _loop(prop) {
      var value = style[prop];
      if (!(0, _isObservable2['default'])(value)) return 'continue';
      delete style[prop];
      value.subscribe({
        next: function next(nextValue) {
          styleRule.prop(prop, nextValue);
        }
      });
    };

    for (var prop in style) {
      var _ret = _loop(prop);

      if (_ret === 'continue') continue;
    }
  }
};

/***/ }),

/***/ "../node_modules/jss/lib/plugins/rules.js":
/*!************************************************!*\
  !*** ../node_modules/jss/lib/plugins/rules.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SimpleRule = __webpack_require__(/*! ../rules/SimpleRule */ "../node_modules/jss/lib/rules/SimpleRule.js");

var _SimpleRule2 = _interopRequireDefault(_SimpleRule);

var _KeyframesRule = __webpack_require__(/*! ../rules/KeyframesRule */ "../node_modules/jss/lib/rules/KeyframesRule.js");

var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);

var _ConditionalRule = __webpack_require__(/*! ../rules/ConditionalRule */ "../node_modules/jss/lib/rules/ConditionalRule.js");

var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);

var _FontFaceRule = __webpack_require__(/*! ../rules/FontFaceRule */ "../node_modules/jss/lib/rules/FontFaceRule.js");

var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);

var _ViewportRule = __webpack_require__(/*! ../rules/ViewportRule */ "../node_modules/jss/lib/rules/ViewportRule.js");

var _ViewportRule2 = _interopRequireDefault(_ViewportRule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var classes = {
  '@charset': _SimpleRule2['default'],
  '@import': _SimpleRule2['default'],
  '@namespace': _SimpleRule2['default'],
  '@keyframes': _KeyframesRule2['default'],
  '@media': _ConditionalRule2['default'],
  '@supports': _ConditionalRule2['default'],
  '@font-face': _FontFaceRule2['default'],
  '@viewport': _ViewportRule2['default'],
  '@-ms-viewport': _ViewportRule2['default']

  /**
   * Generate plugins which will register all rules.
   */
};
var plugins = Object.keys(classes).map(function (key) {
  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
  var re = new RegExp('^' + key);
  var RuleClass = classes[key];
  var onCreateRule = function onCreateRule(name, decl, options) {
    return re.test(name) ? new RuleClass(name, decl, options) : null;
  };
  return { onCreateRule: onCreateRule };
});

exports['default'] = plugins;

/***/ }),

/***/ "../node_modules/jss/lib/renderers/DomRenderer.js":
/*!********************************************************!*\
  !*** ../node_modules/jss/lib/renderers/DomRenderer.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

var _sheets = __webpack_require__(/*! ../sheets */ "../node_modules/jss/lib/sheets.js");

var _sheets2 = _interopRequireDefault(_sheets);

var _StyleRule = __webpack_require__(/*! ../rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _toCssValue = __webpack_require__(/*! ../utils/toCssValue */ "../node_modules/jss/lib/utils/toCssValue.js");

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Cache the value from the first time a function is called.
 */
var memoize = function memoize(fn) {
  var value = void 0;
  return function () {
    if (!value) value = fn();
    return value;
  };
};

/**
 * Get a style property value.
 */
function getPropertyValue(cssRule, prop) {
  try {
    return cssRule.style.getPropertyValue(prop);
  } catch (err) {
    // IE may throw if property is unknown.
    return '';
  }
}

/**
 * Set a style property.
 */
function setProperty(cssRule, prop, value) {
  try {
    var cssValue = value;

    if (Array.isArray(value)) {
      cssValue = (0, _toCssValue2['default'])(value, true);

      if (value[value.length - 1] === '!important') {
        cssRule.style.setProperty(prop, cssValue, 'important');
        return true;
      }
    }

    cssRule.style.setProperty(prop, cssValue);
  } catch (err) {
    // IE may throw if property is unknown.
    return false;
  }
  return true;
}

/**
 * Remove a style property.
 */
function removeProperty(cssRule, prop) {
  try {
    cssRule.style.removeProperty(prop);
  } catch (err) {
    (0, _warning2['default'])(false, '[JSS] DOMException "%s" was thrown. Tried to remove property "%s".', err.message, prop);
  }
}

var CSSRuleTypes = {
  STYLE_RULE: 1,
  KEYFRAMES_RULE: 7

  /**
   * Get the CSS Rule key.
   */

};var getKey = function () {
  var extractKey = function extractKey(cssText) {
    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return cssText.substr(from, cssText.indexOf('{') - 1);
  };

  return function (cssRule) {
    if (cssRule.type === CSSRuleTypes.STYLE_RULE) return cssRule.selectorText;
    if (cssRule.type === CSSRuleTypes.KEYFRAMES_RULE) {
      var name = cssRule.name;

      if (name) return '@keyframes ' + name;

      // There is no rule.name in the following browsers:
      // - IE 9
      // - Safari 7.1.8
      // - Mobile Safari 9.0.0
      var cssText = cssRule.cssText;

      return '@' + extractKey(cssText, cssText.indexOf('keyframes'));
    }

    // Conditionals.
    return extractKey(cssRule.cssText);
  };
}();

/**
 * Set the selector.
 */
function setSelector(cssRule, selectorText) {
  cssRule.selectorText = selectorText;

  // Return false if setter was not successful.
  // Currently works in chrome only.
  return cssRule.selectorText === selectorText;
}

/**
 * Gets the `head` element upon the first call and caches it.
 */
var getHead = memoize(function () {
  return document.head || document.getElementsByTagName('head')[0];
});

/**
 * Gets a map of rule keys, where the property is an unescaped key and value
 * is a potentially escaped one.
 * It is used to identify CSS rules and the corresponding JSS rules. As an identifier
 * for CSSStyleRule we normally use `selectorText`. Though if original selector text
 * contains escaped code points e.g. `:not(#\\20)`, CSSOM will compile it to `:not(# )`
 * and so CSS rule's `selectorText` won't match JSS rule selector.
 *
 * https://www.w3.org/International/questions/qa-escapes#cssescapes
 */
var getUnescapedKeysMap = function () {
  var style = void 0;
  var isAttached = false;

  return function (rules) {
    var map = {};
    // https://github.com/facebook/flow/issues/2696
    if (!style) style = document.createElement('style');
    for (var i = 0; i < rules.length; i++) {
      var rule = rules[i];
      if (!(rule instanceof _StyleRule2['default'])) continue;
      var selector = rule.selector;
      // Only unescape selector over CSSOM if it contains a back slash.

      if (selector && selector.indexOf('\\') !== -1) {
        // Lazilly attach when needed.
        if (!isAttached) {
          getHead().appendChild(style);
          isAttached = true;
        }
        style.textContent = selector + ' {}';
        var _style = style,
            sheet = _style.sheet;

        if (sheet) {
          var cssRules = sheet.cssRules;

          if (cssRules) map[cssRules[0].selectorText] = rule.key;
        }
      }
    }
    if (isAttached) {
      getHead().removeChild(style);
      isAttached = false;
    }
    return map;
  };
}();

/**
 * Find attached sheet with an index higher than the passed one.
 */
function findHigherSheet(registry, options) {
  for (var i = 0; i < registry.length; i++) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}

/**
 * Find attached sheet with the highest index.
 */
function findHighestSheet(registry, options) {
  for (var i = registry.length - 1; i >= 0; i--) {
    var sheet = registry[i];
    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }
  return null;
}

/**
 * Find a comment with "jss" inside.
 */
function findCommentNode(text) {
  var head = getHead();
  for (var i = 0; i < head.childNodes.length; i++) {
    var node = head.childNodes[i];
    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
      return node;
    }
  }
  return null;
}

/**
 * Find a node before which we can insert the sheet.
 */
function findPrevNode(options) {
  var registry = _sheets2['default'].registry;


  if (registry.length > 0) {
    // Try to insert before the next higher sheet.
    var sheet = findHigherSheet(registry, options);
    if (sheet) return sheet.renderer.element;

    // Otherwise insert after the last attached.
    sheet = findHighestSheet(registry, options);
    if (sheet) return sheet.renderer.element.nextElementSibling;
  }

  // Try to find a comment placeholder if registry is empty.
  var insertionPoint = options.insertionPoint;

  if (insertionPoint && typeof insertionPoint === 'string') {
    var comment = findCommentNode(insertionPoint);
    if (comment) return comment.nextSibling;
    // If user specifies an insertion point and it can't be found in the document -
    // bad specificity issues may appear.
    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
  }

  return null;
}

/**
 * Insert style element into the DOM.
 */
function insertStyle(style, options) {
  var insertionPoint = options.insertionPoint;

  var prevNode = findPrevNode(options);

  if (prevNode) {
    var parentNode = prevNode.parentNode;

    if (parentNode) parentNode.insertBefore(style, prevNode);
    return;
  }

  // Works with iframes and any node types.
  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
    var insertionPointElement = insertionPoint;
    var _parentNode = insertionPointElement.parentNode;

    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
    return;
  }

  getHead().insertBefore(style, prevNode);
}

/**
 * Read jss nonce setting from the page if the user has set it.
 */
var getNonce = memoize(function () {
  var node = document.querySelector('meta[property="csp-nonce"]');
  return node ? node.getAttribute('content') : null;
});

var DomRenderer = function () {
  function DomRenderer(sheet) {
    _classCallCheck(this, DomRenderer);

    this.getPropertyValue = getPropertyValue;
    this.setProperty = setProperty;
    this.removeProperty = removeProperty;
    this.setSelector = setSelector;
    this.getKey = getKey;
    this.getUnescapedKeysMap = getUnescapedKeysMap;
    this.hasInsertedRules = false;

    // There is no sheet when the renderer is used from a standalone StyleRule.
    if (sheet) _sheets2['default'].add(sheet);

    this.sheet = sheet;

    var _ref = this.sheet ? this.sheet.options : {},
        media = _ref.media,
        meta = _ref.meta,
        element = _ref.element;

    this.element = element || document.createElement('style');
    this.element.setAttribute('data-jss', '');
    if (media) this.element.setAttribute('media', media);
    if (meta) this.element.setAttribute('data-meta', meta);
    var nonce = getNonce();
    if (nonce) this.element.setAttribute('nonce', nonce);
  }

  /**
   * Insert style element into render tree.
   */


  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696


  _createClass(DomRenderer, [{
    key: 'attach',
    value: function attach() {
      // In the case the element node is external and it is already in the DOM.
      if (this.element.parentNode || !this.sheet) return;

      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
      // browsers remove those rules.
      // TODO figure out if its a bug and if it is known.
      // Workaround is to redeploy the sheet before attaching as a string.
      if (this.hasInsertedRules) {
        this.deploy();
        this.hasInsertedRules = false;
      }

      insertStyle(this.element, this.sheet.options);
    }

    /**
     * Remove style element from render tree.
     */

  }, {
    key: 'detach',
    value: function detach() {
      this.element.parentNode.removeChild(this.element);
    }

    /**
     * Inject CSS string into element.
     */

  }, {
    key: 'deploy',
    value: function deploy() {
      if (!this.sheet) return;
      this.element.textContent = '\n' + this.sheet.toString() + '\n';
    }

    /**
     * Insert a rule into element.
     */

  }, {
    key: 'insertRule',
    value: function insertRule(rule, index) {
      var sheet = this.element.sheet;
      var cssRules = sheet.cssRules;

      var str = rule.toString();
      if (!index) index = cssRules.length;

      if (!str) return false;

      try {
        sheet.insertRule(str, index);
      } catch (err) {
        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
        return false;
      }
      this.hasInsertedRules = true;

      return cssRules[index];
    }

    /**
     * Delete a rule.
     */

  }, {
    key: 'deleteRule',
    value: function deleteRule(cssRule) {
      var sheet = this.element.sheet;

      var index = this.indexOf(cssRule);
      if (index === -1) return false;
      sheet.deleteRule(index);
      return true;
    }

    /**
     * Get index of a CSS Rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(cssRule) {
      var cssRules = this.element.sheet.cssRules;

      for (var _index = 0; _index < cssRules.length; _index++) {
        if (cssRule === cssRules[_index]) return _index;
      }
      return -1;
    }

    /**
     * Generate a new CSS rule and replace the existing one.
     */

  }, {
    key: 'replaceRule',
    value: function replaceRule(cssRule, rule) {
      var index = this.indexOf(cssRule);
      var newCssRule = this.insertRule(rule, index);
      this.element.sheet.deleteRule(index);
      return newCssRule;
    }

    /**
     * Get all rules elements.
     */

  }, {
    key: 'getRules',
    value: function getRules() {
      return this.element.sheet.cssRules;
    }
  }]);

  return DomRenderer;
}();

exports['default'] = DomRenderer;

/***/ }),

/***/ "../node_modules/jss/lib/renderers/VirtualRenderer.js":
/*!************************************************************!*\
  !*** ../node_modules/jss/lib/renderers/VirtualRenderer.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable class-methods-use-this */

/**
 * Rendering backend to do nothing in nodejs.
 */
var VirtualRenderer = function () {
  function VirtualRenderer() {
    _classCallCheck(this, VirtualRenderer);
  }

  _createClass(VirtualRenderer, [{
    key: 'setProperty',
    value: function setProperty() {
      return true;
    }
  }, {
    key: 'getPropertyValue',
    value: function getPropertyValue() {
      return '';
    }
  }, {
    key: 'removeProperty',
    value: function removeProperty() {}
  }, {
    key: 'setSelector',
    value: function setSelector() {
      return true;
    }
  }, {
    key: 'getKey',
    value: function getKey() {
      return '';
    }
  }, {
    key: 'attach',
    value: function attach() {}
  }, {
    key: 'detach',
    value: function detach() {}
  }, {
    key: 'deploy',
    value: function deploy() {}
  }, {
    key: 'insertRule',
    value: function insertRule() {
      return false;
    }
  }, {
    key: 'deleteRule',
    value: function deleteRule() {
      return true;
    }
  }, {
    key: 'replaceRule',
    value: function replaceRule() {
      return false;
    }
  }, {
    key: 'getRules',
    value: function getRules() {}
  }, {
    key: 'indexOf',
    value: function indexOf() {
      return -1;
    }
  }]);

  return VirtualRenderer;
}();

exports['default'] = VirtualRenderer;

/***/ }),

/***/ "../node_modules/jss/lib/rules/ConditionalRule.js":
/*!********************************************************!*\
  !*** ../node_modules/jss/lib/rules/ConditionalRule.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RuleList = __webpack_require__(/*! ../RuleList */ "../node_modules/jss/lib/RuleList.js");

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Conditional rule for @media, @supports
 */
var ConditionalRule = function () {
  function ConditionalRule(key, styles, options) {
    _classCallCheck(this, ConditionalRule);

    this.type = 'conditional';
    this.isProcessed = false;

    this.key = key;
    this.options = options;
    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }

  /**
   * Get a rule.
   */


  _createClass(ConditionalRule, [{
    key: 'getRule',
    value: function getRule(name) {
      return this.rules.get(name);
    }

    /**
     * Get index of a rule.
     */

  }, {
    key: 'indexOf',
    value: function indexOf(rule) {
      return this.rules.indexOf(rule);
    }

    /**
     * Create and register rule, run plugins.
     */

  }, {
    key: 'addRule',
    value: function addRule(name, style, options) {
      var rule = this.rules.add(name, style, options);
      this.options.jss.plugins.onProcessRule(rule);
      return rule;
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

      var inner = this.rules.toString(options);
      return inner ? this.key + ' {\n' + inner + '\n}' : '';
    }
  }]);

  return ConditionalRule;
}();

exports['default'] = ConditionalRule;

/***/ }),

/***/ "../node_modules/jss/lib/rules/FontFaceRule.js":
/*!*****************************************************!*\
  !*** ../node_modules/jss/lib/rules/FontFaceRule.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _toCss = __webpack_require__(/*! ../utils/toCss */ "../node_modules/jss/lib/utils/toCss.js");

var _toCss2 = _interopRequireDefault(_toCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FontFaceRule = function () {
  function FontFaceRule(key, style, options) {
    _classCallCheck(this, FontFaceRule);

    this.type = 'font-face';
    this.isProcessed = false;

    this.key = key;
    this.style = style;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */


  _createClass(FontFaceRule, [{
    key: 'toString',
    value: function toString(options) {
      if (Array.isArray(this.style)) {
        var str = '';
        for (var index = 0; index < this.style.length; index++) {
          str += (0, _toCss2['default'])(this.key, this.style[index]);
          if (this.style[index + 1]) str += '\n';
        }
        return str;
      }

      return (0, _toCss2['default'])(this.key, this.style, options);
    }
  }]);

  return FontFaceRule;
}();

exports['default'] = FontFaceRule;

/***/ }),

/***/ "../node_modules/jss/lib/rules/KeyframesRule.js":
/*!******************************************************!*\
  !*** ../node_modules/jss/lib/rules/KeyframesRule.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RuleList = __webpack_require__(/*! ../RuleList */ "../node_modules/jss/lib/RuleList.js");

var _RuleList2 = _interopRequireDefault(_RuleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Rule for @keyframes
 */
var KeyframesRule = function () {
  function KeyframesRule(key, frames, options) {
    _classCallCheck(this, KeyframesRule);

    this.type = 'keyframes';
    this.isProcessed = false;

    this.key = key;
    this.options = options;
    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

    for (var name in frames) {
      this.rules.add(name, frames[name], _extends({}, this.options, {
        parent: this,
        selector: name
      }));
    }

    this.rules.process();
  }

  /**
   * Generates a CSS string.
   */


  _createClass(KeyframesRule, [{
    key: 'toString',
    value: function toString() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

      var inner = this.rules.toString(options);
      if (inner) inner += '\n';
      return this.key + ' {\n' + inner + '}';
    }
  }]);

  return KeyframesRule;
}();

exports['default'] = KeyframesRule;

/***/ }),

/***/ "../node_modules/jss/lib/rules/SimpleRule.js":
/*!***************************************************!*\
  !*** ../node_modules/jss/lib/rules/SimpleRule.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SimpleRule = function () {
  function SimpleRule(key, value, options) {
    _classCallCheck(this, SimpleRule);

    this.type = 'simple';
    this.isProcessed = false;

    this.key = key;
    this.value = value;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */
  // eslint-disable-next-line no-unused-vars


  _createClass(SimpleRule, [{
    key: 'toString',
    value: function toString(options) {
      if (Array.isArray(this.value)) {
        var str = '';
        for (var index = 0; index < this.value.length; index++) {
          str += this.key + ' ' + this.value[index] + ';';
          if (this.value[index + 1]) str += '\n';
        }
        return str;
      }

      return this.key + ' ' + this.value + ';';
    }
  }]);

  return SimpleRule;
}();

exports['default'] = SimpleRule;

/***/ }),

/***/ "../node_modules/jss/lib/rules/StyleRule.js":
/*!**************************************************!*\
  !*** ../node_modules/jss/lib/rules/StyleRule.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

var _toCss = __webpack_require__(/*! ../utils/toCss */ "../node_modules/jss/lib/utils/toCss.js");

var _toCss2 = _interopRequireDefault(_toCss);

var _toCssValue = __webpack_require__(/*! ../utils/toCssValue */ "../node_modules/jss/lib/utils/toCssValue.js");

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var StyleRule = function () {
  function StyleRule(key, style, options) {
    _classCallCheck(this, StyleRule);

    this.type = 'style';
    this.isProcessed = false;
    var sheet = options.sheet,
        Renderer = options.Renderer,
        selector = options.selector;

    this.key = key;
    this.options = options;
    this.style = style;
    if (selector) this.selectorText = selector;
    this.renderer = sheet ? sheet.renderer : new Renderer();
  }

  /**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */


  _createClass(StyleRule, [{
    key: 'prop',


    /**
     * Get or set a style property.
     */
    value: function prop(name, value) {
      // It's a getter.
      if (value === undefined) return this.style[name];

      // Don't do anything if the value has not changed.
      if (this.style[name] === value) return this;

      value = this.options.jss.plugins.onChangeValue(value, name, this);

      var isEmpty = value == null || value === false;
      var isDefined = name in this.style;

      // Value is empty and wasn't defined before.
      if (isEmpty && !isDefined) return this;

      // We are going to remove this value.
      var remove = isEmpty && isDefined;

      if (remove) delete this.style[name];else this.style[name] = value;

      // Renderable is defined if StyleSheet option `link` is true.
      if (this.renderable) {
        if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, value);
        return this;
      }

      var sheet = this.options.sheet;

      if (sheet && sheet.attached) {
        (0, _warning2['default'])(false, 'Rule is not linked. Missing sheet option "link: true".');
      }
      return this;
    }

    /**
     * Apply rule to an element inline.
     */

  }, {
    key: 'applyTo',
    value: function applyTo(renderable) {
      var json = this.toJSON();
      for (var prop in json) {
        this.renderer.setProperty(renderable, prop, json[prop]);
      }return this;
    }

    /**
     * Returns JSON representation of the rule.
     * Fallbacks are not supported.
     * Useful for inline styles.
     */

  }, {
    key: 'toJSON',
    value: function toJSON() {
      var json = {};
      for (var prop in this.style) {
        var value = this.style[prop];
        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
      }
      return json;
    }

    /**
     * Generates a CSS string.
     */

  }, {
    key: 'toString',
    value: function toString(options) {
      var sheet = this.options.sheet;

      var link = sheet ? sheet.options.link : false;
      var opts = link ? _extends({}, options, { allowEmpty: true }) : options;
      return (0, _toCss2['default'])(this.selector, this.style, opts);
    }
  }, {
    key: 'selector',
    set: function set(selector) {
      if (selector === this.selectorText) return;

      this.selectorText = selector;

      if (!this.renderable) return;

      var hasChanged = this.renderer.setSelector(this.renderable, selector);

      // If selector setter is not implemented, rerender the rule.
      if (!hasChanged && this.renderable) {
        var renderable = this.renderer.replaceRule(this.renderable, this);
        if (renderable) this.renderable = renderable;
      }
    }

    /**
     * Get selector string.
     */
    ,
    get: function get() {
      return this.selectorText;
    }
  }]);

  return StyleRule;
}();

exports['default'] = StyleRule;

/***/ }),

/***/ "../node_modules/jss/lib/rules/ViewportRule.js":
/*!*****************************************************!*\
  !*** ../node_modules/jss/lib/rules/ViewportRule.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _toCss = __webpack_require__(/*! ../utils/toCss */ "../node_modules/jss/lib/utils/toCss.js");

var _toCss2 = _interopRequireDefault(_toCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ViewportRule = function () {
  function ViewportRule(key, style, options) {
    _classCallCheck(this, ViewportRule);

    this.type = 'viewport';
    this.isProcessed = false;

    this.key = key;
    this.style = style;
    this.options = options;
  }

  /**
   * Generates a CSS string.
   */


  _createClass(ViewportRule, [{
    key: 'toString',
    value: function toString(options) {
      return (0, _toCss2['default'])(this.key, this.style, options);
    }
  }]);

  return ViewportRule;
}();

exports['default'] = ViewportRule;

/***/ }),

/***/ "../node_modules/jss/lib/sheets.js":
/*!*****************************************!*\
  !*** ../node_modules/jss/lib/sheets.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SheetsRegistry = __webpack_require__(/*! ./SheetsRegistry */ "../node_modules/jss/lib/SheetsRegistry.js");

var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * This is a global sheets registry. Only DomRenderer will add sheets to it.
 * On the server one should use an own SheetsRegistry instance and add the
 * sheets to it, because you need to make sure to create a new registry for
 * each request in order to not leak sheets across requests.
 */
exports['default'] = new _SheetsRegistry2['default']();

/***/ }),

/***/ "../node_modules/jss/lib/utils/cloneStyle.js":
/*!***************************************************!*\
  !*** ../node_modules/jss/lib/utils/cloneStyle.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = cloneStyle;

var _isObservable = __webpack_require__(/*! ./isObservable */ "../node_modules/jss/lib/utils/isObservable.js");

var _isObservable2 = _interopRequireDefault(_isObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var isArray = Array.isArray;
function cloneStyle(style) {
  // Support empty values in case user ends up with them by accident.
  if (style == null) return style;

  // Support string value for SimpleRule.
  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);

  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {
    return style;
  }

  // Support array for FontFaceRule.
  if (isArray(style)) return style.map(cloneStyle);

  // Support Observable styles.  Observables are immutable, so we don't need to
  // copy them.
  if ((0, _isObservable2['default'])(style)) return style;

  var newStyle = {};
  for (var name in style) {
    var value = style[name];
    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
      newStyle[name] = cloneStyle(value);
      continue;
    }
    newStyle[name] = value;
  }

  return newStyle;
}

/***/ }),

/***/ "../node_modules/jss/lib/utils/createGenerateClassName.js":
/*!****************************************************************!*\
  !*** ../node_modules/jss/lib/utils/createGenerateClassName.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

var _StyleSheet = __webpack_require__(/*! ../StyleSheet */ "../node_modules/jss/lib/StyleSheet.js");

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _moduleId = __webpack_require__(/*! ./moduleId */ "../node_modules/jss/lib/utils/moduleId.js");

var _moduleId2 = _interopRequireDefault(_moduleId);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var maxRules = 1e10;


var env = "development";

/**
 * Returns a function which generates unique class names based on counters.
 * When new generator function is created, rule counter is reseted.
 * We need to reset the rule counter for SSR for each request.
 */

exports['default'] = function () {
  var ruleCounter = 0;
  var defaultPrefix = env === 'production' ? 'c' : '';

  return function (rule, sheet) {
    ruleCounter += 1;

    if (ruleCounter > maxRules) {
      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);
    }

    var prefix = defaultPrefix;
    var jssId = '';

    if (sheet) {
      prefix = sheet.options.classNamePrefix || defaultPrefix;
      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;
    }

    if (env === 'production') {
      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;
    }

    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;
  };
};

/***/ }),

/***/ "../node_modules/jss/lib/utils/createRule.js":
/*!***************************************************!*\
  !*** ../node_modules/jss/lib/utils/createRule.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = createRule;

var _warning = __webpack_require__(/*! warning */ "../node_modules/jss/node_modules/warning/browser.js");

var _warning2 = _interopRequireDefault(_warning);

var _StyleRule = __webpack_require__(/*! ../rules/StyleRule */ "../node_modules/jss/lib/rules/StyleRule.js");

var _StyleRule2 = _interopRequireDefault(_StyleRule);

var _cloneStyle = __webpack_require__(/*! ../utils/cloneStyle */ "../node_modules/jss/lib/utils/cloneStyle.js");

var _cloneStyle2 = _interopRequireDefault(_cloneStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Create a rule instance.
 */
function createRule() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
  var decl = arguments[1];
  var options = arguments[2];
  var jss = options.jss;

  var declCopy = (0, _cloneStyle2['default'])(decl);

  var rule = jss.plugins.onCreateRule(name, declCopy, options);
  if (rule) return rule;

  // It is an at-rule and it has no instance.
  if (name[0] === '@') {
    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
  }

  return new _StyleRule2['default'](name, declCopy, options);
}

/***/ }),

/***/ "../node_modules/jss/lib/utils/escape.js":
/*!***********************************************!*\
  !*** ../node_modules/jss/lib/utils/escape.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CSS = global.CSS;

var env = "development";

var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;

exports['default'] = function (str) {
  // We don't need to escape it in production, because we are not using user's
  // input for selectors, we are generating a valid selector.
  if (env === 'production') return str;

  if (!CSS || !CSS.escape) {
    return str.replace(escapeRegex, '\\$1');
  }

  return CSS.escape(str);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/jss/lib/utils/getDynamicStyles.js":
/*!*********************************************************!*\
  !*** ../node_modules/jss/lib/utils/getDynamicStyles.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = getDynamicStyles;
/**
 * Extracts a styles object with only props that contain function values.
 */
function getDynamicStyles(styles) {
  var to = null;

  for (var key in styles) {
    var value = styles[key];
    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

    if (type === 'function') {
      if (!to) to = {};
      to[key] = value;
    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);
      if (extracted) {
        if (!to) to = {};
        to[key] = extracted;
      }
    }
  }

  return to;
}

/***/ }),

/***/ "../node_modules/jss/lib/utils/isObservable.js":
/*!*****************************************************!*\
  !*** ../node_modules/jss/lib/utils/isObservable.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _symbolObservable = __webpack_require__(/*! symbol-observable */ "../node_modules/jss/node_modules/symbol-observable/es/index.js");

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = function (value) {
  return value && value[_symbolObservable2['default']] && value === value[_symbolObservable2['default']]();
};

/***/ }),

/***/ "../node_modules/jss/lib/utils/linkRule.js":
/*!*************************************************!*\
  !*** ../node_modules/jss/lib/utils/linkRule.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = linkRule;
/**
 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
 */
function linkRule(rule, cssRule) {
  rule.renderable = cssRule;
  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
}

/***/ }),

/***/ "../node_modules/jss/lib/utils/moduleId.js":
/*!*************************************************!*\
  !*** ../node_modules/jss/lib/utils/moduleId.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
if (global[ns] == null) global[ns] = 0;

// Bundle may contain multiple JSS versions at the same time. In order to identify
// the current version with just one short number and use it for classes generation
// we use a counter. Also it is more accurate, because user can manually reevaluate
// the module.
exports['default'] = global[ns]++;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/jss/lib/utils/toCss.js":
/*!**********************************************!*\
  !*** ../node_modules/jss/lib/utils/toCss.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = toCss;

var _toCssValue = __webpack_require__(/*! ./toCssValue */ "../node_modules/jss/lib/utils/toCssValue.js");

var _toCssValue2 = _interopRequireDefault(_toCssValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */
function indentStr(str, indent) {
  var result = '';
  for (var index = 0; index < indent; index++) {
    result += '  ';
  }return result + str;
}

/**
 * Converts a Rule to CSS string.
 */

function toCss(selector, style) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var result = '';

  if (!style) return result;

  var _options$indent = options.indent,
      indent = _options$indent === undefined ? 0 : _options$indent;
  var fallbacks = style.fallbacks;


  indent++;

  // Apply fallbacks first.
  if (fallbacks) {
    // Array syntax {fallbacks: [{prop: value}]}
    if (Array.isArray(fallbacks)) {
      for (var index = 0; index < fallbacks.length; index++) {
        var fallback = fallbacks[index];
        for (var prop in fallback) {
          var value = fallback[prop];
          if (value != null) {
            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
          }
        }
      }
    } else {
      // Object syntax {fallbacks: {prop: value}}
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];
        if (_value != null) {
          result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
        }
      }
    }
  }

  for (var _prop2 in style) {
    var _value2 = style[_prop2];
    if (_value2 != null && _prop2 !== 'fallbacks') {
      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
    }
  }

  // Allow empty style in this case, because properties will be added dynamically.
  if (!result && !options.allowEmpty) return result;

  indent--;
  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);

  return result;
}

/***/ }),

/***/ "../node_modules/jss/lib/utils/toCssValue.js":
/*!***************************************************!*\
  !*** ../node_modules/jss/lib/utils/toCssValue.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = toCssValue;
var join = function join(value, by) {
  var result = '';
  for (var i = 0; i < value.length; i++) {
    // Remove !important from the value, it will be readded later.
    if (value[i] === '!important') break;
    if (result) result += by;
    result += value[i];
  }
  return result;
};

/**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */
function toCssValue(value) {
  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (!Array.isArray(value)) return value;

  var cssValue = '';

  // Support space separated values via `[['5px', '10px']]`.
  if (Array.isArray(value[0])) {
    for (var i = 0; i < value.length; i++) {
      if (value[i] === '!important') break;
      if (cssValue) cssValue += ', ';
      cssValue += join(value[i], ' ');
    }
  } else cssValue = join(value, ', ');

  // Add !important, because it was ignored.
  if (!ignoreImportant && value[value.length - 1] === '!important') {
    cssValue += ' !important';
  }

  return cssValue;
}

/***/ }),

/***/ "../node_modules/jss/node_modules/symbol-observable/es/index.js":
/*!**********************************************************************!*\
  !*** ../node_modules/jss/node_modules/symbol-observable/es/index.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ponyfill.js */ "../node_modules/jss/node_modules/symbol-observable/es/ponyfill.js");
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {}

var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__["default"])(root);
/* harmony default export */ __webpack_exports__["default"] = (result);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../../../webpack/buildin/harmony-module.js */ "../node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "../node_modules/jss/node_modules/symbol-observable/es/ponyfill.js":
/*!*************************************************************************!*\
  !*** ../node_modules/jss/node_modules/symbol-observable/es/ponyfill.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symbolObservablePonyfill; });
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),

/***/ "../node_modules/jss/node_modules/warning/browser.js":
/*!***********************************************************!*\
  !*** ../node_modules/jss/node_modules/warning/browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (true) {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;


/***/ }),

/***/ "../node_modules/keycode/index.js":
/*!****************************************!*\
  !*** ../node_modules/keycode/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Source: http://jsfiddle.net/vWx8V/
// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

/**
 * Conenience method returns corresponding value for given keyName or keyCode.
 *
 * @param {Mixed} keyCode {Number} or keyName {String}
 * @return {Mixed}
 * @api public
 */

function keyCode(searchInput) {
  // Keyboard Events
  if (searchInput && 'object' === typeof searchInput) {
    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
    if (hasKeyCode) searchInput = hasKeyCode
  }

  // Numbers
  if ('number' === typeof searchInput) return names[searchInput]

  // Everything else (cast to string)
  var search = String(searchInput)

  // check codes
  var foundNamedKey = codes[search.toLowerCase()]
  if (foundNamedKey) return foundNamedKey

  // check aliases
  var foundNamedKey = aliases[search.toLowerCase()]
  if (foundNamedKey) return foundNamedKey

  // weird character?
  if (search.length === 1) return search.charCodeAt(0)

  return undefined
}

/**
 * Compares a keyboard event with a given keyCode or keyName.
 *
 * @param {Event} event Keyboard event that should be tested
 * @param {Mixed} keyCode {Number} or keyName {String}
 * @return {Boolean}
 * @api public
 */
keyCode.isEventKey = function isEventKey(event, nameOrCode) {
  if (event && 'object' === typeof event) {
    var keyCode = event.which || event.keyCode || event.charCode
    if (keyCode === null || keyCode === undefined) { return false; }
    if (typeof nameOrCode === 'string') {
      // check codes
      var foundNamedKey = codes[nameOrCode.toLowerCase()]
      if (foundNamedKey) { return foundNamedKey === keyCode; }
    
      // check aliases
      var foundNamedKey = aliases[nameOrCode.toLowerCase()]
      if (foundNamedKey) { return foundNamedKey === keyCode; }
    } else if (typeof nameOrCode === 'number') {
      return nameOrCode === keyCode;
    }
    return false;
  }
}

exports = module.exports = keyCode;

/**
 * Get by name
 *
 *   exports.code['enter'] // => 13
 */

var codes = exports.code = exports.codes = {
  'backspace': 8,
  'tab': 9,
  'enter': 13,
  'shift': 16,
  'ctrl': 17,
  'alt': 18,
  'pause/break': 19,
  'caps lock': 20,
  'esc': 27,
  'space': 32,
  'page up': 33,
  'page down': 34,
  'end': 35,
  'home': 36,
  'left': 37,
  'up': 38,
  'right': 39,
  'down': 40,
  'insert': 45,
  'delete': 46,
  'command': 91,
  'left command': 91,
  'right command': 93,
  'numpad *': 106,
  'numpad +': 107,
  'numpad -': 109,
  'numpad .': 110,
  'numpad /': 111,
  'num lock': 144,
  'scroll lock': 145,
  'my computer': 182,
  'my calculator': 183,
  ';': 186,
  '=': 187,
  ',': 188,
  '-': 189,
  '.': 190,
  '/': 191,
  '`': 192,
  '[': 219,
  '\\': 220,
  ']': 221,
  "'": 222
}

// Helper aliases

var aliases = exports.aliases = {
  'windows': 91,
  '⇧': 16,
  '⌥': 18,
  '⌃': 17,
  '⌘': 91,
  'ctl': 17,
  'control': 17,
  'option': 18,
  'pause': 19,
  'break': 19,
  'caps': 20,
  'return': 13,
  'escape': 27,
  'spc': 32,
  'spacebar': 32,
  'pgup': 33,
  'pgdn': 34,
  'ins': 45,
  'del': 46,
  'cmd': 91
}

/*!
 * Programatically add the following
 */

// lower case chars
for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

// numbers
for (var i = 48; i < 58; i++) codes[i - 48] = i

// function keys
for (i = 1; i < 13; i++) codes['f'+i] = i + 111

// numpad keys
for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

/**
 * Get by code
 *
 *   exports.name[13] // => 'Enter'
 */

var names = exports.names = exports.title = {} // title for backward compat

// Create reverse mapping
for (i in codes) names[codes[i]] = i

// Add aliases
for (var alias in aliases) {
  codes[alias] = aliases[alias]
}


/***/ }),

/***/ "../node_modules/lz-string/libs/lz-string.js":
/*!***************************************************!*\
  !*** ../node_modules/lz-string/libs/lz-string.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
// This work is free. You can redistribute it and/or modify it
// under the terms of the WTFPL, Version 2
// For more information see LICENSE.txt or http://www.wtfpl.net/
//
// For more information, the home page:
// http://pieroxy.net/blog/pages/lz-string/testing.html
//
// LZ-based compression algorithm, version 1.4.4
var LZString = (function() {

// private property
var f = String.fromCharCode;
var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
var baseReverseDic = {};

function getBaseValue(alphabet, character) {
  if (!baseReverseDic[alphabet]) {
    baseReverseDic[alphabet] = {};
    for (var i=0 ; i<alphabet.length ; i++) {
      baseReverseDic[alphabet][alphabet.charAt(i)] = i;
    }
  }
  return baseReverseDic[alphabet][character];
}

var LZString = {
  compressToBase64 : function (input) {
    if (input == null) return "";
    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});
    switch (res.length % 4) { // To produce valid Base64
    default: // When could this happen ?
    case 0 : return res;
    case 1 : return res+"===";
    case 2 : return res+"==";
    case 3 : return res+"=";
    }
  },

  decompressFromBase64 : function (input) {
    if (input == null) return "";
    if (input == "") return null;
    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });
  },

  compressToUTF16 : function (input) {
    if (input == null) return "";
    return LZString._compress(input, 15, function(a){return f(a+32);}) + " ";
  },

  decompressFromUTF16: function (compressed) {
    if (compressed == null) return "";
    if (compressed == "") return null;
    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });
  },

  //compress into uint8array (UCS-2 big endian format)
  compressToUint8Array: function (uncompressed) {
    var compressed = LZString.compress(uncompressed);
    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character

    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {
      var current_value = compressed.charCodeAt(i);
      buf[i*2] = current_value >>> 8;
      buf[i*2+1] = current_value % 256;
    }
    return buf;
  },

  //decompress from uint8array (UCS-2 big endian format)
  decompressFromUint8Array:function (compressed) {
    if (compressed===null || compressed===undefined){
        return LZString.decompress(compressed);
    } else {
        var buf=new Array(compressed.length/2); // 2 bytes per character
        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {
          buf[i]=compressed[i*2]*256+compressed[i*2+1];
        }

        var result = [];
        buf.forEach(function (c) {
          result.push(f(c));
        });
        return LZString.decompress(result.join(''));

    }

  },


  //compress into a string that is already URI encoded
  compressToEncodedURIComponent: function (input) {
    if (input == null) return "";
    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});
  },

  //decompress from an output of compressToEncodedURIComponent
  decompressFromEncodedURIComponent:function (input) {
    if (input == null) return "";
    if (input == "") return null;
    input = input.replace(/ /g, "+");
    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });
  },

  compress: function (uncompressed) {
    return LZString._compress(uncompressed, 16, function(a){return f(a);});
  },
  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {
    if (uncompressed == null) return "";
    var i, value,
        context_dictionary= {},
        context_dictionaryToCreate= {},
        context_c="",
        context_wc="",
        context_w="",
        context_enlargeIn= 2, // Compensate for the first entry which should not count
        context_dictSize= 3,
        context_numBits= 2,
        context_data=[],
        context_data_val=0,
        context_data_position=0,
        ii;

    for (ii = 0; ii < uncompressed.length; ii += 1) {
      context_c = uncompressed.charAt(ii);
      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {
        context_dictionary[context_c] = context_dictSize++;
        context_dictionaryToCreate[context_c] = true;
      }

      context_wc = context_w + context_c;
      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {
        context_w = context_wc;
      } else {
        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
          if (context_w.charCodeAt(0)<256) {
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<8 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          } else {
            value = 1;
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1) | value;
              if (context_data_position ==bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = 0;
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<16 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          }
          context_enlargeIn--;
          if (context_enlargeIn == 0) {
            context_enlargeIn = Math.pow(2, context_numBits);
            context_numBits++;
          }
          delete context_dictionaryToCreate[context_w];
        } else {
          value = context_dictionary[context_w];
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }


        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        // Add wc to the dictionary.
        context_dictionary[context_wc] = context_dictSize++;
        context_w = String(context_c);
      }
    }

    // Output the code for w.
    if (context_w !== "") {
      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
        if (context_w.charCodeAt(0)<256) {
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<8 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        } else {
          value = 1;
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | value;
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = 0;
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<16 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        delete context_dictionaryToCreate[context_w];
      } else {
        value = context_dictionary[context_w];
        for (i=0 ; i<context_numBits ; i++) {
          context_data_val = (context_data_val << 1) | (value&1);
          if (context_data_position == bitsPerChar-1) {
            context_data_position = 0;
            context_data.push(getCharFromInt(context_data_val));
            context_data_val = 0;
          } else {
            context_data_position++;
          }
          value = value >> 1;
        }


      }
      context_enlargeIn--;
      if (context_enlargeIn == 0) {
        context_enlargeIn = Math.pow(2, context_numBits);
        context_numBits++;
      }
    }

    // Mark the end of the stream
    value = 2;
    for (i=0 ; i<context_numBits ; i++) {
      context_data_val = (context_data_val << 1) | (value&1);
      if (context_data_position == bitsPerChar-1) {
        context_data_position = 0;
        context_data.push(getCharFromInt(context_data_val));
        context_data_val = 0;
      } else {
        context_data_position++;
      }
      value = value >> 1;
    }

    // Flush the last char
    while (true) {
      context_data_val = (context_data_val << 1);
      if (context_data_position == bitsPerChar-1) {
        context_data.push(getCharFromInt(context_data_val));
        break;
      }
      else context_data_position++;
    }
    return context_data.join('');
  },

  decompress: function (compressed) {
    if (compressed == null) return "";
    if (compressed == "") return null;
    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });
  },

  _decompress: function (length, resetValue, getNextValue) {
    var dictionary = [],
        next,
        enlargeIn = 4,
        dictSize = 4,
        numBits = 3,
        entry = "",
        result = [],
        i,
        w,
        bits, resb, maxpower, power,
        c,
        data = {val:getNextValue(0), position:resetValue, index:1};

    for (i = 0; i < 3; i += 1) {
      dictionary[i] = i;
    }

    bits = 0;
    maxpower = Math.pow(2,2);
    power=1;
    while (power!=maxpower) {
      resb = data.val & data.position;
      data.position >>= 1;
      if (data.position == 0) {
        data.position = resetValue;
        data.val = getNextValue(data.index++);
      }
      bits |= (resb>0 ? 1 : 0) * power;
      power <<= 1;
    }

    switch (next = bits) {
      case 0:
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = f(bits);
        break;
      case 1:
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = f(bits);
        break;
      case 2:
        return "";
    }
    dictionary[3] = c;
    w = c;
    result.push(c);
    while (true) {
      if (data.index > length) {
        return "";
      }

      bits = 0;
      maxpower = Math.pow(2,numBits);
      power=1;
      while (power!=maxpower) {
        resb = data.val & data.position;
        data.position >>= 1;
        if (data.position == 0) {
          data.position = resetValue;
          data.val = getNextValue(data.index++);
        }
        bits |= (resb>0 ? 1 : 0) * power;
        power <<= 1;
      }

      switch (c = bits) {
        case 0:
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }

          dictionary[dictSize++] = f(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 1:
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
          dictionary[dictSize++] = f(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 2:
          return result.join('');
      }

      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }

      if (dictionary[c]) {
        entry = dictionary[c];
      } else {
        if (c === dictSize) {
          entry = w + w.charAt(0);
        } else {
          return null;
        }
      }
      result.push(entry);

      // Add w+entry[0] to the dictionary.
      dictionary[dictSize++] = w + entry.charAt(0);
      enlargeIn--;

      w = entry;

      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }

    }
  }
};
  return LZString;
})();

if (true) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return LZString; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}


/***/ }),

/***/ "../node_modules/object-assign/index.js":
/*!**********************************************!*\
  !*** ../node_modules/object-assign/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../node_modules/prop-types/checkPropTypes.js":
/*!****************************************************!*\
  !*** ../node_modules/prop-types/checkPropTypes.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "../node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          )

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "../node_modules/prop-types/factoryWithTypeCheckers.js":
/*!*************************************************************!*\
  !*** ../node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var assign = __webpack_require__(/*! object-assign */ "../node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "../node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "../node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
       true ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "../node_modules/prop-types/index.js":
/*!*******************************************!*\
  !*** ../node_modules/prop-types/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "../node_modules/prop-types/factoryWithTypeCheckers.js")(isValidElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "../node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!**************************************************************!*\
  !*** ../node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "../node_modules/react-jss/lib/contextTypes.js":
/*!*****************************************************!*\
  !*** ../node_modules/react-jss/lib/contextTypes.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ns$jss$ns$sheetOptio;

var _propTypes = __webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js");

var _ns = __webpack_require__(/*! ./ns */ "../node_modules/react-jss/lib/ns.js");

var ns = _interopRequireWildcard(_ns);

var _propTypes2 = __webpack_require__(/*! ./propTypes */ "../node_modules/react-jss/lib/propTypes.js");

var _propTypes3 = _interopRequireDefault(_propTypes2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports['default'] = (_ns$jss$ns$sheetOptio = {}, _defineProperty(_ns$jss$ns$sheetOptio, ns.jss, _propTypes3['default'].jss), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetOptions, _propTypes.object), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetsRegistry, _propTypes3['default'].registry), _defineProperty(_ns$jss$ns$sheetOptio, ns.managers, _propTypes.object), _ns$jss$ns$sheetOptio);

/***/ }),

/***/ "../node_modules/react-jss/lib/ns.js":
/*!*******************************************!*\
  !*** ../node_modules/react-jss/lib/ns.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Namespaces to avoid conflicts on the context.
 */
var jss = exports.jss = '64a55d578f856d258dc345b094a2a2b3';
var sheetsRegistry = exports.sheetsRegistry = 'd4bd0baacbc52bbd48bbb9eb24344ecd';
var managers = exports.managers = 'b768b78919504fba9de2c03545c5cd3a';
var sheetOptions = exports.sheetOptions = '6fc570d6bd61383819d0f9e7407c452d';

/***/ }),

/***/ "../node_modules/react-jss/lib/propTypes.js":
/*!**************************************************!*\
  !*** ../node_modules/react-jss/lib/propTypes.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = __webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js");

exports['default'] = {
  jss: (0, _propTypes.shape)({
    options: (0, _propTypes.shape)({
      createGenerateClassName: _propTypes.func.isRequired
    }).isRequired,
    createStyleSheet: _propTypes.func.isRequired,
    removeStyleSheet: _propTypes.func.isRequired
  }),
  registry: (0, _propTypes.shape)({
    add: _propTypes.func.isRequired,
    toString: _propTypes.func.isRequired
  })
};

/***/ }),

/***/ "../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js ***!
  \*****************************************************************************/
/*! exports provided: polyfill */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyfill", function() { return polyfill; });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),

/***/ "../node_modules/react-transition-group/Transition.js":
/*!************************************************************!*\
  !*** ../node_modules/react-transition-group/Transition.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "react-dom"));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ "../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js");

var _PropTypes = __webpack_require__(/*! ./utils/PropTypes */ "../node_modules/react-transition-group/utils/PropTypes.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the components.
 * It's up to you to give meaning and effect to those states. For example we can
 * add styles to a component when it enters or exits:
 *
 * ```jsx
 * import Transition from 'react-transition-group/Transition';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {(state) => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
 * What it does do is track transition states over time so you can update the
 * component (such as by adding styles or classes) when it changes states.
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component begins the
 * "Enter" stage. During this stage, the component will shift from its current transition state,
 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
 * it's complete. Let's take the following example:
 *
 * ```jsx
 * state = { in: false };
 *
 * toggleEnterState = () => {
 *   this.setState({ in: true });
 * }
 *
 * render() {
 *   return (
 *     <div>
 *       <Transition in={this.state.in} timeout={500} />
 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state and
 * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
 *
 * ## Timing
 *
 * Timing is often the trickiest part of animation, mistakes can result in slight delays
 * that are hard to pin down. A common example is when you want to add an exit transition,
 * you should set the desired final styles when the state is `'exiting'`. That's when the
 * transition to those styles will start and, if you matched the `timeout` prop with the
 * CSS Transition duration, it will end exactly when the state changes to `'exited'`.
 *
 * > **Note**: For simpler transitions the `Transition` component might be enough, but
 * > take into account that it's platform-agnostic, while the `CSSTransition` component
 * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * > in order to make more complex transitions more predictable. For example, even though
 * > classes `example-enter` and `example-enter-active` are applied immediately one after
 * > another, you can still transition from one to the other because of the forced reflow
 * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)
 * > for more info). Take this into account when choosing between `Transition` and
 * > `CSSTransition`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter;
      appear = timeout.appear;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing); // FIXME: appear timeout?


      _this2.onTransitionEnd(node, timeouts.enter, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);

    if (node) {
      if (this.props.addEndListener) {
        this.props.addEndListener(node, this.nextCallback);
      }

      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    } else {
      setTimeout(this.nextCallback, 0);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react.default.Children.only(children);

    return _react.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition.propTypes =  true ? {
  /**
   * A `function` child can be used instead of a React element.
   * This function is called with the current transition status
   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used
   * to apply context specific props to a component.
   *
   * ```jsx
   * <Transition timeout={150}>
   *   {(status) => (
   *     <MyComponent className={`fade fade-${status}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided
   *
   * You may specify a single timeout for all transitions like: `timeout={500}`,
   * or individually like:
   *
   * ```jsx
   * timeout={{
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * @type {number | { enter?: number, exit?: number }}
   */
  timeout: function timeout(props) {
    var pt =  true ? _PropTypes.timeoutsShape : undefined;;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func // Name the function so it is clearer in the documentation

} : undefined;

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports.default = _default;

/***/ }),

/***/ "../node_modules/react-transition-group/TransitionGroup.js":
/*!*****************************************************************!*\
  !*** ../node_modules/react-transition-group/TransitionGroup.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ "../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js");

var _ChildMapping = __webpack_require__(/*! ./utils/ChildMapping */ "../node_modules/react-transition-group/utils/ChildMapping.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var propTypes =  true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : undefined;;
var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    this.setState(function (state) {
      var children = _extends({}, state.children);

      delete children[child.key];
      return {
        children: children
      };
    });
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes =  true ? propTypes : undefined;
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/react-transition-group/utils/ChildMapping.js":
/*!********************************************************************!*\
  !*** ../node_modules/react-transition-group/utils/ChildMapping.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(/*! react */ "react");

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),

/***/ "../node_modules/react-transition-group/utils/PropTypes.js":
/*!*****************************************************************!*\
  !*** ../node_modules/react-transition-group/utils/PropTypes.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.transitionTimeout = transitionTimeout;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "../node_modules/prop-types/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;
  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
  enter: _propTypes.default.number,
  exit: _propTypes.default.number
}).isRequired]);

exports.timeoutsShape = timeoutsShape;

var classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  enter: _propTypes.default.string,
  exit: _propTypes.default.string,
  active: _propTypes.default.string
}), _propTypes.default.shape({
  enter: _propTypes.default.string,
  enterDone: _propTypes.default.string,
  enterActive: _propTypes.default.string,
  exit: _propTypes.default.string,
  exitDone: _propTypes.default.string,
  exitActive: _propTypes.default.string
})]);

exports.classNamesShape = classNamesShape;

/***/ }),

/***/ "../node_modules/recompose/getDisplayName.js":
/*!***************************************************!*\
  !*** ../node_modules/recompose/getDisplayName.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var getDisplayName = function getDisplayName(Component) {
  if (typeof Component === 'string') {
    return Component;
  }

  if (!Component) {
    return undefined;
  }

  return Component.displayName || Component.name || 'Component';
};

var _default = getDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/recompose/wrapDisplayName.js":
/*!****************************************************!*\
  !*** ../node_modules/recompose/wrapDisplayName.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.default = void 0;

var _getDisplayName = _interopRequireDefault(__webpack_require__(/*! ./getDisplayName */ "../node_modules/recompose/getDisplayName.js"));

var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + "(" + (0, _getDisplayName.default)(BaseComponent) + ")";
};

var _default = wrapDisplayName;
exports.default = _default;

/***/ }),

/***/ "../node_modules/valis/dist/index.js":
/*!*******************************************!*\
  !*** ../node_modules/valis/dist/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Canis = __webpack_require__(/*! ./lib/canis/CanisApi */ "../node_modules/valis/dist/lib/canis/CanisApi.js");
exports.Canis = Canis;
var SiriusApi_1 = __webpack_require__(/*! ./lib/sirius/SiriusApi */ "../node_modules/valis/dist/lib/sirius/SiriusApi.js");
exports.SiriusApi = SiriusApi_1.SiriusApi;
var EntityType_1 = __webpack_require__(/*! ./lib/sirius/EntityType */ "../node_modules/valis/dist/lib/sirius/EntityType.js");
exports.EntityType = EntityType_1.EntityType;
var QueryBuilder_1 = __webpack_require__(/*! ./lib/sirius/QueryBuilder */ "../node_modules/valis/dist/lib/sirius/QueryBuilder.js");
exports.QueryType = QueryBuilder_1.QueryType;
exports.QueryBuilder = QueryBuilder_1.QueryBuilder;
var queryparser_1 = __webpack_require__(/*! ./lib/sirius/queryparser */ "../node_modules/valis/dist/lib/sirius/queryparser.js");
exports.buildQueryParser = queryparser_1.buildQueryParser;
exports.buildVariantQueryParser = queryparser_1.buildVariantQueryParser;
var AppStatePersistence_1 = __webpack_require__(/*! ./lib/valis-browser/AppStatePersistence */ "../node_modules/valis/dist/lib/valis-browser/AppStatePersistence.js");
exports.AppStatePersistence = AppStatePersistence_1.AppStatePersistence;
var ValisBrowserConfig_1 = __webpack_require__(/*! ./lib/valis-browser/ValisBrowserConfig */ "../node_modules/valis/dist/lib/valis-browser/ValisBrowserConfig.js");
exports.SidebarViewType = ValisBrowserConfig_1.SidebarViewType;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/canis/CanisApi.js":
/*!********************************************************!*\
  !*** ../node_modules/valis/dist/lib/canis/CanisApi.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = __webpack_require__(/*! axios */ "../node_modules/axios/index.js");
var Api = /** @class */ (function () {
    function Api() {
    }
    Api.getMultiple = function (endpoint, constructFn) {
        var url = Api.apiUrl + "/" + endpoint;
        return axios_1.default({
            method: 'get',
            url: url,
            headers: {},
        }).then(function (a) {
            var resultList = a.data.reverse();
            return resultList.map(constructFn);
        });
    };
    Api.getById = function (endpoint, objId, constructFn) {
        var url = Api.apiUrl + "/" + endpoint + "/" + objId;
        return axios_1.default({
            method: 'get',
            url: url,
            headers: {},
        }).then(function (a) {
            return constructFn(a.data);
        });
    };
    Api.getDatasets = function () {
        return Api.getMultiple(Dataset.resource, function (json) { return new Dataset(json); });
    };
    Api.getAnalysis = function (analysisId) {
        return Api.getById(Analysis.resource, analysisId, function (json) { return new Analysis(json); });
    };
    Api.getDataset = function (id) {
        return Api.getById(Dataset.resource, id, function (json) { return new Dataset(json); });
    };
    Api.getJob = function (jobId) {
        return Api.getById(Job.resource, jobId, function (json) { return new Job(json); });
    };
    Api.getFiles = function (jobId) {
        var url = Api.apiUrl + "/files?jobId=" + jobId;
        return axios_1.default({
            method: 'get',
            url: url,
            headers: {},
        }).then(function (a) {
            var resultList = a.data.reverse();
            return resultList;
        });
    };
    Api.apiUrl = '';
    return Api;
}());
exports.Api = Api;
var CanisObject = /** @class */ (function () {
    function CanisObject(json) {
        this._clientProps = json;
        this._savedProps = JSON.parse(JSON.stringify(json));
    }
    Object.defineProperty(CanisObject.prototype, "name", {
        get: function () {
            return this._clientProps.name;
        },
        set: function (_name) {
            this._clientProps.name = _name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanisObject.prototype, "description", {
        get: function () {
            return this._clientProps.description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanisObject.prototype, "id", {
        get: function () {
            return this._savedProps._id.$oid;
        },
        enumerable: true,
        configurable: true
    });
    CanisObject.prototype.save = function () {
        return null;
    };
    return CanisObject;
}());
var File = /** @class */ (function (_super) {
    __extends(File, _super);
    function File(json) {
        return _super.call(this, json) || this;
    }
    File.prototype.uri = function () {
        return '';
    };
    return File;
}(CanisObject));
var Job = /** @class */ (function (_super) {
    __extends(Job, _super);
    function Job(json) {
        return _super.call(this, json) || this;
    }
    Object.defineProperty(Job.prototype, "id", {
        get: function () {
            return this._savedProps.job_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Job.prototype, "jobId", {
        get: function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Job.prototype, "jobType", {
        get: function () {
            return this._savedProps.type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Job.prototype, "auther", {
        get: function () {
            return this._savedProps.author;
        },
        enumerable: true,
        configurable: true
    });
    Job.prototype.getOutputFiles = function () {
        return Api.getFiles(this.id);
    };
    Job.prototype.getDefinition = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (_this._savedProps.code) {
                resolve(_this._savedProps.code);
            }
            else {
                // Load the full model
                Api.getJob(_this.id).then(function (d) {
                    _this._savedProps = JSON.parse(JSON.stringify(d._savedProps));
                    resolve(_this._savedProps.code);
                });
            }
        });
    };
    Job.resource = 'jobs';
    return Job;
}(CanisObject));
exports.Job = Job;
var AnalysisParameterType;
(function (AnalysisParameterType) {
    AnalysisParameterType["GENE"] = "gene";
    AnalysisParameterType["GENE_LIST"] = "gene-list";
    AnalysisParameterType["NUMBER"] = "number";
    AnalysisParameterType["NUMBER_RANGE"] = "number-range";
    AnalysisParameterType["STRING"] = "string";
    AnalysisParameterType["PICKLIST"] = "picklist";
})(AnalysisParameterType || (AnalysisParameterType = {}));
exports.AnalysisParameterType = AnalysisParameterType;
var Analysis = /** @class */ (function (_super) {
    __extends(Analysis, _super);
    function Analysis(json) {
        return _super.call(this, json) || this;
    }
    Object.defineProperty(Analysis.prototype, "analysisId", {
        get: function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Analysis.prototype, "datasetId", {
        get: function () {
            return this._savedProps.datasetId.$oid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Analysis.prototype, "analysisType", {
        get: function () {
            var analysisType = this._clientProps.analysisType;
            return AnalysisType[analysisType];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Analysis.prototype, "code", {
        get: function () {
            return this._clientProps.code;
        },
        set: function (code) {
            this._clientProps.code = code;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Analysis.prototype, "parameters", {
        get: function () {
            return JSON.parse(this._clientProps.parameters);
        },
        enumerable: true,
        configurable: true
    });
    Analysis.prototype.createRun = function (name, parameters) {
        var e_1, _a;
        var url = Api.apiUrl + "/jobs?analysisId=" + this.analysisId;
        var paramsObj = {};
        try {
            for (var parameters_1 = __values(parameters), parameters_1_1 = parameters_1.next(); !parameters_1_1.done; parameters_1_1 = parameters_1.next()) {
                var _b = __read(parameters_1_1.value, 2), k = _b[0], v = _b[1];
                paramsObj[k] = v;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (parameters_1_1 && !parameters_1_1.done && (_a = parameters_1.return)) _a.call(parameters_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return axios_1.default({
            method: 'post',
            url: url,
            headers: {},
            data: {
                name: name || this.name,
                code: this.code,
                type: 'RDD',
                args: paramsObj
            }
        }).then(function (a) {
            return new Job(a.data);
        });
    };
    Analysis.prototype.getRuns = function (withStatus) {
        var status = withStatus ? "&withStatus=" + withStatus : '';
        var url = Api.apiUrl + "/jobs?analysisId=" + this.analysisId + status;
        return axios_1.default({
            method: 'get',
            url: url,
            headers: {},
        }).then(function (a) {
            return a.data.map(function (analysisJson) {
                return new Job(analysisJson);
            });
        });
    };
    Analysis.resource = 'analyses';
    return Analysis;
}(CanisObject));
exports.Analysis = Analysis;
var RunStatusType;
(function (RunStatusType) {
    RunStatusType[RunStatusType["RUNNING"] = 0] = "RUNNING";
    RunStatusType[RunStatusType["FINISHED"] = 1] = "FINISHED";
    RunStatusType[RunStatusType["FAILED"] = 2] = "FAILED";
})(RunStatusType || (RunStatusType = {}));
exports.RunStatusType = RunStatusType;
var AnalysisType;
(function (AnalysisType) {
    AnalysisType[AnalysisType["JUPYTER"] = 0] = "JUPYTER";
    AnalysisType[AnalysisType["PATIENT"] = 1] = "PATIENT";
    AnalysisType[AnalysisType["POPULATION"] = 2] = "POPULATION";
    AnalysisType[AnalysisType["PARSER"] = 3] = "PARSER";
})(AnalysisType || (AnalysisType = {}));
exports.AnalysisType = AnalysisType;
var Dataset = /** @class */ (function (_super) {
    __extends(Dataset, _super);
    function Dataset(json) {
        return _super.call(this, json) || this;
    }
    Object.defineProperty(Dataset.prototype, "datasetId", {
        get: function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Dataset.prototype, "sampleCount", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Dataset.prototype.getAnalyses = function () {
        var url = Api.apiUrl + "/analyses?datasetId=" + this.datasetId;
        return axios_1.default({
            method: 'get',
            url: url,
            headers: {},
        }).then(function (a) {
            return a.data.map(function (analysisJson) {
                return new Analysis(analysisJson);
            });
        });
    };
    Dataset.prototype.createAnalysis = function (name, type, code) {
        var url = Api.apiUrl + "/analyses";
        return axios_1.default({
            method: 'post',
            url: url,
            headers: {},
            data: {
                name: name,
                code: code,
                analysisType: AnalysisType[type],
                datasetId: this.datasetId,
            }
        }).then(function (a) {
            return new Analysis(a.data);
        });
    };
    Dataset.resource = 'datasets';
    return Dataset;
}(CanisObject));
exports.Dataset = Dataset;
//# sourceMappingURL=CanisApi.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/sirius/EntityType.js":
/*!***********************************************************!*\
  !*** ../node_modules/valis/dist/lib/sirius/EntityType.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EntityType;
(function (EntityType) {
    EntityType["SNP"] = "SNP";
    EntityType["VARIANT"] = "variant";
    EntityType["GENE"] = "gene";
    EntityType["PSUDOGENE"] = "psudogene";
    EntityType["NCRNAGENE"] = "ncRNA_gene";
    EntityType["TRAIT"] = "trait";
    EntityType["GWAS"] = "association:SNP:trait";
    EntityType["EQTL"] = "association:SNP:gene";
})(EntityType || (EntityType = {}));
exports.EntityType = EntityType;
;
//# sourceMappingURL=EntityType.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/sirius/QueryBuilder.js":
/*!*************************************************************!*\
  !*** ../node_modules/valis/dist/lib/sirius/QueryBuilder.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var QueryType;
(function (QueryType) {
    QueryType["GENOME"] = "GenomeNode";
    QueryType["INFO"] = "InfoNode";
    QueryType["EDGE"] = "EdgeNode";
})(QueryType || (QueryType = {}));
exports.QueryType = QueryType;
var QueryBuilder = /** @class */ (function () {
    function QueryBuilder(query) {
        if (query === void 0) { query = {}; }
        this.query = JSON.parse(JSON.stringify(query));
    }
    QueryBuilder.prototype.newGenomeQuery = function () {
        this.query = {
            type: QueryType.GENOME,
            filters: {},
            toEdges: [],
            arithmetics: [],
        };
    };
    QueryBuilder.prototype.newInfoQuery = function () {
        this.query = {
            type: QueryType.INFO,
            filters: {},
            toEdges: [],
        };
    };
    QueryBuilder.prototype.newEdgeQuery = function () {
        this.query = {
            type: QueryType.EDGE,
            filters: {},
            toNode: {},
        };
    };
    QueryBuilder.prototype.filterID = function (id) {
        this.query.filters._id = id;
    };
    QueryBuilder.prototype.filterType = function (type) {
        this.query.filters.type = type;
    };
    QueryBuilder.prototype.filterSource = function (source) {
        this.query.filters.source = source;
    };
    QueryBuilder.prototype.filterContig = function (contig) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('filter contig only available for GenomeNodes');
        }
        this.query.filters.contig = contig;
    };
    QueryBuilder.prototype.filterLength = function (length) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('Length only available for GenomeNodes');
        }
        this.query.filters.length = length;
    };
    QueryBuilder.prototype.filterName = function (name) {
        this.query.filters.name = name;
    };
    QueryBuilder.prototype.filterMaxPValue = function (pvalue) {
        this.query.filters['info.p-value'] = { '<': pvalue };
    };
    QueryBuilder.prototype.filterBiosample = function (biosample) {
        this.query.filters['info.biosample'] = biosample;
    };
    QueryBuilder.prototype.filterTargets = function (targets) {
        if (targets.length > 0) {
            this.query.filters['info.targets'] = { $all: targets };
        }
    };
    QueryBuilder.prototype.filterInfotypes = function (type) {
        this.query.filters['info.types'] = type;
    };
    QueryBuilder.prototype.filterAssay = function (assay) {
        this.query.filters['info.assay'] = assay;
    };
    QueryBuilder.prototype.filterOutType = function (outType) {
        this.query.filters['info.outtype'] = outType;
    };
    QueryBuilder.prototype.filterPatientBarCode = function (outType) {
        this.query.filters['info.patient_barcodes'] = outType;
    };
    QueryBuilder.prototype.filterStartBp = function (start) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('filterStartBp is only available for an Genome Query.');
        }
        this.query.filters.start = start;
    };
    QueryBuilder.prototype.filterEndBp = function (end) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('filterEndBp is only available for an Genome Query.');
        }
        this.query.filters.end = end;
    };
    QueryBuilder.prototype.filterAffectedGene = function (gene) {
        var previous = this.query.filters['variant_affected_genes'] || [];
        this.query.filters['info.variant_affected_genes'] = gene;
    };
    QueryBuilder.prototype.filterVariantTag = function (tag) {
        var previous = this.query.filters['variant_tags'] || [];
        this.query.filters['info.variant_tags'] = tag;
    };
    QueryBuilder.prototype.searchText = function (text) {
        this.query.filters.$text = text;
    };
    QueryBuilder.prototype.setLimit = function (limit) {
        this.query.limit = limit;
    };
    QueryBuilder.prototype.addToEdge = function (edgeQuery) {
        if (this.query.type === QueryType.EDGE) {
            throw new Error('Edge can not be connect to another edge.');
        }
        this.query.toEdges.push(edgeQuery);
    };
    QueryBuilder.prototype.setToNode = function (nodeQuery, reverse) {
        if (reverse === void 0) { reverse = false; }
        if (this.query.type !== QueryType.EDGE) {
            throw new Error('toNode is only available for an Edge Query.');
        }
        this.query.toNode = nodeQuery;
        this.query.reverse = reverse;
    };
    QueryBuilder.prototype.addArithmeticIntersect = function (genomeQuery) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('Arithmetic is only available for an Genome Query.');
        }
        var ar = {
            'operator': 'intersect',
            'target_queries': [genomeQuery],
        };
        this.query.arithmetics.push(ar);
    };
    QueryBuilder.prototype.addArithmeticWindow = function (genomeQuery, windowSize) {
        if (windowSize === void 0) { windowSize = 1000; }
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('Arithmetic is only available for an Genome Query.');
        }
        var ar = {
            'operator': 'window',
            'target_queries': [genomeQuery],
            'windowSize': windowSize,
        };
        this.query.arithmetics.push(ar);
    };
    QueryBuilder.prototype.addArithmeticUnion = function (genomeQuery) {
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('Arithmetic is only available for an Genome Query.');
        }
        var ar = {
            'operator': 'union',
            'target_queries': [genomeQuery],
        };
        this.query.arithmetics.push(ar);
    };
    QueryBuilder.prototype.setSpecialGWASQuery = function () {
        var e_1, _a;
        if (this.query.type !== QueryType.GENOME) {
            throw new Error('setSpecialGWASQuery should be applied to a Genome Query.');
        }
        if (!this.query.toEdges || this.query.toEdges < 1) {
            throw new Error('GWAS query should have at least 1 edge.');
        }
        try {
            for (var _b = __values(this.query.toEdges), _c = _b.next(); !_c.done; _c = _b.next()) {
                var edge = _c.value;
                if (!edge.toNode || edge.toNode.type !== QueryType.INFO) {
                    throw new Error('The edge of GWAS query should connect to InfoNode.');
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.query.specialGWASQuery = true;
    };
    // Specify reading from user files
    QueryBuilder.prototype.setUserFileID = function (fileID) {
        this.query.userFileID = fileID;
    };
    QueryBuilder.prototype.build = function () {
        return JSON.parse(JSON.stringify(this.query));
    };
    return QueryBuilder;
}());
exports.QueryBuilder = QueryBuilder;
//# sourceMappingURL=QueryBuilder.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/sirius/SiriusApi.js":
/*!**********************************************************!*\
  !*** ../node_modules/valis/dist/lib/sirius/SiriusApi.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Temporary API for development
 */
var axios_1 = __webpack_require__(/*! axios */ "../node_modules/axios/index.js");
var SiriusApi = /** @class */ (function () {
    function SiriusApi() {
    }
    SiriusApi.loadAnnotations = function (contig, macro, startBaseIndex, span) {
        var jsonPath = "https://valis-tmp-data.firebaseapp.com/data/annotation/" + contig + (macro ? '-macro' : '') + "/" + startBaseIndex + "," + span + ".json";
        return axios_1.default.get(jsonPath).then(function (a) {
            return a.data;
        });
    };
    SiriusApi.loadACGTSubSequence = function (contig, lodLevel, lodStartBaseIndex, lodSpan) {
        var _this = this;
        var samplingDensity = (1 << lodLevel);
        var startBasePair = samplingDensity * lodStartBaseIndex + 1;
        var spanBasePair = lodSpan * samplingDensity;
        var endBasePair = startBasePair + spanBasePair - 1;
        var url = this.apiUrl + "/datatracks/sequence/" + contig + "/" + startBasePair + "/" + endBasePair + "?sampling_rate=" + samplingDensity;
        return axios_1.default({
            method: 'get',
            url: url,
            responseType: 'arraybuffer',
            headers: {},
        }).then(function (a) {
            var payloadArray = new Float32Array(_this.parseSiriusBinaryResponse(a.data));
            var baseCount = payloadArray.length / 4;
            if (baseCount > lodSpan) {
                console.warn("Payload too large, expected " + lodSpan + " units but received " + baseCount + " units");
            }
            // build compressed array
            var compressedArray = new Uint8Array(payloadArray.length);
            // find min/max
            var min = Infinity;
            var max = -Infinity;
            for (var i = 0; i < baseCount; i++) {
                var v0 = payloadArray[i * 4 + 0];
                var v1 = payloadArray[i * 4 + 1];
                var v2 = payloadArray[i * 4 + 2];
                var v3 = payloadArray[i * 4 + 3];
                min = Math.min(min, v0);
                min = Math.min(min, v1);
                min = Math.min(min, v2);
                min = Math.min(min, v3);
                max = Math.max(max, v0);
                max = Math.max(max, v1);
                max = Math.max(max, v2);
                max = Math.max(max, v3);
            }
            // use min/max to compress floats to bytes
            var delta = max - min;
            var scaleFactor = delta === 0 ? 0 : (1 / delta);
            for (var i = 0; i < baseCount; i++) {
                compressedArray[i * 4 + 0] = Math.round(Math.min((payloadArray[i * 4 + 0] - min) * scaleFactor, 1.) * 0xFF); // A
                compressedArray[i * 4 + 1] = Math.round(Math.min((payloadArray[i * 4 + 3] - min) * scaleFactor, 1.) * 0xFF); // C
                compressedArray[i * 4 + 2] = Math.round(Math.min((payloadArray[i * 4 + 2] - min) * scaleFactor, 1.) * 0xFF); // G
                compressedArray[i * 4 + 3] = Math.round(Math.min((payloadArray[i * 4 + 1] - min) * scaleFactor, 1.) * 0xFF); // T
            }
            return {
                array: compressedArray,
                sequenceMinMax: {
                    min: min,
                    max: max,
                },
                indicesPerBase: 4,
            };
        });
    };
    SiriusApi.loadSignal = function (sequenceId, lodLevel, lodStartBaseIndex, lodSpan) {
        var _this = this;
        var samplingDensity = (1 << lodLevel);
        var startBasePair = samplingDensity * lodStartBaseIndex + 1;
        var spanBasePair = lodSpan * samplingDensity;
        var endBasePair = startBasePair + spanBasePair - 1;
        var url = this.apiUrl + "/datatracks/ENCFF918ESR/chr1/" + startBasePair + "/" + endBasePair + "?sampling_rate=" + samplingDensity;
        return axios_1.default({
            method: 'get',
            url: url,
            responseType: 'arraybuffer',
            headers: {},
        }).then(function (a) {
            var arraybuffer = _this.parseSiriusBinaryResponse(a.data);
            var payloadArray = new Float32Array(arraybuffer);
            console.log(arraybuffer, payloadArray);
            return payloadArray;
        });
    };
    SiriusApi.getContigInfoPromise = function () {
        if (this._contigInfoPromise == null) {
            // initialize the promise
            this._contigInfoPromise = axios_1.default.get(SiriusApi.apiUrl + "/contig_info").then(function (data) {
                var e_1, _a;
                var infoArray = data.data;
                // create contig info map
                var contigInfoMap = {};
                try {
                    for (var infoArray_1 = __values(infoArray), infoArray_1_1 = infoArray_1.next(); !infoArray_1_1.done; infoArray_1_1 = infoArray_1.next()) {
                        var item = infoArray_1_1.value;
                        contigInfoMap[item.name] = {
                            start: item.start,
                            length: item.length
                        };
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (infoArray_1_1 && !infoArray_1_1.done && (_a = infoArray_1.return)) _a.call(infoArray_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return contigInfoMap;
            });
        }
        return this._contigInfoPromise;
    };
    SiriusApi.getContigInfo = function (contig) {
        return this.getContigInfoPromise().then(function (infoMap) {
            var info = infoMap[contig];
            if (info == null) {
                throw "No contig info available for \"" + contig + "\"";
            }
            else {
                return info;
            }
        });
    };
    SiriusApi.getContigs = function () {
        return this.getContigInfoPromise().then(function (infoMap) { return Object.keys(infoMap); });
    };
    SiriusApi.getContigsSorted = function () {
        if (this._sortedContigsPromise == null) {
            this._sortedContigsPromise = this.getContigs().then(function (contigs) {
                var sortedNaturally = contigs.sort(function (a, b) {
                    return a.localeCompare(b, undefined, { numeric: true, sensitivity: 'base' });
                });
                return sortedNaturally;
            });
        }
        return this._sortedContigsPromise;
    };
    SiriusApi.getGraphs = function () {
        return axios_1.default.get(this.apiUrl + "/graphs").then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getGraphData = function (graphId, annotationId1, annotationId2, startBp, endBp, samplingRate) {
        if (samplingRate === void 0) { samplingRate = 1; }
        var samplingRateQuery = "?sampling_rate=" + samplingRate;
        var requestUrl = this.apiUrl + "/graphs/" + graphId + "/" + annotationId1 + "/" + annotationId2 + "/" + startBp + "/" + endBp + samplingRateQuery;
        return axios_1.default.get(requestUrl);
    };
    SiriusApi.getTracks = function () {
        return axios_1.default.get(this.apiUrl + "/tracks").then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getTrackInfo = function () {
        return axios_1.default.get(this.apiUrl + "/track_info").then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getDistinctValues = function (key, query) {
        var requestUrl = this.apiUrl + "/distinct_values/" + key;
        return axios_1.default.post(requestUrl, query).then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getDetails = function (dataID) {
        return axios_1.default.get(this.apiUrl + "/details/" + dataID).then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getQueryResults = function (query, full, startIdx, endIdx) {
        if (full === void 0) { full = false; }
        if (startIdx === void 0) { startIdx = null; }
        if (endIdx === void 0) { endIdx = null; }
        var requestUrl = this.apiUrl + "/query/basic";
        if (full) {
            requestUrl = this.apiUrl + "/query/full";
        }
        if (query.specialGWASQuery) {
            requestUrl = this.apiUrl + "/query/gwas";
        }
        var options = [];
        if (startIdx !== null) {
            options.push("result_start=" + startIdx);
        }
        if (endIdx !== null) {
            options.push("result_end=" + endIdx);
        }
        if (options.length > 0) {
            requestUrl = requestUrl + "?" + options.join('&');
        }
        return axios_1.default.post(requestUrl, query).then(function (data) {
            return data.data;
        });
    };
    // this special API is created for the "all-variants" track
    SiriusApi.getAllVariantTrackData = function (contig, startBp, endBp) {
        return axios_1.default.get(this.apiUrl + "/all_variant_track_data/" + contig + "/" + startBp + "/" + endBp).then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getVariantTrackData = function (contig, startBp, endBp, query) {
        return axios_1.default.post(this.apiUrl + "/variant_track_data/" + contig + "/" + startBp + "/" + endBp, query).then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getIntervalTrackData = function (contig, startBp, endBp, query) {
        return axios_1.default.post(this.apiUrl + "/interval_track_data/" + contig + "/" + startBp + "/" + endBp, query).then(function (data) {
            return data.data;
        });
    };
    SiriusApi.getSuggestions = function (termType, searchText, maxResults) {
        var _this = this;
        if (maxResults === void 0) { maxResults = 100; }
        maxResults = Math.round(maxResults);
        var cacheKey = termType + "|" + searchText + "|" + maxResults;
        var ret = null;
        if (this.suggestionsCache[cacheKey]) {
            ret = new Promise(function (resolve, reject) {
                resolve(_this.suggestionsCache[cacheKey]);
            });
        }
        else {
            ret = axios_1.default.post(this.apiUrl + "/suggestions", {
                term_type: termType,
                search_text: searchText,
                max_results: maxResults,
            }).then(function (data) {
                _this.suggestionsCache[cacheKey] = data.data.results.slice(0);
                return data.data.results;
            });
        }
        return ret;
    };
    SiriusApi.getUserProfile = function () {
        return axios_1.default.get(this.apiUrl + "/user_profile").then(function (data) {
            return data.data;
        });
    };
    SiriusApi.parseSiriusBinaryResponse = function (arraybuffer) {
        var byteView = new Uint8Array(arraybuffer);
        // find the start of the payload
        var nullByteIndex = 0;
        // let jsonHeader = '';
        for (var i = 0; i < arraybuffer.byteLength; i++) {
            var byte = byteView[i];
            if (byte === 0) {
                nullByteIndex = i;
                break;
            }
            else {
                // jsonHeader += String.fromCharCode(byte); // we usually don't care about the json header since it's a copy of input parameters
            }
        }
        var payloadBytes = arraybuffer.slice(nullByteIndex + 1);
        return payloadBytes;
    };
    SiriusApi.uploadFile = function (fileType, file, onUploadProgress) {
        if (onUploadProgress === void 0) { onUploadProgress = null; }
        var data = new FormData();
        data.append("file", file);
        data.append("fileType", fileType);
        var config = {
            onUploadProgress: onUploadProgress,
        };
        return axios_1.default.post(this.apiUrl + "/user_files", data, config);
    };
    SiriusApi.getUserFiles = function () {
        return axios_1.default.get(this.apiUrl + "/user_files").then(function (data) {
            return data.data;
        });
    };
    SiriusApi.deleteUserFile = function (fileID) {
        var requestConfig = {
            params: {
                fileID: fileID
            },
        };
        return axios_1.default.delete(this.apiUrl + "/user_files", requestConfig);
    };
    SiriusApi.apiUrl = '';
    SiriusApi.minMaxCache = {};
    SiriusApi.suggestionsCache = {};
    return SiriusApi;
}());
exports.SiriusApi = SiriusApi;
var ArrayFormat;
(function (ArrayFormat) {
    ArrayFormat["Float32"] = "f32";
    ArrayFormat["UInt8"] = "ui8";
})(ArrayFormat || (ArrayFormat = {}));
//# sourceMappingURL=SiriusApi.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/sirius/queryparser.js":
/*!************************************************************!*\
  !*** ../node_modules/valis/dist/lib/sirius/queryparser.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ "../node_modules/valis/dist/lib/sirius/QueryBuilder.js");
var ParsedToken = /** @class */ (function () {
    function ParsedToken(rule, value) {
        this.rule = rule;
        this.value = value;
    }
    return ParsedToken;
}());
var ParsePath = /** @class */ (function () {
    function ParsePath(rule, value, path, isTerminal) {
        this.rule = rule;
        this.value = value;
        this.path = path;
        this.isTerminal = isTerminal;
    }
    return ParsePath;
}());
var EOF = 'EOF';
var ANY = 'ANY';
var ALL = 'ALL';
var ROOT = 'ROOT';
var STRIP_QUOTES = function (x) {
    return x.slice(1, x.length - 1);
};
var TRIM = function (x) {
    return x.replace(/(^[ '\^\$\*#&]+)|([ '\^\$\*#&]+$)/g, '');
};
var REGEX_TO_STRING = function (x) {
    var str = x.toString();
    return str.slice(1, str.length - 2);
};
var REGEX_HAS_QUOTES = function (x) {
    var a = REGEX_TO_STRING(x);
    return a[0] === "\"" && a[a.length - 1] === "\"";
};
function mergeResults(promises) {
    return Promise.all(promises).then(function (results) {
        var allResults = [];
        results.forEach(function (result) {
            allResults = allResults.concat(result);
        });
        return allResults;
    });
}
var builder = new QueryBuilder_1.QueryBuilder();
function buildVariantQuery(parsePath) {
    var token = parsePath[0];
    if (token.rule === 'INFLUENCING') {
        var traitName = STRIP_QUOTES(parsePath[1].value);
        builder.newInfoQuery();
        builder.filterType("trait");
        builder.searchText(traitName);
        var traitQuery = builder.build();
        builder.newEdgeQuery();
        builder.setToNode(traitQuery);
        var edgeQuery = builder.build();
        builder.newGenomeQuery();
        builder.addToEdge(edgeQuery);
        builder.setSpecialGWASQuery();
        return builder.build();
    }
    else if (token.rule === 'NAMED') {
        var snpRS = TRIM(parsePath[1].value.toLowerCase());
        builder.newGenomeQuery();
        builder.filterID('Gsnp_' + snpRS);
        var snpQuery = builder.build();
        return snpQuery;
    }
}
function buildTraitQuery(parsePath) {
    var traitName = STRIP_QUOTES(parsePath[0].value);
    builder.newInfoQuery();
    builder.filterType("trait");
    builder.searchText(traitName);
    return builder.build();
}
function buildGeneQuery(parsePath) {
    var token = parsePath[0];
    if (token.rule === 'NAMED') {
        var geneName = STRIP_QUOTES(parsePath[1].value);
        builder.newGenomeQuery();
        builder.filterName(geneName.toUpperCase());
        return builder.build();
    }
    else if (token.rule === 'INFLUENCING') {
        var traitName = STRIP_QUOTES(parsePath[1].value);
        builder.newInfoQuery();
        builder.filterType("trait");
        builder.searchText(traitName);
        var traitQuery = builder.build();
        builder.newEdgeQuery();
        builder.setToNode(traitQuery);
        builder.filterMaxPValue(0.05);
        var edgeQuery = builder.build();
        builder.newGenomeQuery();
        builder.addToEdge(edgeQuery);
        builder.setLimit(1000000);
        var variantQuery = builder.build();
        builder.newGenomeQuery();
        builder.filterType("gene");
        builder.addArithmeticIntersect(variantQuery);
        return builder.build();
    }
}
function buildCellQuery(parsePath) {
    var annotationType = (parsePath[0].rule == 'PROMOTER') ? "Promoter-like" : "Enhancer-like";
    var targets = [STRIP_QUOTES(parsePath[2].value)];
    var cellType = STRIP_QUOTES(parsePath[4].value);
    builder.newGenomeQuery();
    builder.filterType(annotationType);
    builder.filterTargets(targets);
    builder.filterBiosample(cellType);
    builder.setLimit(2000000);
    return builder.build();
}
function buildEQTLQuery(parsePath) {
    var token = parsePath[0];
    if (token.rule === 'INFLUENCING') {
        var geneName = STRIP_QUOTES(parsePath[1].value);
        builder.newGenomeQuery();
        builder.filterName(geneName.toUpperCase());
        var geneQuery = builder.build();
        builder.newEdgeQuery();
        builder.setToNode(geneQuery);
        var edgeQuery = builder.build();
        builder.newGenomeQuery();
        builder.addToEdge(edgeQuery);
        builder.setLimit(1000000);
        return builder.build();
    }
    else if (token.rule === 'NAMED') {
        var snpRS = TRIM(parsePath[1].value.toLowerCase());
        builder.newGenomeQuery();
        builder.filterID('Gsnp_' + snpRS);
        var snpQuery = builder.build();
        builder.newEdgeQuery();
        builder.setToNode(snpQuery, true);
        var edgeQuery = builder.build();
        return edgeQuery;
    }
}
function buildPatientQuery(parsePath) {
    var token = parsePath[0];
    if (token.rule === 'WITH_TUMOR') {
        var tumorSite = STRIP_QUOTES(parsePath[1].value);
        builder.newInfoQuery();
        builder.filterType('patient');
        builder.filterBiosample(tumorSite);
        builder.setLimit(1000000);
        return builder.build();
    }
}
function buildSNPrsQuery(parsePath) {
    builder.newGenomeQuery();
    builder.filterID('Gsnp_' + TRIM(parsePath[0].value.toLowerCase()));
    return builder.build();
}
function buildFullTextQuery(inputText) {
    if (!inputText)
        return null;
    var isAllUpper = inputText === inputText.toUpperCase();
    var suffixIsNumber = !isNaN(+inputText[inputText.length - 1]);
    if (inputText.length > 5 && !isAllUpper && !suffixIsNumber) {
        builder.newInfoQuery();
        builder.filterType('trait');
        builder.searchText(inputText);
    }
    else {
        builder.newGenomeQuery();
        builder.filterType('gene');
        builder.filterName(inputText.toUpperCase());
    }
    return builder.build();
}
function buildQuery(parsePath) {
    var token = parsePath[0];
    if (token.rule === 'VARIANTS') {
        return buildVariantQuery(parsePath.slice(1));
    }
    else if (token.rule === 'GENE_T') {
        return buildGeneQuery(parsePath.slice(1));
    }
    else if (token.rule === 'TRAIT_T') {
        return buildTraitQuery(parsePath.slice(1));
    }
    else if (token.rule === 'PROMOTER' || token.rule === 'ENHANCER') {
        return buildCellQuery(parsePath);
    }
    else if (token.rule === 'EQTL') {
        return buildEQTLQuery(parsePath.slice(1));
    }
    else if (token.rule === 'PATIENT_T') {
        return buildPatientQuery(parsePath.slice(1));
    }
    else if (token.rule === 'RS_T') {
        return buildSNPrsQuery(parsePath);
    }
}
var QueryParser = /** @class */ (function () {
    function QueryParser(grammar, terminals, suggestions) {
        this.grammar = grammar;
        this.terminals = terminals;
        this.suggestions = suggestions;
    }
    QueryParser.prototype.eat = function (soFar, rule) {
        soFar = TRIM(soFar);
        var soFarLowerCase = soFar.toLowerCase();
        var regExp = this.terminals.get(rule);
        regExp.lastIndex = 0;
        var result = regExp.exec(soFarLowerCase);
        if (result !== null) {
            var offset = result.index + result[0].length;
            return { parsed: soFar.slice(0, offset), rest: soFar.slice(offset) };
        }
        else {
            return { parsed: null, rest: soFar };
        }
    };
    QueryParser.prototype.parse = function (soFar, rule, path) {
        var _this = this;
        if (path === void 0) { path = []; }
        if (rule === EOF && soFar.length === 0) {
            var newPath = path.slice(0);
            newPath.push(new ParsedToken(EOF, ''));
            return [new ParsePath(rule, soFar, newPath, true)];
        }
        else if (this.terminals.get(rule) !== undefined) {
            var parsed = this.eat(soFar, rule).parsed;
            if (parsed !== null) {
                var pathCopy = path.slice(0);
                pathCopy.push(new ParsedToken(rule, parsed));
                return [new ParsePath(rule, parsed, pathCopy, true)];
            }
            else {
                return [new ParsePath(rule, soFar, path.slice(0), false)];
            }
        }
        else if (this.grammar.get(rule)) {
            // expand this rule and return result
            var expandedRule = this.grammar.get(rule);
            return this.parse(soFar, expandedRule, path.slice(0));
        }
        else if (rule[0] === ANY) {
            // just union all possible parse paths together
            var options = rule.slice(1);
            var possibilities_1 = [];
            options.forEach(function (subRule) {
                possibilities_1 = possibilities_1.concat(_this.parse(soFar, subRule, path.slice(0)));
            });
            return possibilities_1;
        }
        else if (rule[0] === ALL) {
            if (this.terminals.get(rule[1])) {
                var _a = this.eat(soFar, rule[1]), parsed = _a.parsed, rest = _a.rest;
                var newPath = path.slice(0);
                newPath.push(new ParsedToken(rule[1], parsed));
                if (rest === soFar || parsed === null) {
                    // we were not able to eat a token! return suggestions for the current token rule
                    return this.parse(soFar, rule[1], path.slice(0));
                }
                else {
                    var remainingRules = rule.slice(2);
                    if (remainingRules.length === 0) {
                        return [];
                    }
                    else if (remainingRules.length === 1) {
                        var ret = this.parse(rest, rule[2], newPath);
                        return ret;
                    }
                    else {
                        return this.parse(rest, [ALL].concat(remainingRules), newPath);
                    }
                }
            }
            else if (this.grammar.get(rule[1])) {
                var expandedRule = this.grammar.get(rule[1]);
                // try parsing the first rule in the ALL clause
                var tryParseResults = this.parse(soFar, expandedRule, path.slice(0));
                // get the maximum parse depth of all possible paths
                var maxParse = tryParseResults.reduce(function (a, b) { return a.path.length > b.path.length ? a : b; });
                ;
                var maxDepth_1 = maxParse.path ? maxParse.path.length : 0;
                var paths = [];
                // filter to the max depth parses and try to continue
                var maxDepthPaths = tryParseResults.filter(function (x) { return x.path.length === maxDepth_1; });
                for (var i = 0; i < maxDepthPaths.length; i++) {
                    var subParse = maxDepthPaths[i];
                    if (subParse.isTerminal) {
                        // if the parser has fully parsed the first rule
                        var parsedSoFar = subParse.path.slice(path.length).map(function (x) { return x.value; }).join(' ');
                        var cleanedSoFar = TRIM(soFar);
                        var idxTo = cleanedSoFar.indexOf(parsedSoFar);
                        var rest = cleanedSoFar.slice(idxTo + parsedSoFar.length);
                        if (rule.slice(2).length === 0) {
                            paths.push(new ParsePath(subParse.rule, subParse.value, subParse.path, subParse.isTerminal));
                        }
                        else if (rule.slice(2).length === 1) {
                            return this.parse(rest, rule[2], subParse.path.slice(0));
                        }
                        else {
                            return this.parse(rest, [ALL].concat(rule.slice(2)), subParse.path.slice(0));
                        }
                    }
                    else {
                        // otherwise return suggestions for the first rule in the ALL clasue
                        paths.push(new ParsePath(subParse.rule, subParse.value, subParse.path.slice(0), subParse.isTerminal));
                    }
                }
                return paths;
            }
        }
        return [];
    };
    QueryParser.prototype.buildSuggestionsFromParse = function (inputText, results, maxSuggestions) {
        var _this = this;
        if (maxSuggestions === void 0) { maxSuggestions = 15; }
        var maxParse = results.reduce(function (a, b) { return a.path.length > b.path.length ? a : b; });
        var maxDepth = maxParse.path.length;
        var finalSuggestions = [];
        var quoteSuggestion = false;
        results.filter(function (x) { return x.path.length === maxDepth; }).forEach(function (subPath) {
            var rule = subPath.rule;
            var tokenText = subPath.value;
            if (subPath.rule === EOF) {
                // ignore the EOF and keep giving suggestions for the previous token
                rule = subPath.path[subPath.path.length - 2].rule;
                //set the token text to the text with '"' characters removed
                var val = subPath.path[subPath.path.length - 2].value;
                tokenText = val.slice(1, val.length - 1);
            }
            if (_this.terminals.has(rule) && REGEX_HAS_QUOTES(_this.terminals.get(rule)))
                quoteSuggestion = true;
            if (_this.suggestions.get(rule)) {
                tokenText = TRIM(tokenText).toLowerCase();
                finalSuggestions.push(_this.suggestions.get(rule)(tokenText, maxSuggestions / 2));
            }
            else {
                finalSuggestions.push(new Promise(function (resolve, reject) {
                    resolve([
                        { rule: rule, value: REGEX_TO_STRING(_this.terminals.get(rule)) }
                    ]);
                }));
            }
        });
        var query = null;
        var additionalSuggestions = null;
        if (maxParse.rule === EOF) {
            query = buildQuery(maxParse.path);
        }
        else if (maxParse.path.length === 0) {
            // if no prefixes match, then we just want to return raw query completions!
            query = buildFullTextQuery(inputText);
            var geneSuggestions = this.suggestions.get('GENE')(inputText, maxSuggestions / 4);
            var traitSuggestions = this.suggestions.get('TRAIT')(inputText, maxSuggestions / 4);
            additionalSuggestions = mergeResults([geneSuggestions, traitSuggestions]);
        }
        return {
            tokens: maxParse.path,
            suggestions: mergeResults(finalSuggestions),
            additionalSuggestions: additionalSuggestions,
            query: query,
            isQuoted: quoteSuggestion,
        };
    };
    QueryParser.prototype.getSuggestions = function (inputText, maxSuggestions) {
        if (maxSuggestions === void 0) { maxSuggestions = 15; }
        var results = this.parse(inputText, this.grammar.get(ROOT));
        if (results.length === 0)
            return null;
        return this.buildSuggestionsFromParse(inputText, results, maxSuggestions);
    };
    return QueryParser;
}());
exports.QueryParser = QueryParser;
function buildQueryParser(suggestions) {
    var terminals = new Map();
    terminals.set('TRAIT', /"(.+?)"/g);
    terminals.set('GENE', /"(.+?)"/g);
    terminals.set('INFLUENCING', /influencing/g);
    terminals.set('OF', /of/g);
    terminals.set('VARIANTS', /variants/g);
    terminals.set('GENE_T', /gene/g);
    terminals.set('TRAIT_T', /trait/g);
    terminals.set('NEAR', /near/g);
    terminals.set('IN', /in/g);
    terminals.set('PROMOTER', /promoters/g);
    terminals.set('ENHANCER', /enhancers/g);
    terminals.set('TARGET', /"(.+?)"/g);
    terminals.set('CELL_TYPE', /"(.+?)"/g);
    terminals.set('EQTL', /eqtl/g);
    terminals.set('NAMED', /named/g);
    terminals.set('TUMOR_SITE', /"(.+?)"/g);
    terminals.set('PATIENT_T', /patient/g);
    terminals.set('WITH_TUMOR', /with tumor/g);
    terminals.set('RS_T', /rs\d+$/g);
    terminals.set('NUMBER', /^\d+$/g);
    var expansions = new Map();
    expansions.set('NAMED_GENE_OR_INFLUENCEING_TRAIT', [ANY, 'INFLUENCING_TRAIT', 'NAMED_GENE']);
    expansions.set('INFLUENCING_GENE_OR_NAMED_RS', [ANY, 'INFLUENCING_GENE', 'NAMED_SNP_RS']);
    expansions.set('INFLUENCING_TRAIT_OR_NAMED_RS', [ANY, 'INFLUENCING_TRAIT', 'NAMED_SNP_RS']);
    expansions.set('INFLUENCING_TRAIT', [ALL, 'INFLUENCING', 'TRAIT']);
    expansions.set('INFLUENCING_GENE', [ALL, 'INFLUENCING', 'GENE']);
    expansions.set('NAMED_GENE', [ALL, 'NAMED', 'GENE']);
    expansions.set('NAMED_SNP_RS', [ALL, 'NAMED', 'RS_T']);
    expansions.set('ANNOTATION_TYPE', [ANY, 'PROMOTER', 'ENHANCER']);
    expansions.set('CELL_ANNOTATION', [ALL, 'ANNOTATION_TYPE', 'OF', 'TARGET', 'IN', 'CELL_TYPE']);
    // The root query rules
    expansions.set('VARIANT_QUERY', [ALL, 'VARIANTS', 'INFLUENCING_TRAIT_OR_NAMED_RS', EOF]);
    expansions.set('GENE_QUERY', [ALL, 'GENE_T', 'NAMED_GENE_OR_INFLUENCEING_TRAIT', EOF]);
    expansions.set('TRAIT_QUERY', [ALL, 'TRAIT_T', 'TRAIT', EOF]);
    expansions.set('EQTL_QUERY', [ALL, 'EQTL', 'INFLUENCING_GENE_OR_NAMED_RS', EOF]);
    expansions.set('ANNOTATION_QUERY', [ALL, 'CELL_ANNOTATION', EOF]);
    // expansions.set('PATIENT_QUERY', [ALL, 'PATIENT_T', 'WITH_TUMOR', 'TUMOR_SITE', EOF]);
    // expansions.set('SNP_RS_QUERY', [ALL, 'RS_T', EOF]);
    expansions.set('ROOT', [ANY, 'VARIANT_QUERY', 'GENE_QUERY', 'TRAIT_QUERY', 'EQTL_QUERY', 'ANNOTATION_QUERY']);
    // return empty result for rs prefix queries
    suggestions.set('RS_T', function (q, num) { return new Promise(function (resolve, reject) { return resolve([]); }); });
    return new QueryParser(expansions, terminals, suggestions);
}
exports.buildQueryParser = buildQueryParser;
function buildVariantQueryParser(suggestions) {
    var terminals = new Map();
    terminals.set('TRAIT', /"(.+?)"/g);
    terminals.set('GENE', /"(.+?)"/g);
    terminals.set('INFLUENCING', /influencing/g);
    terminals.set('OF', /of/g);
    terminals.set('VARIANTS', /variants/g);
    terminals.set('GENE_T', /gene/g);
    terminals.set('TRAIT_T', /trait/g);
    terminals.set('NEAR', /near/g);
    terminals.set('IN', /in/g);
    terminals.set('PROMOTER', /promoters/g);
    terminals.set('ENHANCER', /enhancers/g);
    terminals.set('TARGET', /"(.+?)"/g);
    terminals.set('CELL_TYPE', /"(.+?)"/g);
    terminals.set('EQTL', /eqtl/g);
    terminals.set('NAMED', /named/g);
    terminals.set('TUMOR_SITE', /"(.+?)"/g);
    terminals.set('PATIENT_T', /patient/g);
    terminals.set('WITH_TUMOR', /with tumor/g);
    terminals.set('RS_T', /rs\d+$/g);
    terminals.set('NUMBER', /^\d+$/g);
    var expansions = new Map();
    expansions.set('REGION_QUERY', [ANY, 'GENE_QUERY', 'EQTL_QUERY', 'ANNOTATION_QUERY']);
    expansions.set('NAMED_GENE_OR_INFLUENCEING_TRAIT', [ANY, 'INFLUENCING_TRAIT', 'NAMED_GENE']);
    expansions.set('VARIANT_OF_QUERY', [ALL, 'OF', 'REGION_QUERY']);
    expansions.set('INFLUENCING_GENE_OR_NAMED_RS', [ANY, 'INFLUENCING_GENE', 'NAMED_SNP_RS']);
    expansions.set('INFLUENCING_TRAIT_OR_NAMED_RS', [ANY, 'INFLUENCING_TRAIT', 'NAMED_SNP_RS', 'VARIANT_OF_QUERY']);
    expansions.set('INFLUENCING_TRAIT', [ALL, 'INFLUENCING', 'TRAIT']);
    expansions.set('INFLUENCING_GENE', [ALL, 'INFLUENCING', 'GENE']);
    expansions.set('NAMED_GENE', [ALL, 'NAMED', 'GENE']);
    expansions.set('NAMED_SNP_RS', [ALL, 'NAMED', 'RS_T']);
    expansions.set('ANNOTATION_TYPE', [ANY, 'PROMOTER', 'ENHANCER']);
    expansions.set('CELL_ANNOTATION', [ALL, 'ANNOTATION_TYPE', 'OF', 'TARGET', 'IN', 'CELL_TYPE']);
    // The root query rules
    expansions.set('GENE_QUERY', [ALL, 'GENE_T', 'NAMED_GENE_OR_INFLUENCEING_TRAIT', EOF]);
    expansions.set('TRAIT_QUERY', [ALL, 'TRAIT_T', 'TRAIT', EOF]);
    expansions.set('EQTL_QUERY', [ALL, 'EQTL', 'INFLUENCING_GENE_OR_NAMED_RS', EOF]);
    expansions.set('ANNOTATION_QUERY', [ALL, 'CELL_ANNOTATION', EOF]);
    // expansions.set('PATIENT_QUERY', [ALL, 'PATIENT_T', 'WITH_TUMOR', 'TUMOR_SITE', EOF]);
    // expansions.set('SNP_RS_QUERY', [ALL, 'RS_T', EOF]);
    expansions.set('ROOT', [ANY, 'INFLUENCING_TRAIT_OR_NAMED_RS']);
    // return empty result for rs prefix queries
    suggestions.set('RS_T', function (q, num) { return new Promise(function (resolve, reject) { return resolve([]); }); });
    return new QueryParser(expansions, terminals, suggestions);
}
exports.buildVariantQueryParser = buildVariantQueryParser;
//# sourceMappingURL=queryparser.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/valis-browser/AppStatePersistence.js":
/*!***************************************************************************!*\
  !*** ../node_modules/valis/dist/lib/valis-browser/AppStatePersistence.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var LZString = __webpack_require__(/*! lz-string */ "../node_modules/lz-string/libs/lz-string.js");
var AppStatePersistence = /** @class */ (function () {
    function AppStatePersistence() {
    }
    AppStatePersistence.getUrlHash = function (stateObject) {
        var stateUrl = '#' + this.serializeConfig(stateObject);
        return stateUrl;
    };
    /**
     * @throws string on invalid state url
     */
    AppStatePersistence.parseUrlHash = function (hash) {
        var stateString = hash.substring(1);
        return this.deserializeConfig(stateString);
    };
    AppStatePersistence.serializeConfig = function (state) {
        var headerVisible = (state.headerVisible != null) ? state.headerVisible : true;
        var minifiedState = {
            t: this.minifyGenomeBrowserState(state.genomeBrowser),
            s: this.minifySidebarState(state.sidebar),
            hv: headerVisible ? 1 : 0,
        };
        var jsonString = JSON.stringify(minifiedState);
        var compressedString = LZString.compressToBase64(jsonString);
        return compressedString;
    };
    /**
     * @throws string on invalid serialized data
     */
    AppStatePersistence.deserializeConfig = function (serialized) {
        var jsonString = LZString.decompressFromBase64(serialized);
        if (jsonString == null) {
            throw "Invalid state string - could not decompress";
        }
        var minifiedState = JSON.parse(jsonString);
        var expandedState = {
            genomeBrowser: this.expandGenomeBrowserState(minifiedState.t),
            sidebar: this.expandSidebarState(minifiedState.s),
            headerVisible: (minifiedState.hv != null) ? (!!minifiedState.hv) : true,
        };
        return expandedState;
    };
    AppStatePersistence.minifyGenomeBrowserState = function (state) {
        var e_1, _a, e_2, _b;
        var minifiedPanels = new Array();
        try {
            for (var _c = __values(state.panels), _d = _c.next(); !_d.done; _d = _c.next()) {
                var panel = _d.value;
                minifiedPanels.push([
                    panel.location.contig,
                    panel.location.x0,
                    panel.location.x1,
                    panel.width
                ]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var minifiedTracks = new Array();
        try {
            for (var _e = __values(state.tracks), _f = _e.next(); !_f.done; _f = _e.next()) {
                var track = _f.value;
                minifiedTracks.push([
                    track.model,
                    track.heightPx
                ]);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return {
            p: minifiedPanels,
            t: minifiedTracks
        };
    };
    AppStatePersistence.expandGenomeBrowserState = function (min) {
        var e_3, _a, e_4, _b;
        var minPanels = min.p;
        var minTracks = min.t;
        var panels = new Array();
        try {
            for (var minPanels_1 = __values(minPanels), minPanels_1_1 = minPanels_1.next(); !minPanels_1_1.done; minPanels_1_1 = minPanels_1.next()) {
                var minPanel = minPanels_1_1.value;
                panels.push({
                    location: {
                        contig: minPanel[0],
                        x0: minPanel[1],
                        x1: minPanel[2],
                    },
                    width: minPanel[3],
                });
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (minPanels_1_1 && !minPanels_1_1.done && (_a = minPanels_1.return)) _a.call(minPanels_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        var tracks = new Array();
        try {
            for (var minTracks_1 = __values(minTracks), minTracks_1_1 = minTracks_1.next(); !minTracks_1_1.done; minTracks_1_1 = minTracks_1.next()) {
                var minTrack = minTracks_1_1.value;
                tracks.push({
                    model: minTrack[0],
                    heightPx: minTrack[1],
                });
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (minTracks_1_1 && !minTracks_1_1.done && (_b = minTracks_1.return)) _b.call(minTracks_1);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return {
            panels: panels,
            tracks: tracks,
        };
    };
    AppStatePersistence.minifySidebarState = function (state) {
        return {
            t: state.viewType,
            h: state.title,
            p: state.viewProps,
        };
    };
    AppStatePersistence.expandSidebarState = function (min) {
        return {
            viewType: min.t,
            title: min.h,
            viewProps: min.p
        };
    };
    AppStatePersistence.version = 0;
    return AppStatePersistence;
}());
exports.AppStatePersistence = AppStatePersistence;
exports.default = AppStatePersistence;
//# sourceMappingURL=AppStatePersistence.js.map

/***/ }),

/***/ "../node_modules/valis/dist/lib/valis-browser/ValisBrowserConfig.js":
/*!**************************************************************************!*\
  !*** ../node_modules/valis/dist/lib/valis-browser/ValisBrowserConfig.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SidebarViewType;
(function (SidebarViewType) {
    SidebarViewType[SidebarViewType["None"] = 0] = "None";
    SidebarViewType[SidebarViewType["EntityDetails"] = 1] = "EntityDetails";
    SidebarViewType[SidebarViewType["SearchResults"] = 2] = "SearchResults";
})(SidebarViewType = exports.SidebarViewType || (exports.SidebarViewType = {}));
//# sourceMappingURL=ValisBrowserConfig.js.map

/***/ }),

/***/ "../node_modules/warning/warning.js":
/*!******************************************!*\
  !*** ../node_modules/warning/warning.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "development" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "../node_modules/webpack/buildin/harmony-module.js":
/*!*********************************************************!*\
  !*** ../node_modules/webpack/buildin/harmony-module.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./GenomeBrowser.tsx":
/*!***************************!*\
  !*** ./GenomeBrowser.tsx ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var AppCanvas_1 = __webpack_require__(/*! ./ui/core/AppCanvas */ "./ui/core/AppCanvas.tsx");
var TrackViewer_1 = __webpack_require__(/*! ./ui/TrackViewer */ "./ui/TrackViewer.tsx");
var ManifestDataSource_1 = __webpack_require__(/*! ./data-source/ManifestDataSource */ "./data-source/ManifestDataSource.ts");
var GenomeBrowser = /** @class */ (function () {
    function GenomeBrowser(dataSource, configuration) {
        var _this = this;
        this._frameLoopHandle = 0;
        this.frameLoop = function () {
            _this._frameLoopHandle = window.requestAnimationFrame(_this.frameLoop);
            // appCanvas should react to user input before animation are stepped
            // this enables any animations spawned by the interaction events to be progressed before rendering
            _this.appCanvasRef.handleUserInteraction();
            Animator_1.default.frame();
            _this.appCanvasRef.renderCanvas();
        };
        this.trackViewer = new TrackViewer_1.default();
        if (dataSource != null) {
            this.setDataSource(dataSource);
        }
        if (configuration != null) {
            this.setConfiguration(configuration);
        }
    }
    GenomeBrowser.prototype.setDataSource = function (dataSource) {
        if (typeof dataSource === 'string') {
            // if first argument is string, use a manifest data source
            this.dataSource = new ManifestDataSource_1.ManifestDataSource(dataSource);
        }
        else {
            this.dataSource = dataSource;
        }
        this.dataSource.getContigs().then(function (contigs) {
            console.log("Contigs loaded!", contigs);
            // create internal data source
            // new InternalDataSource(contigs, ...)
            // onDataSourceChange()
        });
    };
    GenomeBrowser.prototype.setConfiguration = function (configuration) {
        this.trackViewer.setConfiguration(configuration);
    };
    GenomeBrowser.prototype.getConfiguration = function () {
        return this.trackViewer.getConfiguration();
    };
    GenomeBrowser.prototype.addTrack = function (model, heightPx, animateIn) {
        if (heightPx === void 0) { heightPx = 50; }
        if (animateIn === void 0) { animateIn = true; }
        return this.trackViewer.addTrack(model, heightPx, animateIn);
    };
    GenomeBrowser.prototype.closeTrack = function (track, animateOut, onComplete) {
        if (animateOut === void 0) { animateOut = true; }
        return this.trackViewer.closeTrack(track, animateOut, onComplete);
    };
    GenomeBrowser.prototype.getTracks = function () {
        return this.trackViewer.getTracks();
    };
    GenomeBrowser.prototype.getPanels = function () {
        return this.trackViewer.getPanels();
    };
    GenomeBrowser.prototype.render = function (props) {
        var _this = this;
        return (React.createElement(AppCanvas_1.default, { ref: function (v) {
                _this.appCanvasRef = v;
                _this.startFrameLoop();
            }, width: props.width, height: props.height, content: this.trackViewer, pixelRatio: props.pixelRatio || window.devicePixelRatio || 1, style: props.style, onWillUnmount: function () {
                _this.stopFrameLoop();
            } }));
    };
    GenomeBrowser.prototype.startFrameLoop = function () {
        if (this._frameLoopHandle === 0) {
            this.frameLoop();
        }
    };
    GenomeBrowser.prototype.stopFrameLoop = function () {
        if (this._frameLoopHandle !== 0) {
            window.cancelAnimationFrame(this._frameLoopHandle);
            this._frameLoopHandle = 0;
        }
    };
    return GenomeBrowser;
}());
exports.GenomeBrowser = GenomeBrowser;
exports.default = GenomeBrowser;


/***/ }),

/***/ "./data-source/ManifestDataSource.ts":
/*!*******************************************!*\
  !*** ./data-source/ManifestDataSource.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ManifestDataSource = /** @class */ (function () {
    function ManifestDataSource(manifestPath) {
        var _this = this;
        this.manifestPath = manifestPath;
        this.manifestPromise = new Promise(function (resolve, reject) {
            var request = new XMLHttpRequest();
            request.addEventListener('loadend', function (e) {
                // assume success if in 2xx range
                if (request.status >= 200 && request.status < 300) {
                    try {
                        var manifest = JSON.parse(request.responseText);
                        resolve(manifest);
                    }
                    catch (e) {
                        reject("Error parsing manifest: " + e);
                    }
                }
                else {
                    reject("Could not load manifest: (" + request.status + ") " + request.statusText);
                }
            });
            request.open('GET', _this.manifestPath);
            request.send();
        });
    }
    ManifestDataSource.prototype.getContigs = function () {
        return this.manifestPromise.then(function (manifest) { return manifest.contigs.slice(); });
    };
    return ManifestDataSource;
}());
exports.ManifestDataSource = ManifestDataSource;
exports.default = ManifestDataSource;


/***/ }),

/***/ "./data-source/index.ts":
/*!******************************!*\
  !*** ./data-source/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./ManifestDataSource */ "./data-source/ManifestDataSource.ts"));


/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./data-source */ "./data-source/index.ts"));
__export(__webpack_require__(/*! ./model */ "./model/index.ts"));
__export(__webpack_require__(/*! ./tile-store */ "./tile-store/index.ts"));
__export(__webpack_require__(/*! ./ui */ "./ui/index.ts"));
__export(__webpack_require__(/*! ./GenomeBrowser */ "./GenomeBrowser.tsx"));


/***/ }),

/***/ "./model/AnnotationTileset.ts":
/*!************************************!*\
  !*** ./model/AnnotationTileset.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var GenomeFeatureType;
(function (GenomeFeatureType) {
    // order corresponds to nesting depth
    GenomeFeatureType[GenomeFeatureType["Gene"] = 0] = "Gene";
    GenomeFeatureType[GenomeFeatureType["Transcript"] = 1] = "Transcript";
    GenomeFeatureType[GenomeFeatureType["TranscriptComponent"] = 2] = "TranscriptComponent";
})(GenomeFeatureType = exports.GenomeFeatureType || (exports.GenomeFeatureType = {}));
var GeneClass;
(function (GeneClass) {
    // this is a small, simplified subset of types specified in the Sequence Ontology
    GeneClass[GeneClass["Unspecified"] = 0] = "Unspecified";
    GeneClass[GeneClass["ProteinCoding"] = 1] = "ProteinCoding";
    GeneClass[GeneClass["NonProteinCoding"] = 2] = "NonProteinCoding";
    GeneClass[GeneClass["Pseudo"] = 3] = "Pseudo";
})(GeneClass = exports.GeneClass || (exports.GeneClass = {}));
var TranscriptClass;
(function (TranscriptClass) {
    TranscriptClass[TranscriptClass["Unspecified"] = 0] = "Unspecified";
    // aka protein coding RNA
    TranscriptClass[TranscriptClass["ProteinCoding"] = 1] = "ProteinCoding";
    // non-protein coding
    TranscriptClass[TranscriptClass["NonProteinCoding"] = 2] = "NonProteinCoding";
    // sub-types include
    // Ribosomal
    // Transfer
    // Small nuclear
    // Small nucleolar
})(TranscriptClass = exports.TranscriptClass || (exports.TranscriptClass = {}));
var TranscriptComponentClass;
(function (TranscriptComponentClass) {
    TranscriptComponentClass[TranscriptComponentClass["Exon"] = 0] = "Exon";
    TranscriptComponentClass[TranscriptComponentClass["Untranslated"] = 1] = "Untranslated";
    TranscriptComponentClass[TranscriptComponentClass["ProteinCodingSequence"] = 2] = "ProteinCodingSequence";
})(TranscriptComponentClass = exports.TranscriptComponentClass || (exports.TranscriptComponentClass = {}));
// small sub set of SO terms found in the Ensemble gff3 files
// for a more complete set, we should use data from https://github.com/The-Sequence-Ontology/SO-Ontologies
var SoGeneClass = /** @class */ (function () {
    function SoGeneClass() {
        this['gene'] = GeneClass.Unspecified;
        this['ncRNA_gene'] = GeneClass.NonProteinCoding;
        this['pseudogene'] = GeneClass.Pseudo;
    }
    SoGeneClass.instance = new SoGeneClass();
    return SoGeneClass;
}());
exports.SoGeneClass = SoGeneClass;
var SoTranscriptClass = /** @class */ (function () {
    function SoTranscriptClass() {
        this['lnc_RNA'] = TranscriptClass.NonProteinCoding;
        this['mRNA'] = TranscriptClass.ProteinCoding;
        this['pseudogenic_transcript'] = TranscriptClass.Unspecified;
        this['transcript'] = TranscriptClass.Unspecified;
        this['miRNA'] = TranscriptClass.NonProteinCoding;
        this['ncRNA'] = TranscriptClass.NonProteinCoding;
        this['rRNA'] = TranscriptClass.NonProteinCoding;
        this['scRNA'] = TranscriptClass.NonProteinCoding;
        this['snoRNA'] = TranscriptClass.NonProteinCoding;
        this['snRNA'] = TranscriptClass.NonProteinCoding;
    }
    SoTranscriptClass.instance = new SoTranscriptClass();
    return SoTranscriptClass;
}());
exports.SoTranscriptClass = SoTranscriptClass;
var SoTranscriptComponentClass = /** @class */ (function () {
    function SoTranscriptComponentClass() {
        this['CDS'] = TranscriptComponentClass.ProteinCodingSequence;
        this['exon'] = TranscriptComponentClass.Exon;
        this['five_prime_UTR'] = TranscriptComponentClass.Untranslated;
        this['three_prime_UTR'] = TranscriptComponentClass.Untranslated;
    }
    SoTranscriptComponentClass.instance = new SoTranscriptComponentClass();
    return SoTranscriptComponentClass;
}());
exports.SoTranscriptComponentClass = SoTranscriptComponentClass;
var Tileset = /** @class */ (function () {
    function Tileset(tileSize, topLevelOnly, onUnknownFeature, onError) {
        var _this = this;
        this.tileSize = tileSize;
        this.topLevelOnly = topLevelOnly;
        this.onUnknownFeature = onUnknownFeature;
        this.onError = onError;
        this.sequences = {};
        this.addTopLevelFeature = function (feature) {
            // tiles are determined at the top level
            var i0 = Math.floor(feature.start / _this.tileSize);
            var i1 = Math.floor(feature.end / _this.tileSize);
            for (var i = i0; i <= i1; i++) {
                var tile = _this.getTile(feature.sequenceId, i);
                _this.addFeature(tile, feature);
            }
        };
    }
    Tileset.prototype.addFeature = function (tile, feature) {
        var e_1, _a;
        var featureCommon = {
            name: feature.name,
            startIndex: feature.start - 1,
            length: feature.end - feature.start + 1,
            soClass: feature.type,
        };
        if (SoGeneClass.instance[feature.type] !== undefined) {
            // is gene
            // sum child transcripts
            var transcriptCount = feature.children.reduce(function (p, c) {
                var isTranscript = SoTranscriptClass.instance[c.type] !== undefined;
                return isTranscript ? (p + 1) : p;
            }, 0);
            var gene = __assign({}, featureCommon, { type: GenomeFeatureType.Gene, class: SoGeneClass.instance[feature.type], strand: feature.strand, transcriptCount: transcriptCount });
            tile.content.push(gene);
        }
        else if (SoTranscriptClass.instance[feature.type] !== undefined) {
            // is transcript
            var transcript = __assign({}, featureCommon, { type: GenomeFeatureType.Transcript, class: SoTranscriptClass.instance[feature.type] });
            tile.content.push(transcript);
        }
        else if (SoTranscriptComponentClass.instance[feature.type] !== undefined) {
            // is transcript component
            var info = __assign({}, featureCommon, { type: GenomeFeatureType.TranscriptComponent, class: SoTranscriptComponentClass.instance[feature.type] });
            if (feature.phase != null) {
                info.phase = feature.phase;
            }
            tile.content.push(info);
        }
        else {
            this.onUnknownFeature(feature);
            return;
        }
        if (!this.topLevelOnly) {
            try {
                for (var _b = __values(feature.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    this.addFeature(tile, child);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    Tileset.prototype.getTile = function (sequenceId, index) {
        var tiles = this.sequences[sequenceId];
        if (tiles === undefined) {
            // create tile array for sequence
            tiles = this.sequences[sequenceId] = [];
        }
        if (tiles[index] === undefined) {
            // create intervening tiles
            for (var i = 0; i <= index; i++) {
                if (tiles[i] === undefined) {
                    tiles[i] = {
                        startIndex: i * this.tileSize,
                        span: this.tileSize,
                        content: []
                    };
                }
            }
        }
        return tiles[index];
    };
    return Tileset;
}());
exports.Tileset = Tileset;


/***/ }),

/***/ "./model/index.ts":
/*!************************!*\
  !*** ./model/index.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./AnnotationTileset */ "./model/AnnotationTileset.ts"));


/***/ }),

/***/ "./tile-store/AnnotationTileStore.ts":
/*!*******************************************!*\
  !*** ./tile-store/AnnotationTileStore.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
var TileStore_1 = __webpack_require__(/*! ./TileStore */ "./tile-store/TileStore.ts");
var AnnotationTileset_1 = __webpack_require__(/*! ../model/AnnotationTileset */ "./model/AnnotationTileset.ts");
var AnnotationTileStore = /** @class */ (function (_super) {
    __extends(AnnotationTileStore, _super);
    function AnnotationTileStore(contig, tileSize, macro) {
        if (tileSize === void 0) { tileSize = 1 << 20; }
        if (macro === void 0) { macro = false; }
        var _this = _super.call(this, tileSize, 1) || this;
        _this.contig = contig;
        _this.macro = macro;
        valis_1.SiriusApi.getContigInfo(contig).then(function (info) {
            _this.maximumX = info.length - 1;
        });
        return _this;
    }
    AnnotationTileStore.prototype.mapLodLevel = function (l) {
        return 0;
    };
    AnnotationTileStore.prototype.getTilePayload = function (tile) {
        return valis_1.SiriusApi.loadAnnotations(this.contig, this.macro, tile.x, tile.span).then(function (flatFeatures) {
            // convert flat list of features into a nested structure which is easier to work with for rendering
            var payload = new Array();
            var activeGene;
            var activeTranscript;
            var lastType = -1;
            for (var i = 0; i < flatFeatures.length; i++) {
                var feature = flatFeatures[i];
                // validate feature type conforms to expected nesting order
                var deltaType = feature.type - lastType;
                if (deltaType > 1) {
                    console.warn("Invalid gene feature nesting: " + AnnotationTileset_1.GenomeFeatureType[lastType] + " -> " + AnnotationTileset_1.GenomeFeatureType[feature.type]);
                }
                lastType = feature.type;
                if (feature.type === AnnotationTileset_1.GenomeFeatureType.Gene) {
                    var geneInfo = feature;
                    activeGene = __assign({}, geneInfo, { transcripts: [] });
                    payload.push(activeGene);
                }
                if (feature.type === AnnotationTileset_1.GenomeFeatureType.Transcript) {
                    var transcriptInfo = feature;
                    if (activeGene == null) {
                        console.warn("Out of order Transcript \u2013 no parent gene found");
                        continue;
                    }
                    activeTranscript = __assign({}, transcriptInfo, { exon: [], cds: [], utr: [], other: [] });
                    activeGene.transcripts.push(activeTranscript);
                }
                if (feature.type === AnnotationTileset_1.GenomeFeatureType.TranscriptComponent) {
                    var componentInfo = feature;
                    if (activeTranscript == null) {
                        console.warn("Out of order TranscriptComponent \u2013 no parent transcript found");
                        continue;
                    }
                    // bucket components by class
                    switch (componentInfo.class) {
                        case AnnotationTileset_1.TranscriptComponentClass.Exon: {
                            activeTranscript.exon.push(componentInfo);
                            break;
                        }
                        case AnnotationTileset_1.TranscriptComponentClass.ProteinCodingSequence: {
                            // validate CDS ordering (must be startIndex ascending)
                            var lastCDS = activeTranscript.cds[activeTranscript.cds.length - 1];
                            if (lastCDS != null && (lastCDS.startIndex >= componentInfo.startIndex)) {
                                console.warn("Out of order CDS \u2013 Protein coding components must be sorted by startIndex");
                            }
                            activeTranscript.cds.push(componentInfo);
                            break;
                        }
                        case AnnotationTileset_1.TranscriptComponentClass.Untranslated: {
                            activeTranscript.utr.push(componentInfo);
                            break;
                        }
                        default: {
                            activeTranscript.other.push(componentInfo);
                            break;
                        }
                    }
                }
            }
            return payload;
        });
    };
    return AnnotationTileStore;
}(TileStore_1.TileStore));
exports.AnnotationTileStore = AnnotationTileStore;
var MacroAnnotationTileStore = /** @class */ (function (_super) {
    __extends(MacroAnnotationTileStore, _super);
    function MacroAnnotationTileStore(sourceId) {
        return _super.call(this, sourceId, 1 << 25, true) || this;
    }
    return MacroAnnotationTileStore;
}(AnnotationTileStore));
exports.MacroAnnotationTileStore = MacroAnnotationTileStore;
exports.default = AnnotationTileStore;


/***/ }),

/***/ "./tile-store/GenericIntervalTileStore.ts":
/*!************************************************!*\
  !*** ./tile-store/GenericIntervalTileStore.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var TileStore_1 = __webpack_require__(/*! ./TileStore */ "./tile-store/TileStore.ts");
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
/**
 * GenericIntervalTileStore makes it possible to transform a query result into tiles containing intervals
 *
 * It has two tile levels, micro and macro
 *
 * Micro tiles have lod 0 and are used to store intervals with base-pair precision
 *
 * Macro tile have lod level `this.macroLodLevel` and store many more intervals but with lower precision (not enough to display with base-pair precision)
 */
var GenericIntervalTileStore = /** @class */ (function (_super) {
    __extends(GenericIntervalTileStore, _super);
    function GenericIntervalTileStore(contig, query, tileSize) {
        if (tileSize === void 0) { tileSize = 1 << 15; }
        var _this = _super.call(this, tileSize, // tile size
        1) || this;
        _this.contig = contig;
        _this.query = query;
        _this.tileSize = tileSize;
        _this.microLodThreshold = 3;
        _this.macroLodLevel = 10;
        valis_1.SiriusApi.getContigInfo(contig).then(function (info) {
            _this.maximumX = info.length - 1;
        });
        return _this;
    }
    GenericIntervalTileStore.prototype.mapLodLevel = function (l) {
        if (l <= this.microLodThreshold) {
            return 0;
        }
        else {
            return this.macroLodLevel;
        }
    };
    GenericIntervalTileStore.prototype.getTilePayload = function (tile) {
        // @! quality improvement; reduce perception of shivering when zooming in
        // if lod level = 0 and a macro track exists that covers this tile then we can filter that tile to get the lod 0 tile (so no network request or promise)
        var startBase = tile.x + 1;
        var endBase = startBase + tile.span;
        return valis_1.SiriusApi.getIntervalTrackData(this.contig, startBase, endBase, this.query).then(function (r) {
            // allocate interval buffer
            var intervals = new Float32Array(r.data.length * 2);
            for (var i = 0; i < r.data.length; i++) {
                var entry = r.data[i];
                intervals[i * 2 + 0] = entry.start - 1;
                intervals[i * 2 + 1] = entry.length;
            }
            return intervals;
        });
    };
    return GenericIntervalTileStore;
}(TileStore_1.TileStore));
exports.GenericIntervalTileStore = GenericIntervalTileStore;
exports.default = GenericIntervalTileStore;


/***/ }),

/***/ "./tile-store/SequenceTileStore.ts":
/*!*****************************************!*\
  !*** ./tile-store/SequenceTileStore.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
var GPUDevice_1 = __webpack_require__(/*! engine/rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var TileStore_1 = __webpack_require__(/*! ./TileStore */ "./tile-store/TileStore.ts");
var SequenceTileStore = /** @class */ (function (_super) {
    __extends(SequenceTileStore, _super);
    function SequenceTileStore(sourceId) {
        var _this = _super.call(this, 1024, 8) || this;
        _this.sourceId = sourceId;
        valis_1.SiriusApi.getContigInfo(sourceId).then(function (info) {
            _this.maximumX = info.length - 1;
            // pre-load the sequence at a high lod level to avoid displaying nothing when zooming out
            var minLength = 512;
            _this.getTiles(0, _this.maximumX, info.length / minLength, true, function () { });
        }).catch(function () {
            console.warn("Could not determine sequence length");
        });
        return _this;
    }
    // skip odd lod levels to trade visual fidelity for improved load time and performance
    SequenceTileStore.prototype.mapLodLevel = function (l) {
        return Math.floor(l / 2) * 2;
    };
    SequenceTileStore.prototype.getTilePayload = function (tile) {
        var tileStore = this;
        return valis_1.SiriusApi.loadACGTSubSequence(this.sourceId, tile.lodLevel, tile.lodX, tile.lodSpan)
            .then(function (sequenceData) {
            return __assign({}, sequenceData, { dataUploaded: false, getTexture: function (device) {
                    var payload = this;
                    var blockPayload = tileStore.getBlockPayload(tile);
                    var gpuTexture = blockPayload.getTexture(device);
                    // upload this tile's row to the block if not already uploaded
                    if (!payload.dataUploaded) {
                        var nChannels = 4;
                        var dataWidthPixels = payload.array.length / nChannels;
                        // console.log(`%cupload row ${tile.lodLevel}`, 'color: green');
                        gpuTexture.updateTextureData(0, GPUDevice_1.TextureFormat.RGBA, payload.array, 0, tile.blockRowIndex, // x, y
                        Math.min(gpuTexture.w, dataWidthPixels), 1);
                        payload.dataUploaded = true;
                    }
                    return gpuTexture;
                } });
        });
    };
    SequenceTileStore.prototype.createBlockPayload = function (lodLevel, lodX, tileWidth, rows) {
        return {
            _gpuTexture: null,
            getTexture: function (device) {
                var payload = this;
                // allocate texture if it doesn't already exist
                if (payload._gpuTexture === null) {
                    // console.log(`%ccreate texture ${lodLevel}`, 'color: blue');
                    payload._gpuTexture = device.createTexture({
                        format: GPUDevice_1.TextureFormat.RGBA,
                        // mipmapping should be turned off to avoid rows blending with one another
                        // if TILES_PER_BLOCK = 1 then mipmapping may be enabled
                        generateMipmaps: false,
                        // FireFox emits performance warnings when using texImage2D on uninitialized textures
                        // in our case it's faster to let the browser zero the texture rather than allocating another array buffer
                        mipmapData: null,
                        width: tileWidth,
                        height: rows,
                        dataType: GPUDevice_1.TextureDataType.UNSIGNED_BYTE,
                        samplingParameters: {
                            magFilter: lodLevel > 0 ? GPUDevice_1.TextureMagFilter.LINEAR : GPUDevice_1.TextureMagFilter.NEAREST,
                            minFilter: GPUDevice_1.TextureMinFilter.LINEAR,
                            wrapS: GPUDevice_1.TextureWrapMode.CLAMP_TO_EDGE,
                            wrapT: GPUDevice_1.TextureWrapMode.CLAMP_TO_EDGE,
                        },
                        pixelStorage: {
                            packAlignment: 1,
                            unpackAlignment: 1,
                            flipY: false,
                            premultiplyAlpha: false,
                            colorSpaceConversion: GPUDevice_1.ColorSpaceConversion.NONE,
                        },
                    });
                }
                return payload._gpuTexture;
            }
        };
    };
    SequenceTileStore.prototype.releaseBlockPayload = function (payload) {
        if (payload._gpuTexture != null) {
            payload._gpuTexture.delete();
            payload._gpuTexture = null;
        }
    };
    return SequenceTileStore;
}(TileStore_1.default));
exports.SequenceTileStore = SequenceTileStore;
exports.default = SequenceTileStore;


/***/ }),

/***/ "./tile-store/SharedTileStores.ts":
/*!****************************************!*\
  !*** ./tile-store/SharedTileStores.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SharedTileStore = /** @class */ (function () {
    function SharedTileStore() {
    }
    SharedTileStore.getTileStore = function (type, sourceKey, constructor) {
        var typeTileStores = this.tileStores[type] = this.tileStores[type] || {};
        var tileStore = typeTileStores[sourceKey] = typeTileStores[sourceKey] || constructor(sourceKey);
        return tileStore;
    };
    SharedTileStore.clear = function (type) {
        var typeTileStores = this.tileStores[type];
        if (typeTileStores === undefined)
            return;
        for (var sourceId in typeTileStores) {
            var tileStore = typeTileStores[sourceId];
            tileStore.clear();
        }
        delete this.tileStores[type];
    };
    SharedTileStore.clearAll = function () {
        for (var type in this.tileStores) {
            this.clear(type);
        }
    };
    SharedTileStore.tileStores = {};
    return SharedTileStore;
}());
exports.SharedTileStore = SharedTileStore;
exports.default = SharedTileStore;


/***/ }),

/***/ "./tile-store/TileStore.ts":
/*!*********************************!*\
  !*** ./tile-store/TileStore.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! events */ "../node_modules/events/events.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var TileStore = /** @class */ (function () {
    function TileStore(tileWidth, tilesPerBlock, maximumX) {
        if (tileWidth === void 0) { tileWidth = 1024; }
        if (tilesPerBlock === void 0) { tilesPerBlock = 8; }
        if (maximumX === void 0) { maximumX = Infinity; }
        this.tileWidth = tileWidth;
        this.tilesPerBlock = tilesPerBlock;
        this.maximumX = maximumX;
        this.lods = new Array();
        this.blockSize = tileWidth * tilesPerBlock;
    }
    TileStore.prototype.getTiles = function (x0, x1, samplingDensity, requestData, callback) {
        // clamp to positive numbers
        x0 = Math.max(x0, 0);
        x1 = Math.max(x1, 0);
        // apply max X
        x0 = Math.min(x0, this.maximumX);
        x1 = Math.min(x1, this.maximumX);
        // guard illegal span
        if (x1 <= x0)
            return;
        var lodLevelFractional = Scalar_1.default.log2(Math.max(samplingDensity, 1));
        var lodLevel = Math.floor(lodLevelFractional);
        lodLevel = this.mapLodLevel(lodLevel);
        // convert range (at lod 0) to map to the current lod level (and round up/down greedily)
        var lodDensity = Math.pow(2, lodLevel);
        var x0_lodSpace = Math.floor(x0 / lodDensity);
        var x1_lodSpace = Math.ceil(x1 / lodDensity);
        // find the block and row within the block that overlaps x0 and x1
        var block0 = this.blockIndex(x0_lodSpace);
        var tileRow0 = this.tileRowIndex(x0_lodSpace);
        var block1 = this.blockIndex(x1_lodSpace);
        var tileRow1 = this.tileRowIndex(x1_lodSpace);
        // iterate over all blocks which intersect the range (creating blocks when they don't exist)
        // request data for each 'tile row' (aka a row of data in a block that corresponds to a single tile)
        // fire callback for each tile instance
        for (var blockIndex = block0; blockIndex <= block1; blockIndex++) {
            var block = this.getBlock(lodLevel, blockIndex);
            var firstRowIndex = blockIndex === block0 ? tileRow0 : 0;
            var lastRowIndex = blockIndex === block1 ? tileRow1 : (this.tilesPerBlock - 1);
            for (var rowIndex = firstRowIndex; rowIndex <= lastRowIndex; rowIndex++) {
                var tile = block.rows[rowIndex];
                if (requestData && (tile.state === TileState.Empty)) {
                    // no data requests have been made yet for this tile
                    this.loadTilePayload(tile);
                }
                callback(tile);
            }
        }
    };
    TileStore.prototype.getTile = function (x, samplingDensity, requestData) {
        x = Math.max(x, 0);
        x = Math.min(x, this.maximumX);
        var lodLevelFractional = Scalar_1.default.log2(Math.max(samplingDensity, 1));
        var lodLevel = Math.floor(lodLevelFractional);
        lodLevel = this.mapLodLevel(lodLevel);
        var lodDensity = Math.pow(2, lodLevel);
        var x_lodSpace = Math.floor(x / lodDensity);
        return this.getTileFromLodX(lodLevel, x_lodSpace, requestData);
    };
    TileStore.prototype.isWithinInitializedLodRange = function (samplingDensity) {
        var lodLevelFractional = Scalar_1.default.log2(Math.max(samplingDensity, 1));
        var lodLevel = Math.floor(lodLevelFractional);
        lodLevel = this.mapLodLevel(lodLevel);
        return lodLevel >= 0 && lodLevel < this.lods.length;
    };
    TileStore.prototype.getBlockPayload = function (tile) {
        var blockLodX = this.blockIndex(tile.lodX);
        var block = this.getBlock(tile.lodLevel, blockLodX);
        if (block.payload == null) {
            block.payload = this.createBlockPayload(tile.lodLevel, blockLodX, this.tileWidth, this.tilesPerBlock);
        }
        return block.payload;
    };
    TileStore.prototype.clear = function () {
        var e_1, _a;
        try {
            // release block payloads
            for (var _b = __values(this.lods), _c = _b.next(); !_c.done; _c = _b.next()) {
                var lod = _c.value;
                for (var blockId in lod) {
                    var block = lod[blockId];
                    if (block === undefined || block.payload === undefined) {
                        continue;
                    }
                    this.releaseBlockPayload(block.payload);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // release tiles to GC
        this.lods = new Array();
    };
    // user-overridden methods
    TileStore.prototype.getTilePayload = function (tile) {
        return null;
    };
    TileStore.prototype.createBlockPayload = function (lodLevel, lodX, lodSpan, rows) {
        return null;
    };
    TileStore.prototype.releaseBlockPayload = function (block) {
    };
    TileStore.prototype.mapLodLevel = function (selectedLodLevel) {
        return selectedLodLevel;
    };
    TileStore.prototype.getTileFromLodX = function (lodLevel, lodX, requestData) {
        var blockIndex = this.blockIndex(lodX);
        var rowIndex = this.tileRowIndex(lodX);
        var block = this.getBlock(lodLevel, blockIndex);
        var tile = block.rows[rowIndex];
        if (requestData && (tile.state === TileState.Empty)) {
            this.loadTilePayload(tile);
        }
        return tile;
    };
    TileStore.prototype.loadTilePayload = function (tile) {
        var _this = this;
        var tileInternal = tile;
        tileInternal._state = TileState.Loading;
        try {
            var result = this.getTilePayload(tile);
            if (Promise.resolve(result) === result) {
                // result is a promise
                result
                    .then(function (payload) { return _this.tileLoadComplete(tile, payload); })
                    .catch(function (reason) { return _this.tileLoadFailed(tile, reason); });
            }
            else {
                // assume result is the payload
                this.tileLoadComplete(tile, result);
            }
        }
        catch (e) {
            this.tileLoadFailed(tile, e);
        }
    };
    TileStore.prototype.tileLoadComplete = function (tile, payload) {
        var tileInternal = tile;
        tileInternal._payload = payload;
        tileInternal._state = TileState.Complete;
        tileInternal.emitComplete();
    };
    TileStore.prototype.tileLoadFailed = function (tile, reason) {
        var tileInternal = tile;
        tileInternal._state = TileState.Empty;
        tileInternal.emitLoadFailed(reason);
        console.warn("Tile payload request failed: " + reason, tile);
    };
    TileStore.prototype.getBlock = function (lodLevel, blockIndex) {
        var blocks = this.getBlocks(lodLevel);
        var blockId = this.blockId(blockIndex);
        var block = blocks[blockId];
        if (block === undefined) {
            // create block
            block = {
                lastUsedTimestamp: -1,
                rows: new Array(this.tilesPerBlock),
                payload: null,
            };
            var blockLodX = blockIndex * this.blockSize;
            // initialize empty tile data objects for each row
            for (var rowIndex = 0; rowIndex < this.tilesPerBlock; rowIndex++) {
                // tile (lodLevel, blockIndex, rowIndex)
                var tileLodX = rowIndex * this.tileWidth + blockLodX;
                block.rows[rowIndex] = new Tile(block, lodLevel, tileLodX, this.tileWidth, rowIndex);
            }
            // store in blocks
            blocks[blockId] = block;
        }
        return block;
    };
    TileStore.prototype.getBlocks = function (lod) {
        var blocks = this.lods[lod];
        if (blocks === undefined) {
            blocks = this.lods[lod] = {};
        }
        return blocks;
    };
    TileStore.prototype.tileRowIndex = function (lodX) {
        return Math.floor((lodX % this.blockSize) / this.tileWidth);
    };
    TileStore.prototype.blockIndex = function (lodX) {
        return Math.floor(lodX / this.blockSize);
    };
    TileStore.prototype.blockId = function (blockIndex) {
        return blockIndex.toString();
    };
    return TileStore;
}());
exports.TileStore = TileStore;
var TileState;
(function (TileState) {
    TileState[TileState["Empty"] = 0] = "Empty";
    TileState[TileState["Loading"] = 1] = "Loading";
    TileState[TileState["Complete"] = 2] = "Complete";
})(TileState = exports.TileState || (exports.TileState = {}));
var Tile = /** @class */ (function () {
    function Tile(block, lodLevel, lodX, lodSpan, blockRowIndex) {
        this.block = block;
        this.lodLevel = lodLevel;
        this.lodX = lodX;
        this.lodSpan = lodSpan;
        this.blockRowIndex = blockRowIndex;
        this._state = TileState.Empty;
        this.eventEmitter = new events_1.EventEmitter();
        var lodDensity = Math.pow(2, lodLevel);
        this.x = lodX * lodDensity;
        this.span = lodSpan * lodDensity;
        this.key = this.lodLevel + '_' + this.lodX;
    }
    Object.defineProperty(Tile.prototype, "state", {
        get: function () {
            return this._state;
        },
        set: function (v) { },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tile.prototype, "payload", {
        get: function () {
            return this._payload;
        },
        // available when tile is in the Complete state
        set: function (v) { },
        enumerable: true,
        configurable: true
    });
    Tile.prototype.addEventListener = function (event, callback) {
        this.eventEmitter.addListener(event, callback);
    };
    Tile.prototype.removeEventListener = function (event, callback) {
        this.eventEmitter.removeListener(event, callback);
    };
    Tile.prototype.markLastUsed = function () {
        this.block.lastUsedTimestamp = performance.now();
    };
    Tile.prototype.emitComplete = function () {
        this.eventEmitter.emit('complete', this, this._payload);
    };
    Tile.prototype.emitLoadFailed = function (reason) {
        this.eventEmitter.emit('load-failed', this, reason);
    };
    return Tile;
}());
exports.Tile = Tile;
exports.default = TileStore;


/***/ }),

/***/ "./tile-store/VariantTileStore.ts":
/*!****************************************!*\
  !*** ./tile-store/VariantTileStore.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
var TileStore_1 = __webpack_require__(/*! ./TileStore */ "./tile-store/TileStore.ts");
var VariantTileStore = /** @class */ (function (_super) {
    __extends(VariantTileStore, _super);
    function VariantTileStore(model, contig) {
        var _this = _super.call(this, 1 << 15, // tile size
        1) || this;
        _this.model = model;
        _this.contig = contig;
        valis_1.SiriusApi.getContigInfo(contig).then(function (info) {
            _this.maximumX = info.length - 1;
        });
        return _this;
    }
    VariantTileStore.prototype.mapLodLevel = function (l) {
        if (this.model.query == null) {
            return 0;
        }
        return Math.floor(l / 10) * 10;
    };
    VariantTileStore.prototype.getTilePayload = function (tile) {
        var startBase = tile.x + 1;
        var endBase = startBase + tile.span;
        var snpQuery = this.model.query;
        var ApiPromise;
        if (!snpQuery) {
            // use special API created for the "all variants track"
            ApiPromise = valis_1.SiriusApi.getAllVariantTrackData(this.contig, startBase, endBase);
        }
        else {
            ApiPromise = valis_1.SiriusApi.getVariantTrackData(this.contig, startBase, endBase, snpQuery);
        }
        // use general API to laod other variants, the number of results should be no more than 10M.
        return ApiPromise.then(function (data) {
            var variants = data.data;
            return variants.map(function (v) {
                return {
                    id: v.id,
                    baseIndex: v.start - 1,
                    refSequence: v.info.variant_ref ? v.info.variant_ref : '',
                    alts: v.info.variant_alt ? v.info.variant_alt.split(',') : [],
                };
            });
        });
    };
    return VariantTileStore;
}(TileStore_1.TileStore));
exports.VariantTileStore = VariantTileStore;
exports.default = VariantTileStore;


/***/ }),

/***/ "./tile-store/index.ts":
/*!*****************************!*\
  !*** ./tile-store/index.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./AnnotationTileStore */ "./tile-store/AnnotationTileStore.ts"));
__export(__webpack_require__(/*! ./GenericIntervalTileStore */ "./tile-store/GenericIntervalTileStore.ts"));
__export(__webpack_require__(/*! ./SequenceTileStore */ "./tile-store/SequenceTileStore.ts"));
__export(__webpack_require__(/*! ./SharedTileStores */ "./tile-store/SharedTileStores.ts"));
__export(__webpack_require__(/*! ./TileStore */ "./tile-store/TileStore.ts"));
__export(__webpack_require__(/*! ./VariantTileStore */ "./tile-store/VariantTileStore.ts"));


/***/ }),

/***/ "./ui/Panel.tsx":
/*!**********************!*\
  !*** ./ui/Panel.tsx ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var IconButton_1 = __webpack_require__(/*! @material-ui/core/IconButton */ "../node_modules/@material-ui/core/IconButton/index.js");
var Edit_1 = __webpack_require__(/*! @material-ui/icons/Edit */ "../node_modules/@material-ui/icons/Edit.js");
var ChevronLeft_1 = __webpack_require__(/*! @material-ui/icons/ChevronLeft */ "../node_modules/@material-ui/icons/ChevronLeft.js");
var ChevronRight_1 = __webpack_require__(/*! @material-ui/icons/ChevronRight */ "../node_modules/@material-ui/icons/ChevronRight.js");
var Cancel_1 = __webpack_require__(/*! @material-ui/icons/Cancel */ "../node_modules/@material-ui/icons/Cancel.js");
var Check_1 = __webpack_require__(/*! @material-ui/icons/Check */ "../node_modules/@material-ui/icons/Check.js");
var Close_1 = __webpack_require__(/*! @material-ui/icons/Close */ "../node_modules/@material-ui/icons/Close.js");
var React = __webpack_require__(/*! react */ "react");
var InteractionEvent_1 = __webpack_require__(/*! engine/ui/InteractionEvent */ "../node_modules/engine/ui/InteractionEvent.js");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var ReactObject_1 = __webpack_require__(/*! ./core/ReactObject */ "./ui/core/ReactObject.tsx");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Fonts_1 = __webpack_require__(/*! ./font/Fonts */ "./ui/font/Fonts.ts");
var BaseTrack_1 = __webpack_require__(/*! ./track/BaseTrack */ "./ui/track/BaseTrack.ts");
var XAxis_1 = __webpack_require__(/*! ./XAxis */ "./ui/XAxis.ts");
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var DragMode;
(function (DragMode) {
    DragMode[DragMode["Move"] = 0] = "Move";
    DragMode[DragMode["SelectRegion"] = 1] = "SelectRegion";
})(DragMode || (DragMode = {}));
var Panel = /** @class */ (function (_super) {
    __extends(Panel, _super);
    function Panel(onClose, spacing, panelHeaderHeight, xAxisHeight) {
        var _this = _super.call(this) || this;
        _this.onClose = onClose;
        _this.spacing = spacing;
        _this.panelHeaderHeight = panelHeaderHeight;
        _this.xAxisHeight = xAxisHeight;
        _this.maxRange = 1e10;
        _this.minRange = 10;
        _this.trackViews = new Set();
        _this._closable = false;
        _this._closing = false;
        _this.x0 = 0;
        _this.x1 = 1;
        _this.activeAxisPointers = {};
        _this.secondaryAxisPointers = {};
        _this.tileDragging = false;
        _this.tileHovering = false;
        _this.isEditing = false;
        _this._rangeAnimationObject = {
            _setRangeInternal: function (x0, x1) { _this.setRangeImmediate(x0, x1); },
            _x0: _this.x0,
            _x1: _this.x1,
            set x0(x) {
                this._x0 = x;
                this._setRangeInternal(this._x0, this._x1);
            },
            set x1(x) {
                this._x1 = x;
                this._setRangeInternal(this._x0, this._x1);
            },
            get x0() { return this._x0; },
            get x1() { return this._x1; },
        };
        _this.onTileLeave = function (e) {
            _this.tileHovering = false;
            if (!_this.tileDragging) {
                _this.removeActiveAxisPointer(e);
            }
        };
        _this.onTilePointerMove = function (e) {
            _this.tileHovering = true;
            _this._dragMode = undefined;
            _this.setActiveAxisPointer(e);
        };
        _this.onTileWheel = function (e) {
            e.preventDefault();
            e.stopPropagation();
            var xScrollDomPx = 0;
            var yScrollDomPx = 0;
            // determine panning delta in dom pixels from horizontal scroll amount
            switch (e.wheelDeltaMode) {
                default:
                case InteractionEvent_1.WheelDeltaMode.Pixel: {
                    xScrollDomPx = e.wheelDeltaX;
                    yScrollDomPx = e.wheelDeltaY;
                    break;
                }
                case InteractionEvent_1.WheelDeltaMode.Line: {
                    // assume a line is roughly 12px (needs experimentation)
                    xScrollDomPx = e.wheelDeltaX * 12;
                    yScrollDomPx = e.wheelDeltaY * 12;
                    break;
                }
                case InteractionEvent_1.WheelDeltaMode.Page: {
                    // assume a page is roughly 1000px (needs experimentation)
                    xScrollDomPx = e.wheelDeltaX * 1000;
                    yScrollDomPx = e.wheelDeltaY * 1000;
                    break;
                }
            }
            // gesture disambiguation; when dominantly zooming we want to reduce panning speed
            // normalize scroll vector
            var scrollVectorLengthSq = xScrollDomPx * xScrollDomPx + yScrollDomPx * yScrollDomPx;
            // avoid divide by 0 normalization issues
            if (scrollVectorLengthSq <= 0) {
                scrollVectorLengthSq = 1;
            }
            var scrollVectorLength = Math.sqrt(scrollVectorLengthSq);
            var normScrollX = xScrollDomPx / scrollVectorLength; // cosAngleY
            var normScrollY = yScrollDomPx / scrollVectorLength; // cosAngleX
            // as normScrollVectorY approaches 1, we should scale xScrollDomPx to
            var absAngleY = Math.acos(Math.abs(normScrollY));
            var fractionalAngleY = 2 * absAngleY / (Math.PI); // 0 = points along y, 1 = points along x
            var absAngleX = Math.acos(Math.abs(normScrollX));
            var fractionalAngleX = 2 * absAngleX / (Math.PI); // 0 = points along x, 1 = points along y
            // use fraction angle to reduce x as angle approaches y-pointing
            // see https://www.desmos.com/calculator/butkwn0xdt for function exploration
            var edge = 0.75;
            var xReductionFactor = Math.sin(Math.pow(Math.min(fractionalAngleY / edge, 1), 3) * (Math.PI / 2));
            var yReductionFactor = Math.sin(Math.pow(Math.min(fractionalAngleX / edge, 1), 3) * (Math.PI / 2));
            xScrollDomPx = xScrollDomPx * xReductionFactor;
            yScrollDomPx = yScrollDomPx * yReductionFactor;
            // compute zoom multiplier from wheel y
            var zoomFactor = 1;
            if (e.ctrlKey) {
                // pinch zoom
                zoomFactor = 1 + e.wheelDeltaY * 0.01; // I'm assuming mac trackpad outputs change in %, @! needs research
            }
            else {
                // scroll zoom
                var scrollZoomSpeed = 0.3;
                zoomFactor = 1 + yScrollDomPx * 0.01 * scrollZoomSpeed;
            }
            var x0 = _this.x0;
            var x1 = _this.x1;
            var span = x1 - x0;
            // apply scale change
            var zoomCenterF = e.fractionX;
            // clamp zoomFactor to range limits
            if (span * zoomFactor > _this.maxRange) {
                zoomFactor = _this.maxRange / span;
            }
            if (span * zoomFactor < _this.minRange) {
                zoomFactor = _this.minRange / span;
            }
            var d0 = span * zoomCenterF;
            var d1 = span * (1 - zoomCenterF);
            var p = d0 + x0;
            x0 = p - d0 * zoomFactor;
            x1 = p + d1 * zoomFactor;
            var newSpan = x1 - x0;
            var midSpan = (newSpan + span) * 0.5;
            // offset by x-scroll
            var basePairsPerPixel = midSpan / _this.getComputedWidth();
            var xScrollBasePairs = basePairsPerPixel * xScrollDomPx;
            x0 = x0 + xScrollBasePairs;
            x1 = x1 + xScrollBasePairs;
            _this.setRange(x0, x1);
        };
        _this.onTileDragStart = function (e) {
            var e_1, _a;
            _this._dragMode = undefined;
            if (e.buttonState !== 1)
                return;
            // determine drag mode
            if (e.shiftKey) {
                _this._dragMode = DragMode.SelectRegion;
            }
            else {
                // default drag
                _this._dragMode = DragMode.Move;
            }
            // common
            _this._dragXF0 = e.fractionX;
            _this._dragX00 = _this.x0;
            _this._lastDragLX = e.localX;
            _this._dragDistLocal = 0;
            switch (_this._dragMode) {
                case DragMode.SelectRegion: {
                    e.preventDefault();
                    try {
                        for (var _b = __values(_this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var track = _c.value;
                            track.setFocusRegion(_this._dragXF0, _this._dragXF0);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    break;
                }
                case DragMode.Move: {
                    e.preventDefault();
                    _this.tileDragging = true;
                    break;
                }
            }
        };
        _this.onTileDragMove = function (e) {
            var e_2, _a;
            if (e.buttonState !== 1)
                return;
            _this._dragDistLocal += Math.abs(e.localX - _this._lastDragLX);
            _this._lastDragLX = e.localX;
            switch (_this._dragMode) {
                case DragMode.SelectRegion: {
                    e.preventDefault();
                    // selected region in fractional units
                    var selectedRegionF0 = _this._dragXF0;
                    var selectedRegionF1 = e.fractionX;
                    try {
                        for (var _b = __values(_this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var track = _c.value;
                            track.setFocusRegion(selectedRegionF0, selectedRegionF1);
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    break;
                }
                case DragMode.Move: {
                    e.preventDefault();
                    _this.tileDragging = true;
                    var span = _this.x1 - _this.x0;
                    var dxf = e.fractionX - _this._dragXF0;
                    var x0 = _this._dragX00 + span * (-dxf);
                    var x1 = x0 + span;
                    _this.setRange(x0, x1);
                    break;
                }
            }
            // update axis pointer position because we probably prevented default
            _this.setActiveAxisPointer(e);
        };
        _this.onTileDragEnd = function (e) {
            var e_3, _a;
            e.stopPropagation();
            switch (_this._dragMode) {
                case DragMode.SelectRegion: {
                    e.preventDefault();
                    // determine selected region in absolute units (base pairs)
                    var span = _this.x1 - _this.x0;
                    var selectedRegionX0 = _this.x0 + span * _this._dragXF0;
                    var selectedRegionX1 = _this.x0 + span * e.fractionX;
                    var x0 = Math.min(selectedRegionX0, selectedRegionX1);
                    var x1 = Math.max(selectedRegionX0, selectedRegionX1);
                    // clamp to existing range (so it must be a zoom in)
                    x0 = Math.max(x0, _this.x0);
                    x1 = Math.min(x1, _this.x1);
                    // zoom into region
                    _this.setRange(x0, x1, true);
                    break;
                }
                case DragMode.Move: {
                    // if total drag distance, preventDefault so that pointerup isn't fired for other nodes
                    if (_this._dragDistLocal > 4) {
                        e.preventDefault();
                    }
                    break;
                }
            }
            try {
                for (var _b = __values(_this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var track = _c.value;
                    track.disableFocusRegion();
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
            _this.tileDragging = false;
            if (!_this.tileHovering) {
                _this.removeActiveAxisPointer(e);
            }
            _this._dragMode = undefined;
        };
        _this.availableContigAtOffset = function (contig, offset) {
            if (_this.availableContigs != null) {
                var idx = _this.availableContigs.indexOf(contig);
                if (idx < 0)
                    return _this.availableContigs[0];
                var newIdx = (idx + offset) % _this.availableContigs.length;
                if (newIdx < 0)
                    newIdx += _this.availableContigs.length;
                return _this.availableContigs[newIdx];
            }
            else {
                return _this.contig;
            }
        };
        // a panel has nothing to render on its own
        _this.render = false;
        _this.header = new ReactObject_1.default();
        _this.fillX(_this.header);
        _this.header.h = _this.panelHeaderHeight;
        _this.header.containerStyle = {
            zIndex: 3,
            backgroundColor: '#fff',
        };
        _this.header.layoutY = -1;
        _this.header.y = -_this.xAxisHeight - _this.spacing.y * 0.5;
        _this.add(_this.header);
        // 1/2 spacing around the x-axis
        var offset = 0.5; // offset labels by 0.5 to center on basepairs
        _this.xAxis = new XAxis_1.default(_this.x0, _this.x1, 11, Fonts_1.OpenSansRegular, offset, 1, 1);
        _this.xAxis.minDisplay = 0;
        _this.xAxis.maxDisplay = Infinity;
        _this.xAxis.y = -_this.spacing.y;
        _this.xAxis.h = _this.xAxisHeight;
        _this.xAxis.layoutY = -1;
        _this.fillX(_this.xAxis);
        _this.add(_this.xAxis);
        _this.resizeHandle = new Rect_1.default(0, 0, [1, 0, 0, 1]);
        _this.resizeHandle.layoutX = -0.5;
        _this.resizeHandle.layoutX = -0.5;
        _this.resizeHandle.layoutParentX = 1;
        _this.resizeHandle.layoutParentX = 1;
        _this.resizeHandle.w = _this.spacing.x;
        _this.resizeHandle.layoutH = 1;
        _this.resizeHandle.z = 1;
        _this.resizeHandle.render = false;
        _this.setResizable(false);
        return _this;
    }
    Object.defineProperty(Panel.prototype, "closable", {
        get: function () { return this._closable; },
        set: function (v) {
            this._closable = v;
            this.updatePanelHeader();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Panel.prototype, "closing", {
        get: function () { return this._closing; },
        set: function (v) {
            this._closing = v;
            this.updatePanelHeader();
        },
        enumerable: true,
        configurable: true
    });
    Panel.prototype.setResizable = function (v) {
        // handle should only be in the scene-graph if it's resizable
        this.remove(this.resizeHandle);
        if (v)
            this.add(this.resizeHandle);
        this.resizeHandle.cursorStyle = v ? 'col-resize' : null;
        this.resizeHandle.color.set(v ? [0, 1, 0, 1] : [0.3, 0.3, 0.3, 1]);
    };
    Panel.prototype.addTrackView = function (trackView) {
        trackView.addInteractionListener('dragstart', this.onTileDragStart);
        trackView.addInteractionListener('dragmove', this.onTileDragMove);
        trackView.addInteractionListener('dragend', this.onTileDragEnd);
        trackView.addInteractionListener('pointerup', this.onTileDragEnd);
        trackView.addInteractionListener('wheel', this.onTileWheel);
        trackView.addInteractionListener('pointermove', this.onTilePointerMove);
        trackView.addInteractionListener('pointerleave', this.onTileLeave);
        trackView.setContig(this.contig);
        trackView.setRange(this.x0, this.x1);
        this.fillX(trackView);
        this.add(trackView);
        this.trackViews.add(trackView);
    };
    Panel.prototype.removeTrackView = function (trackView) {
        trackView.removeInteractionListener('dragstart', this.onTileDragStart);
        trackView.removeInteractionListener('dragmove', this.onTileDragMove);
        trackView.removeInteractionListener('dragend', this.onTileDragEnd);
        trackView.removeInteractionListener('pointerup', this.onTileDragEnd);
        trackView.removeInteractionListener('wheel', this.onTileWheel);
        trackView.removeInteractionListener('pointermove', this.onTilePointerMove);
        trackView.removeInteractionListener('pointerleave', this.onTileLeave);
        this.remove(trackView);
        this.trackViews.delete(trackView);
    };
    Panel.prototype.setContig = function (contig) {
        var e_4, _a;
        this.contig = contig;
        try {
            for (var _b = __values(this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                var track = _c.value;
                track.setContig(contig);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        // parse contig and create a formatted contig
        var chromosomeContigMatch = /chr(.*)$/.exec(contig);
        if (chromosomeContigMatch) {
            this.formattedContig = "Chromosome " + chromosomeContigMatch[1];
        }
        else {
            this.formattedContig = "<Invalid contig> " + this.contig;
        }
        this.updatePanelHeader();
    };
    Panel.prototype.setRange = function (x0, x1, animate) {
        if (animate === void 0) { animate = false; }
        // if range is not a finite number then default to current values
        x0 = isFinite(x0) ? x0 : this.x0;
        x1 = isFinite(x1) ? x1 : this.x1;
        x0 = Math.min(x0, x1);
        x1 = Math.max(x0, x1);
        // if range is below allowed minimum, override without changing center
        var span = x1 - x0;
        if (span < this.minRange) {
            var midIndex = (x0 + x1) * 0.5;
            x0 = midIndex - this.minRange * 0.5;
            x1 = midIndex + this.minRange * 0.5;
            span = this.minRange;
        }
        if (animate) {
            var t = 10000;
            var criticalFriction = (Math.sqrt(t) * 2);
            var f = criticalFriction * 3;
            Animator_1.default.springTo(this._rangeAnimationObject, { x0: x0, x1: x1 }, { tension: t, friction: f });
        }
        else {
            Animator_1.default.stop(this._rangeAnimationObject);
            this._rangeAnimationObject.x0 = x0;
            this._rangeAnimationObject.x1 = x1;
        }
    };
    Panel.prototype.setAvailableContigs = function (contigs) {
        this.availableContigs = contigs;
        this.updatePanelHeader();
    };
    Panel.prototype.setSecondaryAxisPointers = function (secondaryAxisPointers) {
        var e_5, _a, e_6, _b;
        // remove any old and unused axis pointers
        for (var pointerId in this.secondaryAxisPointers) {
            if (secondaryAxisPointers[pointerId] === undefined && this.activeAxisPointers[pointerId] === undefined) {
                try {
                    for (var _c = __values(this.trackViews), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var tile = _d.value;
                        tile.removeAxisPointer(pointerId);
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            }
        }
        // add or update secondary axis pointers
        for (var pointerId in secondaryAxisPointers) {
            // if this panel has this pointer as an active axis pointer, skip it
            if (this.activeAxisPointers[pointerId] !== undefined) {
                continue;
            }
            var absX = secondaryAxisPointers[pointerId];
            var span = this.x1 - this.x0;
            var fractionX = (absX - this.x0) / span;
            this.secondaryAxisPointers[pointerId] = absX;
            try {
                for (var _e = __values(this.trackViews), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var tile = _f.value;
                    tile.setAxisPointer(pointerId, fractionX, BaseTrack_1.AxisPointerStyle.Secondary);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
    };
    Panel.prototype.setRangeImmediate = function (x0, x1) {
        var e_7, _a;
        this.x0 = x0;
        this.x1 = x1;
        // control axis text length by number of visible base pairs
        // when viewing a small number of bases the exact span is likely required
        var span = x1 - x0;
        if (span < 150) {
            this.xAxis.maxTextLength = Infinity;
        }
        else if (span < 1e5) {
            this.xAxis.maxTextLength = 6;
        }
        else {
            this.xAxis.maxTextLength = 4;
        }
        this.xAxis.setRange(x0, x1);
        try {
            for (var _b = __values(this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                var track = _c.value;
                track.setRange(x0, x1);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        this.updatePanelHeader();
    };
    Panel.prototype.setActiveAxisPointer = function (e) {
        var e_8, _a;
        var fractionX = e.fractionX;
        var span = this.x1 - this.x0;
        var axisPointerX = span * fractionX + this.x0;
        this.activeAxisPointers[e.pointerId] = axisPointerX;
        try {
            for (var _b = __values(this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                var tile = _c.value;
                tile.setAxisPointer(e.pointerId.toString(), fractionX, BaseTrack_1.AxisPointerStyle.Active);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        // broadcast active axis pointer change
        this.eventEmitter.emit('axisPointerUpdate', this.activeAxisPointers);
    };
    Panel.prototype.removeActiveAxisPointer = function (e) {
        var e_9, _a;
        if (this.activeAxisPointers[e.pointerId] === undefined) {
            return;
        }
        delete this.activeAxisPointers[e.pointerId];
        try {
            for (var _b = __values(this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                var tile = _c.value;
                tile.removeAxisPointer(e.pointerId.toString());
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_9) throw e_9.error; }
        }
        this.eventEmitter.emit('axisPointerUpdate', this.activeAxisPointers);
    };
    Panel.prototype.fillX = function (obj) {
        obj.x = this.spacing.x * 0.5;
        obj.layoutX = 0;
        obj.layoutParentX = 0;
        obj.layoutW = 1;
        obj.w = -this.spacing.x;
    };
    Panel.prototype.updatePanelHeader = function () {
        var _this = this;
        var rangeString = XAxis_1.default.formatValue(this.x0, 8) + "bp to " + XAxis_1.default.formatValue(this.x1, 8) + "bp";
        var startBp = Math.floor(this.x0).toFixed(0);
        var endBp = Math.ceil(this.x1).toFixed(0);
        var rangeSpecifier = this.contig + ":" + startBp + "-" + endBp;
        this.header.content = React.createElement(PanelHeader, { panel: this, contig: this.formattedContig, rangeString: rangeString, rangeSpecifier: rangeSpecifier, enableClose: this._closable && !this.closing, enableContigNavigation: this.availableContigs != null, onClose: this.onClose, isEditing: this.isEditing, onEditCancel: function () { return _this.finishEditing(); }, onEditSave: function (rangeSpecifier) { return _this.finishEditing(rangeSpecifier); }, onEditStart: function () { return _this.startEditing(); }, onNextContig: function () { return _this.setContig(_this.availableContigAtOffset(_this.contig, 1)); }, onPreviousContig: function () { return _this.setContig(_this.availableContigAtOffset(_this.contig, -1)); } });
    };
    Panel.prototype.finishEditing = function (rangeSpecifier) {
        this.isEditing = false;
        if (rangeSpecifier) {
            this.setRangeUsingRangeSpecifier(rangeSpecifier);
        }
        this.updatePanelHeader();
    };
    Panel.prototype.startEditing = function () {
        this.isEditing = true;
        this.updatePanelHeader();
    };
    Panel.prototype.setRangeUsingRangeSpecifier = function (specifier) {
        var parts = specifier.split(':');
        var contig = parts[0];
        // make chrx to chrX
        var chromosomeContigMatch = /chr(.*)$/.exec(contig);
        if (chromosomeContigMatch) {
            contig = 'chr' + chromosomeContigMatch[1].toUpperCase();
        }
        var ranges = parts[1].split('-');
        this.setContig(contig);
        this.setRange(parseFloat(ranges[0]), parseFloat(ranges[1]));
    };
    return Panel;
}(Object2D_1.default));
exports.Panel = Panel;
var PanelHeader = /** @class */ (function (_super) {
    __extends(PanelHeader, _super);
    function PanelHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PanelHeader.prototype.render = function () {
        var _this = this;
        var headerContents = null;
        var headerContainerStyle = {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
        };
        var headerStyle = {
            marginTop: 8,
            marginLeft: 8
        };
        var iconColor = 'rgb(171, 171, 171)';
        var iconHoverColor = 'rgb(255, 255, 255)';
        var iconViewBoxSize = '0 0 32 32';
        var closeIcon = this.props.enableClose ? (React.createElement("div", { style: {
                position: 'absolute',
                right: 0
            } },
            React.createElement(IconButton_1.default, { onClick: function () { return _this.props.onClose(_this.props.panel); }, color: "inherit" },
                React.createElement(Close_1.default /*color='rgb(171, 171, 171)' hoverColor='rgb(255, 255, 255)'*/, null)))) : null;
        var previousIcon = (React.createElement("div", { style: {
                position: 'absolute',
                left: 0
            } },
            React.createElement(IconButton_1.default, { onClick: function () { return _this.props.onPreviousContig(_this.props.panel); }, color: "inherit" },
                React.createElement(ChevronLeft_1.default /*color='rgb(171, 171, 171)' hoverColor='rgb(255, 255, 255)'*/, null))));
        var nextIcon = (React.createElement("div", { style: {
                position: 'absolute',
                right: 0
            } },
            React.createElement(IconButton_1.default, { onClick: function () { return _this.props.onNextContig(_this.props.panel); }, color: "inherit" },
                React.createElement(ChevronRight_1.default /*color='rgb(171, 171, 171)' hoverColor='rgb(255, 255, 255)'*/, null))));
        if (this.props.isEditing) {
            headerContents = (React.createElement("div", { style: headerContainerStyle },
                React.createElement("span", null,
                    React.createElement("input", { onChange: function (e) { return _this.rangeSpecifier = e.target.value; }, onKeyDown: function (e) {
                            if (e.key === 'Enter') {
                                _this.props.onEditSave(_this.rangeSpecifier);
                            }
                        }, type: "text", defaultValue: this.props.rangeSpecifier })),
                React.createElement("span", { style: headerStyle },
                    React.createElement(Cancel_1.default, { onClick: function () { return _this.props.onEditCancel(); }, viewBox: iconViewBoxSize })),
                React.createElement("span", { style: headerStyle },
                    React.createElement(Check_1.default, { onClick: function () { return _this.props.onEditSave(_this.rangeSpecifier); }, viewBox: iconViewBoxSize })),
                closeIcon));
        }
        else {
            headerContents = (React.createElement("div", { style: headerContainerStyle },
                this.props.enableContigNavigation ? previousIcon : null,
                React.createElement("span", { onClick: function () { return _this.props.onEditStart(); } },
                    React.createElement("b", null, this.props.contig),
                    " ",
                    this.props.rangeString),
                React.createElement("span", { style: headerStyle, onClick: function () { return _this.props.onEditStart(); } },
                    React.createElement(Edit_1.default, { viewBox: iconViewBoxSize })),
                this.props.enableContigNavigation ? nextIcon : null));
        }
        return React.createElement("div", { style: {
                position: 'relative',
                width: '100%',
                height: '100%',
                color: '#e8e8e8',
                backgroundColor: '#171615',
                borderRadius: '8px',
                fontSize: '12px',
                fontWeight: 200,
                overflow: 'hidden',
                userSelect: 'none',
            } },
            React.createElement("div", { style: {
                    position: 'absolute',
                    width: '100%',
                    textAlign: 'center',
                    top: '50%',
                    transform: 'translate(0, -50%)',
                    whiteSpace: 'nowrap',
                    cursor: 'pointer',
                } }, headerContents));
    };
    return PanelHeader;
}(React.Component));
exports.default = Panel;


/***/ }),

/***/ "./ui/TrackViewer.tsx":
/*!****************************!*\
  !*** ./ui/TrackViewer.tsx ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*

Dev notes:

    Refactor plans:
        - Improve how tracks and panels are laid out; should not need to manually call layout after each change
        - Panels should be an array not a set
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var IconButton_1 = __webpack_require__(/*! @material-ui/core/IconButton */ "../node_modules/@material-ui/core/IconButton/index.js");
var Add_1 = __webpack_require__(/*! @material-ui/icons/Add */ "../node_modules/@material-ui/icons/Add.js");
var Close_1 = __webpack_require__(/*! @material-ui/icons/Close */ "../node_modules/@material-ui/icons/Close.js");
var ExpandLess_1 = __webpack_require__(/*! @material-ui/icons/ExpandLess */ "../node_modules/@material-ui/icons/ExpandLess.js");
var ExpandMore_1 = __webpack_require__(/*! @material-ui/icons/ExpandMore */ "../node_modules/@material-ui/icons/ExpandMore.js");
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var ReactObject_1 = __webpack_require__(/*! ./core/ReactObject */ "./ui/core/ReactObject.tsx");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Panel_1 = __webpack_require__(/*! ./Panel */ "./ui/Panel.tsx");
var ConstructTrack_1 = __webpack_require__(/*! ./track/ConstructTrack */ "./ui/track/ConstructTrack.ts");
var UIConstants_1 = __webpack_require__(/*! ./UIConstants */ "./ui/UIConstants.ts");
var TrackViewer = /** @class */ (function (_super) {
    __extends(TrackViewer, _super);
    function TrackViewer() {
        var _this = _super.call(this) || this;
        // layout settings
        _this.trackHeaderWidth = 180;
        _this.panelHeaderHeight = 50;
        _this.spacing = {
            x: 5,
            y: 5
        };
        _this.xAxisHeight = 40; // height excluding spacing
        _this.minPanelWidth = 35;
        _this.minTrackHeight = 35;
        _this.panels = new Set();
        _this.tracks = new Array();
        _this.panelEdges = new Array();
        _this.rowOffsetY = 0;
        /**
         * Removes the row from the scene and cleans up resources
         *
         * **Should only be called after closeTrackRow**
         */
        _this.deleteTrack = function (track) {
            _this.deleteRowObject(track.rowObject);
            var i = _this.tracks.indexOf(track);
            if (i !== -1) {
                _this.tracks.splice(i, 1);
            }
        };
        _this.deleteRowObject = function (rowObject) {
            var e_1, _a, e_2, _b, e_3, _c;
            // remove trackRow elements from scene
            _this.grid.remove(rowObject.header);
            _this.grid.remove(rowObject.closeButton);
            _this.grid.remove(rowObject.resizeHandle);
            try {
                // remove track tiles from panels and release resources
                for (var _d = __values(_this.panels), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var panel = _e.value;
                    try {
                        for (var _f = __values(rowObject.trackViews), _g = _f.next(); !_g.done; _g = _f.next()) {
                            var track = _g.value;
                            panel.removeTrackView(track);
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
            try {
                // release track tile resources
                for (var _j = __values(rowObject.trackViews), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var trackView = _k.value;
                    trackView.releaseGPUResources();
                    rowObject.removeTrackView(trackView);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_3) throw e_3.error; }
            }
        };
        /**
         * Removes the panel from the scene and cleans up resources
         *
         * **Should only be called after closePanel**
         */
        _this.deletePanel = function (panel) {
            var e_4, _a, e_5, _b;
            if (!panel.closing) {
                console.warn('cleanupPanel() called before closing the panel');
                _this.closePanel(panel, false);
            }
            // remove from panel list
            if (!_this.panels.has(panel)) {
                console.error('Cleanup executed twice on a panel');
                return;
            }
            _this.panels.delete(panel);
            // stop any active animations on the panel
            Animator_1.default.stop(panel);
            // remove any open cleanupPanel panel callbacks
            Animator_1.default.removeAnimationCompleteCallbacks(panel, 'layoutW', _this.deletePanel);
            // remove the panel from the scene
            _this.grid.remove(panel);
            try {
                // delete track tiles from the track
                // (we can leave them in the scene-graph of the panel and the GC should still cull them all)
                for (var _c = __values(panel.trackViews), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var trackView = _d.value;
                    // destroy the track object
                    trackView.releaseGPUResources();
                    // remove track object from panel
                    panel.remove(trackView);
                    try {
                        // remove track object from all track rows
                        for (var _e = __values(_this.tracks), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var track = _f.value;
                            var rowObject = track.rowObject;
                            rowObject.removeTrackView(trackView);
                        }
                    }
                    catch (e_5_1) { e_5 = { error: e_5_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                        }
                        finally { if (e_5) throw e_5.error; }
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_4) throw e_4.error; }
            }
            panel.releaseGPUResources();
            // strictly we don't need to do this but listener bugs may prevent the GC from clearing the panel
            panel.removeAllListeners(true);
        };
        _this.onAnimationStep = function () {
            var e_6, _a;
            var maxX = 1;
            try {
                for (var _b = __values(_this.panels), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var panel = _c.value;
                    maxX = Math.max(panel.layoutParentX + panel.layoutW, maxX);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
            _this.addPanelButton.layoutParentX = maxX;
        };
        _this.onResize = function (e) {
            _this.applyOverflowLimits();
            _this.layoutTrackRows(false);
        };
        // local state for grid-resizing
        _this._resizingPanels = new Set();
        _this._resizingTracks = new Set();
        _this.render = false;
        // fill parent dimensions
        _this.layoutW = 1;
        _this.layoutH = 1;
        _this.grid = new Rect_1.default(0, 0, [0.9, 0.9, 0.9, 1]); // grid is Rect type for debug display
        _this.grid.render = false;
        _this.add(_this.grid);
        _this.initializeDragPanning();
        _this.initializeGridResizing();
        _this.addPanelButton = new ReactObject_1.default(React.createElement(AddPanelButton, { onClick: function () {
                _this.addPanel({ contig: 'chr1', x0: 0, x1: 249e6 }, true);
            } }), _this.panelHeaderHeight, _this.panelHeaderHeight);
        _this.addPanelButton.x = _this.spacing.x * 0.5;
        _this.addPanelButton.containerStyle = {
            zIndex: 3,
        };
        _this.addPanelButton.layoutParentX = 1;
        _this.addPanelButton.layoutY = -1;
        _this.addPanelButton.y = -_this.xAxisHeight - _this.spacing.x * 0.5;
        _this.grid.add(_this.addPanelButton);
        var leftTrackMask = new ReactObject_1.default(React.createElement("div", { style: {
                backgroundColor: '#fff',
                zIndex: 2,
                width: '100%',
                height: '100%',
            } }), _this.trackHeaderWidth + _this.spacing.x, _this.panelHeaderHeight + _this.xAxisHeight - 0.5 * _this.spacing.y);
        _this.add(leftTrackMask);
        var rightTrackMask = new ReactObject_1.default(React.createElement("div", { style: {
                backgroundColor: '#fff',
                zIndex: 2,
                width: '100%',
                height: '100%',
            } }), _this.panelHeaderHeight + 1.5 * _this.spacing.x, _this.panelHeaderHeight + _this.xAxisHeight - 0.5 * _this.spacing.y);
        rightTrackMask.layoutParentX = 1;
        rightTrackMask.x = -_this.panelHeaderHeight - 1.5 * _this.spacing.x;
        _this.add(rightTrackMask);
        _this.layoutGridContainer();
        window.addEventListener('resize', _this.onResize);
        return _this;
    }
    // track-viewer state deltas
    TrackViewer.prototype.addTrack = function (model, heightPx, animate) {
        var _this = this;
        if (heightPx === void 0) { heightPx = 50; }
        if (animate === void 0) { animate = true; }
        var e_7, _a;
        // create a track and add the header element to the grid
        var track = new Track(model, heightPx, function () {
            _this.layoutTrackRows(true);
        });
        var rowObject = new RowObject(model.name, this.spacing, function () { return _this.closeTrack(track); }, function (h) { return track.heightPx = h; }, function () { return track.heightPx; });
        track.rowObject = rowObject;
        try {
            // add track tile to all panels
            for (var _b = __values(this.panels), _c = _b.next(); !_c.done; _c = _b.next()) {
                var panel = _c.value;
                var trackView = ConstructTrack_1.default(model);
                panel.addTrackView(trackView);
                rowObject.addTrackView(trackView);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_7) throw e_7.error; }
        }
        this.tracks.push(track);
        rowObject.closeButton.layoutParentX = 1;
        rowObject.closeButton.x = -this.spacing.x;
        rowObject.closeButton.w = 50;
        rowObject.header.x = -this.trackHeaderWidth + this.spacing.x * 0.5;
        rowObject.header.w = this.trackHeaderWidth;
        rowObject.resizeHandle.layoutW = 1;
        rowObject.resizeHandle.addInteractionListener('dragstart', function (e) {
            if (e.isPrimary && e.buttonState === 1) {
                e.preventDefault();
                _this.startResizingTrack(track);
            }
        });
        rowObject.resizeHandle.addInteractionListener('dragend', function (e) {
            if (e.isPrimary) {
                e.preventDefault();
                _this.endResizingTrack(track);
            }
        });
        rowObject.setResizable(true);
        this.grid.add(rowObject.header);
        this.grid.add(rowObject.closeButton);
        this.grid.add(rowObject.resizeHandle);
        // first instantaneously the y position of the track and override h to 0
        this.layoutTrackRows(false, rowObject);
        rowObject.h = 0;
        // then animate all the tracks to the new layout
        this.layoutTrackRows(animate);
        return track;
    };
    TrackViewer.prototype.closeTrack = function (track, animate, onComplete) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        if (onComplete === void 0) { onComplete = function () { }; }
        // first set height to 0, when the animation is complete, remove the row's resources
        if (this.tracks.indexOf(track) === -1)
            return; // this trackRow has already been removed
        var trackInternal = track;
        var rowObject = trackInternal.rowObject;
        if (trackInternal.closing) {
            return;
        }
        trackInternal.closing = true;
        rowObject.setResizable(false);
        this.endResizingTrack(track);
        // animate height to 0 and delete the row when complete
        track.heightPx = 0;
        if (animate) {
            Animator_1.default.addAnimationCompleteCallback(rowObject, 'h', function () {
                _this.deleteTrack(track);
                onComplete();
            }, true);
        }
        else {
            Animator_1.default.stop(rowObject);
            this.deleteTrack(track);
            onComplete();
        }
        this.layoutTrackRows(animate);
    };
    TrackViewer.prototype.addPanel = function (location, animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var e_8, _a;
        var edges = this.panelEdges;
        var newColumnIndex = Math.max(edges.length - 1, 0);
        // add a new column edge, overflow the grid so the panel extends off the screen
        if (edges.length === 0)
            edges.push(0);
        var newWidth = newColumnIndex == 0 ? 1 : 1 / newColumnIndex;
        var newEdge = 1 + newWidth;
        edges.push(newEdge);
        // create panel object and add header to the scene graph
        var panel = new Panel_1.default(function (p) { return _this.closePanel(p, true); }, this.spacing, this.panelHeaderHeight, this.xAxisHeight);
        panel.setContig(location.contig);
        panel.setRange(location.x0, location.x1);
        panel.column = newColumnIndex; // @! should use array of panels instead of column field
        panel.layoutH = 1; // fill the full grid height
        this.grid.add(panel);
        // set available contigs to navigate to from the API
        // SiriusApi.getContigsSorted().then((contigs) => panel.setAvailableContigs(contigs));
        panel.setAvailableContigs(['chr1', 'chr2']); // @! temporary
        try {
            // initialize tracks for this panel
            for (var _b = __values(this.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var track = _c.value;
                var trackView = ConstructTrack_1.default(track.model);
                panel.addTrackView(trackView);
                track.rowObject.addTrackView(trackView);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        this.panels.add(panel);
        panel.resizeHandle.addInteractionListener('dragstart', function (e) {
            if (e.isPrimary && e.buttonState === 1) {
                e.preventDefault();
                _this.startResizingPanel(panel);
            }
        });
        panel.resizeHandle.addInteractionListener('dragend', function (e) {
            if (e.isPrimary) {
                e.preventDefault();
                _this.endResizingPanel(panel);
            }
        });
        panel.addEventListener('axisPointerUpdate', function (axisPointers) {
            var e_9, _a;
            try {
                for (var _b = __values(_this.panels), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (p === panel)
                        continue;
                    p.setSecondaryAxisPointers(axisPointers);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        });
        // set initial position
        this.layoutPanels(false, panel);
        // scale the edges down to fit within the grid space
        var multiplier = 1 / newEdge;
        for (var e = 0; e < edges.length; e++) {
            edges[e] *= multiplier;
        }
        this.layoutPanels(animate);
    };
    TrackViewer.prototype.closePanel = function (panel, animate, onComplete) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        if (onComplete === void 0) { onComplete = function () { }; }
        var e_10, _a;
        if (panel.closing) {
            return;
        }
        var edges = this.panelEdges;
        panel.closing = true;
        // if the panel is being resized, stop it
        this.endResizingPanel(panel);
        // remove column from edges
        this.removeColumn(edges, panel.column);
        try {
            // update column indexes of remaining panels
            for (var _b = __values(this.panels), _c = _b.next(); !_c.done; _c = _b.next()) {
                var p = _c.value;
                if (p.column > panel.column) {
                    p.column = p.column - 1;
                }
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        this.layoutPanels(animate);
        // animate panel's width to 0, after which delete the panel
        if (animate) {
            Animator_1.default.addAnimationCompleteCallback(panel, 'layoutW', function () {
                _this.deletePanel(panel);
                onComplete();
            }, true);
            Animator_1.default.springTo(panel, { layoutW: 0 }, UIConstants_1.DEFAULT_SPRING);
        }
        else {
            Animator_1.default.stop(panel);
            this.deletePanel(panel);
            onComplete();
        }
        // clear edges if there's less then 2, this allows edges to be re-initialized
        if (edges.length < 2) {
            edges.length = 0;
        }
    };
    TrackViewer.prototype.getConfiguration = function () {
        var e_11, _a, e_12, _b;
        var panels = new Array();
        try {
            for (var _c = __values(this.panels), _d = _c.next(); !_d.done; _d = _c.next()) {
                var panel = _d.value;
                var width = this.panelEdges[panel.column + 1] - this.panelEdges[panel.column];
                panels.push({
                    location: {
                        contig: panel.contig,
                        x0: panel.x0,
                        x1: panel.x1,
                    },
                    width: width,
                });
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_11) throw e_11.error; }
        }
        var tracks = new Array();
        try {
            for (var _e = __values(this.tracks), _f = _e.next(); !_f.done; _f = _e.next()) {
                var track = _f.value;
                tracks.push({
                    model: track.model,
                    heightPx: track.heightPx,
                });
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_12) throw e_12.error; }
        }
        return {
            panels: panels,
            tracks: tracks,
        };
    };
    TrackViewer.prototype.setConfiguration = function (state) {
        var e_13, _a, e_14, _b, e_15, _c;
        // Panels
        // clear current panels
        var currentPanels = new Set(this.panels);
        try {
            for (var currentPanels_1 = __values(currentPanels), currentPanels_1_1 = currentPanels_1.next(); !currentPanels_1_1.done; currentPanels_1_1 = currentPanels_1.next()) {
                var panel = currentPanels_1_1.value;
                this.closePanel(panel, false);
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (currentPanels_1_1 && !currentPanels_1_1.done && (_a = currentPanels_1.return)) _a.call(currentPanels_1);
            }
            finally { if (e_13) throw e_13.error; }
        }
        // clear current tracks
        var currentTracks = new Set(this.tracks);
        try {
            for (var currentTracks_1 = __values(currentTracks), currentTracks_1_1 = currentTracks_1.next(); !currentTracks_1_1.done; currentTracks_1_1 = currentTracks_1.next()) {
                var track = currentTracks_1_1.value;
                this.closeTrack(track, false);
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (currentTracks_1_1 && !currentTracks_1_1.done && (_b = currentTracks_1.return)) _b.call(currentTracks_1);
            }
            finally { if (e_14) throw e_14.error; }
        }
        // create panels
        for (var i = 0; i < state.panels.length; i++) {
            var panelState = state.panels[i];
            this.addPanel(panelState.location, false);
        }
        // determine what width to set panels that have no width specified
        var unassignedWidthRemaining = 1;
        var unassignedWidthCount = 0;
        for (var i = 0; i < state.panels.length; i++) {
            var panelState = state.panels[i];
            if (panelState.width != null) {
                unassignedWidthRemaining -= panelState.width;
            }
            else {
                unassignedWidthCount++;
            }
        }
        var unassignedWidthPanel = unassignedWidthRemaining / unassignedWidthCount;
        // set panel edges from state widths
        var e = 0;
        for (var i = 0; i < state.panels.length; i++) {
            var panelState = state.panels[i];
            this.panelEdges[i] = e;
            if (panelState.width != null) {
                e += panelState.width;
            }
            else {
                e += unassignedWidthPanel;
            }
        }
        this.layoutPanels(false);
        try {
            // create rows
            for (var _d = __values(state.tracks), _e = _d.next(); !_e.done; _e = _d.next()) {
                var track = _e.value;
                this.addTrack(track.model, track.heightPx, false);
            }
        }
        catch (e_15_1) { e_15 = { error: e_15_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_c = _d.return)) _c.call(_d);
            }
            finally { if (e_15) throw e_15.error; }
        }
        this.layoutTrackRows(false);
    };
    TrackViewer.prototype.getTracks = function () {
        return this.tracks.slice();
    };
    TrackViewer.prototype.getPanels = function () {
        return new Set(this.panels);
    };
    TrackViewer.prototype.layoutPanels = function (animate, singlePanelOnly) {
        var e_16, _a, e_17, _b;
        // count open panels
        var openPanelCount = 0;
        try {
            for (var _c = __values(this.panels), _d = _c.next(); !_d.done; _d = _c.next()) {
                var panel = _d.value;
                if (!panel.closing)
                    openPanelCount++;
            }
        }
        catch (e_16_1) { e_16 = { error: e_16_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_16) throw e_16.error; }
        }
        try {
            // panels are only closable if more than 1 are open
            for (var _e = __values(this.panels), _f = _e.next(); !_f.done; _f = _e.next()) {
                var panel = _f.value;
                panel.closable = openPanelCount > 1;
                panel.setResizable(panel.column < (this.panelEdges.length - 2) && !panel.closing);
                // animate panels to column positions
                if (singlePanelOnly === undefined || (singlePanelOnly === panel)) {
                    var edges = this.panelEdges;
                    var layoutParentX = edges[panel.column];
                    var layoutW = panel.closing ? 0 : edges[panel.column + 1] - edges[panel.column];
                    if (animate) {
                        Animator_1.default.springTo(panel, { layoutParentX: layoutParentX, layoutW: layoutW }, UIConstants_1.DEFAULT_SPRING);
                    }
                    else {
                        Animator_1.default.stop(panel, ['layoutParentX', 'layoutW']);
                        panel.layoutParentX = layoutParentX;
                        panel.layoutW = layoutW;
                    }
                }
            }
        }
        catch (e_17_1) { e_17 = { error: e_17_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_17) throw e_17.error; }
        }
    };
    TrackViewer.prototype.layoutTrackRows = function (animate, singleTrackRowOnly) {
        var e_18, _a;
        var y = 0;
        try {
            for (var _b = __values(this.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var track = _c.value;
                var h = track.heightPx;
                var rowObject = track.rowObject;
                if (singleTrackRowOnly === undefined || (singleTrackRowOnly === rowObject)) {
                    if (animate) {
                        Animator_1.default.springTo(rowObject, { y: y, h: h }, UIConstants_1.DEFAULT_SPRING);
                    }
                    else {
                        Animator_1.default.stop(rowObject, ['y', 'h']);
                        rowObject.y = y + this.rowOffsetY;
                        rowObject.h = h;
                    }
                }
                y += track.heightPx;
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_18) throw e_18.error; }
        }
        // we manually set the grid height since it doesn't automatically wrap to content
        this.grid.h = y + this.spacing.y * 0.5 + this.rowOffsetY;
    };
    /**
     * Remove a column from a set of edges in a physically natural way; the edges either side together as if either side was expanding under spring forces to fill the empty space
     */
    TrackViewer.prototype.removeColumn = function (edges, index) {
        if (index >= edges.length || index < 0)
            return false;
        var leftmostEdge = edges[0];
        var rightmostEdge = edges[edges.length - 1];
        var leftEdge = edges[index];
        var rightEdge = edges[index + 1] || rightmostEdge;
        var lSpan = leftEdge - leftmostEdge;
        var rSpan = rightmostEdge - rightEdge;
        var totalSpan = rSpan + lSpan;
        // determine where the left and right edges should come together
        var relativeMergePoint = totalSpan == 0 ? 0.5 : (lSpan / totalSpan);
        var edgeMergeTarget = relativeMergePoint * (rightEdge - leftEdge) + leftEdge;
        // evenly redistribute all the edges ether side to fill the new space
        var newRSpan = rightmostEdge - edgeMergeTarget;
        var newLSpan = edgeMergeTarget - leftmostEdge;
        var rSpanMultiplier = rSpan == 0 ? 0 : newRSpan / rSpan;
        for (var i = index + 1; i < edges.length; i++) {
            edges[i] = edgeMergeTarget + (edges[i] - rightEdge) * rSpanMultiplier;
        }
        var lSpanMultiplier = newLSpan / lSpan;
        for (var i = 0; i < index; i++) {
            edges[i] = leftmostEdge + (edges[i] - leftmostEdge) * lSpanMultiplier;
        }
        // remove edge from list
        edges.splice(index, 1);
        return true;
    };
    TrackViewer.prototype.onAdded = function () {
        _super.prototype.onAdded.call(this);
        Animator_1.default.addStepCompleteCallback(this.onAnimationStep);
    };
    TrackViewer.prototype.onRemoved = function () {
        _super.prototype.onRemoved.call(this);
        Animator_1.default.removeStepCompleteCallback(this.onAnimationStep);
    };
    TrackViewer.prototype.layoutGridContainer = function () {
        this.grid.x = this.trackHeaderWidth + this.spacing.x * 0.5;
        this.grid.w =
            -this.trackHeaderWidth - this.spacing.x
                - this.addPanelButton.w;
        this.grid.layoutW = 1;
        this.grid.y = this.panelHeaderHeight + this.spacing.y * 0.5 + this.xAxisHeight;
        // (grid height is set dynamically when laying out tracks)
    };
    // limits rowOffsetY to only overflow region
    TrackViewer.prototype.applyOverflowLimits = function () {
        var e_19, _a;
        var maxOffset = 0;
        // determine minOffset from grid overflow
        // assumes grid.h is up to date (requires calling layoutTrackRows(false))
        var trackViewerHeight = this.getComputedHeight();
        var gridViewportHeight = trackViewerHeight - this.grid.y;
        // compute total row-height
        var rowHeight = 0;
        try {
            for (var _b = __values(this.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var row = _c.value;
                rowHeight += row.heightPx;
            }
        }
        catch (e_19_1) { e_19 = { error: e_19_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_19) throw e_19.error; }
        }
        var padding = this.spacing.y;
        var overflow = rowHeight - gridViewportHeight + padding;
        var minOffset = -overflow;
        this.rowOffsetY = Math.min(Math.max(this.rowOffsetY, minOffset), maxOffset);
    };
    TrackViewer.prototype.initializeDragPanning = function () {
        var _this = this;
        var dragStartY = undefined;
        var yOffsetStart = undefined;
        this.addEventListener('dragstart', function (e) {
            dragStartY = e.localY;
            yOffsetStart = _this.rowOffsetY;
        });
        this.addEventListener('dragmove', function (e) {
            if (_this._resizingPanels.size > 0 || _this._resizingTracks.size > 0)
                return;
            var dy = e.localY - dragStartY;
            _this.rowOffsetY = yOffsetStart + dy;
            _this.applyOverflowLimits();
            _this.layoutTrackRows(false);
        });
    };
    /**
     * Setup event listeners to enable resizing of panels and tracks
     */
    TrackViewer.prototype.initializeGridResizing = function () {
        var _this = this;
        var draggedVEdges = {};
        var localY0 = 0;
        this.grid.addInteractionListener('dragstart', function (e) {
            var e_20, _a;
            var resizing = (_this._resizingPanels.size + _this._resizingTracks.size) > 0;
            if (resizing) {
                e.preventDefault();
                e.stopPropagation();
            }
            try {
                for (var _b = __values(_this._resizingPanels), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var panel = _c.value;
                    var i = panel.column + 1;
                    draggedVEdges[i] = {
                        i: i,
                        p0: e.fractionX,
                        e0: _this.panelEdges[i],
                        obj: panel,
                    };
                }
            }
            catch (e_20_1) { e_20 = { error: e_20_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_20) throw e_20.error; }
            }
            if (e.isPrimary && e.buttonState === 1) {
                localY0 = e.localY;
            }
        });
        this.grid.addInteractionListener('dragmove', function (e) {
            var e_21, _a, e_22, _b;
            var resized = false;
            var resizing = (_this._resizingPanels.size + _this._resizingTracks.size) > 0;
            if (resizing) {
                e.preventDefault();
                e.stopPropagation();
            }
            for (var k in draggedVEdges) {
                var s = draggedVEdges[k];
                var dx = e.fractionX - s.p0;
                var gridWidthPx = _this.grid.getComputedWidth();
                var minFWidth = _this.minPanelWidth / gridWidthPx;
                var min = ((_this.panelEdges[s.i - 1] + minFWidth) || 0);
                var max = ((_this.panelEdges[s.i + 1] - minFWidth) || 1);
                _this.panelEdges[s.i] = Math.min(Math.max(s.e0 + dx, min), max);
                try {
                    for (var _c = __values(_this.panels), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var p = _d.value;
                        if ((p.column === s.i) || (p.column === (s.i - 1))) {
                            _this.layoutPanels(false, p);
                        }
                    }
                }
                catch (e_21_1) { e_21 = { error: e_21_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_21) throw e_21.error; }
                }
                resized = true;
            }
            if (e.isPrimary) {
                try {
                    for (var _e = __values(_this._resizingTracks), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var entry = _f.value;
                        var deltaY = e.localY - localY0;
                        entry.track.heightPx = Math.max(entry.initialHeightPx + deltaY, _this.minTrackHeight);
                        resized = true;
                    }
                }
                catch (e_22_1) { e_22 = { error: e_22_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_22) throw e_22.error; }
                }
            }
            if (resized) {
                _this.layoutTrackRows(false);
            }
        });
        this.grid.addInteractionListener('dragend', function (e) {
            // cleanup dragged edges state
            for (var k in draggedVEdges) {
                var s = draggedVEdges[k];
                if (!_this._resizingPanels.has(s.obj)) {
                    delete draggedVEdges[k];
                }
            }
        });
    };
    TrackViewer.prototype.startResizingPanel = function (panel) {
        this._resizingPanels.add(panel);
    };
    TrackViewer.prototype.endResizingPanel = function (panel) {
        this._resizingPanels.delete(panel);
    };
    TrackViewer.prototype.startResizingTrack = function (track) {
        this._resizingTracks.add({
            track: track,
            initialHeightPx: track.heightPx,
        });
    };
    TrackViewer.prototype.endResizingTrack = function (track) {
        var e_23, _a;
        try {
            for (var _b = __values(this._resizingTracks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (entry.track === track) {
                    this._resizingTracks.delete(entry);
                }
            }
        }
        catch (e_23_1) { e_23 = { error: e_23_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_23) throw e_23.error; }
        }
        this.applyOverflowLimits();
        this.layoutTrackRows(false);
    };
    return TrackViewer;
}(Object2D_1.default));
exports.TrackViewer = TrackViewer;
var Track = /** @class */ (function () {
    function Track(model, _heightPx, onHeightChanged) {
        this.model = model;
        this._heightPx = _heightPx;
        this.onHeightChanged = onHeightChanged;
        this.closing = false;
    }
    Object.defineProperty(Track.prototype, "heightPx", {
        get: function () {
            return this._heightPx;
        },
        set: function (v) {
            this._heightPx = v;
            this.onHeightChanged();
        },
        enumerable: true,
        configurable: true
    });
    return Track;
}());
exports.Track = Track;
/**
 * RowObject is a pseudo Object2D used to layout a set of tracks vertically
 * Internal to TrackViewer
 */
var RowObject = /** @class */ (function () {
    function RowObject(title, spacing, onClose, setHeight, getHeight) {
        var _this = this;
        this.spacing = spacing;
        this.onClose = onClose;
        this.setHeight = setHeight;
        this.getHeight = getHeight;
        this.trackViews = new Set();
        this._headerIsExpandedState = undefined;
        this.isExpanded = function () {
            return _this.getHeight() >= RowObject.expandedTrackHeight;
        };
        this._title = title;
        this.header = new ReactObject_1.default();
        this.closeButton = new ReactObject_1.default();
        this.resizeHandle = new Rect_1.default(0, 0, [1, 0, 0, 1]);
        this.resizeHandle.h = this.spacing.y;
        this.resizeHandle.z = 1;
        this.resizeHandle.render = false;
        this.setResizable(false);
        this.updateHeader();
    }
    Object.defineProperty(RowObject.prototype, "y", {
        get: function () { return this._y; },
        set: function (v) { this._y = v; this.layoutY(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowObject.prototype, "h", {
        get: function () { return this._h; },
        set: function (v) {
            this._h = v;
            this.layoutY();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowObject.prototype, "title", {
        get: function () {
            return this._title;
        },
        set: function (v) {
            this._title = v;
            this.updateHeader();
        },
        enumerable: true,
        configurable: true
    });
    RowObject.prototype.setResizable = function (v) {
        this.resizeHandle.cursorStyle = v ? 'row-resize' : null;
        this.resizeHandle.color.set(v ? [0, 1, 0, 1] : [0.3, 0.3, 0.3, 1]);
    };
    RowObject.prototype.addTrackView = function (trackView) {
        this.trackViews.add(trackView);
        this.layoutY();
    };
    RowObject.prototype.removeTrackView = function (trackView) {
        this.trackViews.delete(trackView);
    };
    /**
     * A TrackRow isn't an Object2D so we manually layout track elements with the track row's y and height
     */
    RowObject.prototype.layoutY = function () {
        var e_24, _a;
        // handle
        var handle = this.resizeHandle;
        handle.layoutY = -0.5;
        handle.y = this.y + this.h;
        // header
        this.header.y = this.y + this.spacing.y * 0.5;
        this.header.h = this.h - this.spacing.y;
        this.closeButton.y = this.y + this.spacing.y * 0.5;
        this.closeButton.h = this.h - this.spacing.y;
        try {
            // tiles
            for (var _b = __values(this.trackViews), _c = _b.next(); !_c.done; _c = _b.next()) {
                var trackView = _c.value;
                trackView.y = this.y + this.spacing.y * 0.5;
                trackView.h = this.h - this.spacing.y;
            }
        }
        catch (e_24_1) { e_24 = { error: e_24_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_24) throw e_24.error; }
        }
        // update header if expand / collapse-toggle is out of sync with height
        if (this._headerIsExpandedState !== this.isExpanded()) {
            this.updateHeader();
        }
    };
    RowObject.prototype.updateHeader = function () {
        var _this = this;
        this._headerIsExpandedState = this.isExpanded();
        this.header.content = (React.createElement(TrackHeader, { title: this._title, isExpanded: this._headerIsExpandedState, setExpanded: function (toggle) {
                _this.setHeight(toggle ? RowObject.expandedTrackHeight : RowObject.collapsedTrackHeight);
            } }));
        this.closeButton.content = (React.createElement(TrackCloseButton, { track: this, onClick: function () {
                _this.onClose(_this);
            } }));
    };
    RowObject.expandedTrackHeight = 200;
    RowObject.collapsedTrackHeight = 50;
    return RowObject;
}());
function TrackCloseButton(props) {
    return React.createElement("div", { style: {
            position: 'relative',
            height: '100%',
            width: '100%',
            color: '#e8e8e8',
            overflow: 'hidden',
            userSelect: 'none',
            backgroundColor: '#171615',
            borderRadius: '0px 8px 8px 0px',
        } },
        React.createElement("div", { style: {
                position: 'absolute',
                width: '100%',
                textAlign: 'right',
                top: '50%',
                transform: 'translate(0, -50%)',
            } },
            React.createElement(IconButton_1.default, { onClick: function () { return props.onClick(props.track); }, color: 'inherit' },
                React.createElement(Close_1.default /*colorPrimary='rgb(171, 171, 171)' hoverColor='rgb(255, 255, 255)'*/, null))));
}
function TrackHeader(props) {
    var iconColor = 'rgb(171, 171, 171)';
    var iconHoverColor = 'rgb(255, 255, 255)';
    var iconViewBoxSize = '0 0 32 32';
    var style = {
        marginTop: 8,
        marginLeft: 16,
        color: 'inherit'
    };
    var headerContainerStyle = {
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'flex-start'
    };
    var ArrowElem = props.isExpanded ? ExpandLess_1.default : ExpandMore_1.default;
    var expandArrow = (React.createElement(ArrowElem, { style: style, viewBox: iconViewBoxSize }));
    return React.createElement("div", { style: {
            position: 'relative',
            width: '100%',
            height: '100%',
            color: '#e8e8e8',
            backgroundColor: '#171615',
            borderRadius: '8px 0px 0px 8px',
            fontSize: '15px',
            overflow: 'hidden',
            userSelect: 'none',
        } },
        React.createElement("div", { style: {
                position: 'absolute',
                width: '100%',
                textAlign: 'center',
                top: '50%',
                transform: 'translate(0, -50%)',
            } },
            React.createElement("div", { onClick: function () {
                    props.setExpanded(!props.isExpanded);
                }, style: headerContainerStyle },
                React.createElement(IconButton_1.default, { color: "inherit" }, expandArrow),
                props.title)));
}
function AddPanelButton(props) {
    return React.createElement("div", { style: {
            position: 'relative',
            width: '100%',
            height: '100%',
            color: '#e8e8e8',
            backgroundColor: '#171615',
            borderRadius: '8px 0px 0px 8px',
        } },
        React.createElement("div", { style: {
                position: 'absolute',
                width: '100%',
                textAlign: 'right',
                top: '50%',
                transform: 'translate(0, -50%)',
            } },
            React.createElement(IconButton_1.default, { onClick: props.onClick, color: "inherit" },
                React.createElement(Add_1.default, null))));
}
exports.default = TrackViewer;


/***/ }),

/***/ "./ui/UIConstants.ts":
/*!***************************!*\
  !*** ./ui/UIConstants.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DEFAULT_SPRING_TENSION = 250;
exports.DEFAULT_SPRING = {
    tension: DEFAULT_SPRING_TENSION,
    friction: Math.sqrt(DEFAULT_SPRING_TENSION) * 2,
};


/***/ }),

/***/ "./ui/XAxis.ts":
/*!*********************!*\
  !*** ./ui/XAxis.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Text_1 = __webpack_require__(/*! engine/ui/Text */ "../node_modules/engine/ui/Text.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var XAxis = /** @class */ (function (_super) {
    __extends(XAxis, _super);
    function XAxis(x0, x1, fontSizePx, fontPath, offset, snap, startFrom) {
        if (x0 === void 0) { x0 = 0; }
        if (x1 === void 0) { x1 = 1; }
        if (fontSizePx === void 0) { fontSizePx = 16; }
        if (offset === void 0) { offset = 0; }
        if (snap === void 0) { snap = 1; }
        if (startFrom === void 0) { startFrom = 0; }
        var _this = _super.call(this) || this;
        _this.fontPath = fontPath;
        _this.offset = offset;
        _this.snap = snap;
        _this.startFrom = startFrom;
        _this.maxMajorTicks = 10000; // failsafe to avoid rendering hangs in case of bugs
        _this.minDisplay = -Infinity;
        _this.maxDisplay = Infinity;
        _this.x0 = 0;
        _this.x1 = 1;
        _this._maxTextLength = 4;
        // valid for stable (fontSize, fontPath)
        _this.labelCache = new UsageCache_1.UsageCache();
        _this.createLabel = function (str) {
            var label = new Label(_this.fontPath, str, _this.fontSizePx);
            label.layoutParentY = 1;
            label.z = 0.1;
            label.setMask(_this.clippingMask);
            _this.add(label);
            return label;
        };
        _this.deleteLabel = function (label) {
            label.releaseGPUResources();
            _this.remove(label);
        };
        _this.render = false;
        _this.x0 = x0;
        _this.x1 = x1;
        _this._fontSizePx = fontSizePx;
        _this.labelsNeedUpdate = true;
        _this.clippingMask = new Rect_1.default(0, 0, [0.9, 0.9, 0.9, 1]);
        _this.clippingMask.layoutW = 1;
        _this.clippingMask.layoutH = 1;
        _this.clippingMask.opacity = 0;
        _this.add(_this.clippingMask);
        return _this;
    }
    Object.defineProperty(XAxis.prototype, "maxTextLength", {
        get: function () {
            return this._maxTextLength;
        },
        set: function (v) {
            var change = this._maxTextLength !== v;
            this._maxTextLength = v;
            if (change) {
                this.labelsNeedUpdate = true;
                this.labelCache.removeAll(this.deleteLabel);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XAxis.prototype, "fontSizePx", {
        get: function () {
            return this._fontSizePx;
        },
        set: function (v) {
            this._fontSizePx = v;
            this.labelCache.removeAll(this.deleteLabel);
            this.labelsNeedUpdate = true;
        },
        enumerable: true,
        configurable: true
    });
    XAxis.prototype.setRange = function (x0, x1) {
        this.labelsNeedUpdate = this.labelsNeedUpdate || this.x0 !== x0 || this.x1 !== x1;
        this.x0 = x0;
        this.x1 = x1;
    };
    // override applyTreeTransforms to call updateLabels so that it's applied when world-space layouts are known
    XAxis.prototype.applyTransformToSubNodes = function (root) {
        this.labelsNeedUpdate = this.labelsNeedUpdate || this.computedWidth !== this.lastComputedWidth;
        if (this.labelsNeedUpdate) {
            this.updateLabels();
            this.lastComputedWidth = this.computedWidth;
        }
        _super.prototype.applyTransformToSubNodes.call(this, root);
    };
    XAxis.prototype.updateLabels = function () {
        var _this = this;
        this.labelCache.markAllUnused();
        // guard case where we cannot display anything
        var span = this.x1 - this.x0;
        if (span === 0) {
            this.labelCache.removeUnused(this.deleteLabel);
            return;
        }
        var tickSpacingPx = 80 * 2;
        var rangeWidthPx = this.computedWidth;
        var tickRatio = tickSpacingPx / rangeWidthPx;
        var snap = this.snap;
        // we're dealing in absolute space too much
        // we should convert to absolute space only when displaying text
        // let t0x = tickRatio * range; // x-space location of first tick after 0
        var n = Scalar_1.Scalar.log2(tickRatio * span / snap);
        var lMajor = Math.ceil(n);
        var lMinor = Math.floor(n);
        var a = (n - lMinor); // current mix between lMinor and lMajor
        var transitionSharpness = 5; // from 0 to Infinity
        var minorAlpha = Math.pow((1 - a), transitionSharpness); // exponent is used to sharpen the transition
        var xMajorSpacing = (snap * Math.pow(2, lMajor)); // cannot use bitwise arithmetic because we're limited to 32 bits in js
        var xMinorSpacing = (snap * Math.pow(2, lMinor)) * 2;
        var firstDisplayTick = Math.floor(this.x0 / xMajorSpacing);
        var lastDisplayTick = Math.ceil(this.x1 / xMajorSpacing);
        var ticksRemaining = this.maxMajorTicks;
        var _loop_1 = function (i) {
            ticksRemaining--;
            var xMinor = xMinorSpacing * (i + 0.5);
            var xMajor = xMajorSpacing * i;
            if (xMinor >= this_1.minDisplay && xMinor <= this_1.maxDisplay && isFinite(xMinor)) {
                var minorParentX = (xMinor - this_1.x0 + this_1.offset) / span;
                var str_1 = XAxis.formatValue(xMinor + this_1.startFrom, this_1._maxTextLength);
                var textMinor = this_1.labelCache.get(xMinor + '_' + str_1, function () { return _this.createLabel(str_1); });
                textMinor.layoutParentX = minorParentX;
                textMinor.setColor(0, 0, 0, minorAlpha);
                textMinor.opacity = minorAlpha;
            }
            if (xMajor >= this_1.minDisplay && xMajor <= this_1.maxDisplay && isFinite(xMajor)) {
                var majorParentX = (xMajor - this_1.x0 + this_1.offset) / span;
                var str_2 = XAxis.formatValue(xMajor + this_1.startFrom, this_1._maxTextLength);
                var textMajor = this_1.labelCache.get(xMajor + '_' + str_2, function () { return _this.createLabel(str_2); });
                textMajor.layoutParentX = majorParentX;
                textMajor.setColor(0, 0, 0, 1);
            }
        };
        var this_1 = this;
        for (var i = firstDisplayTick; i <= lastDisplayTick && ticksRemaining > 0; i++) {
            _loop_1(i);
        }
        this.labelCache.removeUnused(this.deleteLabel);
        this.labelsNeedUpdate = false;
    };
    /**
     * Convert a number to a fixed point representation by truncating instead of rounding
     *
     * For example:
     *  - `toFixedTrunc(999.996, 2) => "999.99"`
     *  - `toFixedTrunc(999.996, 5) => "999.99600"`
     *  - `toFixedTrunc(999.996, 0) => "999"`
     */
    XAxis.toFixedTrunc = function (x, decimalPoints) {
        var str = x.toString();
        var pattern = /([\d+-]+)(\.(\d*))?(.*)/;
        var result = pattern.exec(str);
        // if it doesn't match a number pattern then return the .toString() result
        // this catches cases such as Infinity or NaN
        if (result == null) {
            return str;
        }
        // extract pattern parts
        var integerPart = result[1];
        var fractionalPart = result[3];
        var trailingCharacters = result[4];
        // truncate fractional part to show just 'decimalPoints' numbers
        var fractionString = (fractionalPart || '').substring(0, decimalPoints);
        // right-pad with 0s
        for (var i = fractionString.length; i < decimalPoints; i++) {
            fractionString += '0';
        }
        // recompose number
        return integerPart + (fractionString.length > 0 ? '.' + fractionString : '') + trailingCharacters;
    };
    XAxis.formatValue = function (x, maxLength) {
        var str = x.toString();
        if (str.length > maxLength) {
            // if default print of string is too long, try to reduce it with a exponent symbol
            var exp10 = Scalar_1.Scalar.log10(Math.abs(x));
            var expSign = Scalar_1.Scalar.sign(exp10);
            var exp1000Int = Math.floor(Math.abs(exp10 / 3)) * expSign;
            var symbol = XAxis.siPrefixes[exp1000Int.toFixed(0)];
            var reductionFactor = Math.pow(1000, exp1000Int);
            if (symbol === undefined) {
                var exp10Int = Math.floor(Math.abs(exp10)) * expSign;
                symbol = exp10Int <= 3 ? '' : 'e' + exp10Int.toFixed(0);
            }
            var reducedX = x / reductionFactor;
            var reducedXIntStr = Math.floor(reducedX).toFixed(0);
            var dp = maxLength - reducedXIntStr.length - symbol.length - 1;
            var numString = XAxis.toFixedTrunc(reducedX, Math.max(dp, 0));
            str = numString + symbol;
        }
        return str;
    };
    XAxis.siPrefixes = {
        '8': 'Y',
        '7': 'Z',
        '6': 'E',
        '5': 'P',
        '4': 'T',
        '3': 'G',
        '2': 'M',
        '1': 'k',
        '-1': 'm',
        '-2': 'µ',
        '-3': 'n',
        '-4': 'p',
        '-5': 'f',
        '-6': 'a',
        '-7': 'z',
        '-8': 'y',
    };
    return XAxis;
}(Object2D_1.default));
exports.XAxis = XAxis;
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label(fontPath, string, fontSizePx) {
        var _this = _super.call(this) || this;
        var tickHeightPx = 5;
        var tickWidthPx = 1;
        _this.text = new Text_1.default(fontPath, string, fontSizePx);
        _this.text.layoutX = -0.5;
        _this.text.layoutY = -1;
        _this.text.y = -tickHeightPx - 3;
        _this.add(_this.text);
        _this.tick = new Rect_1.default(tickWidthPx, tickHeightPx);
        _this.tick.layoutX = -0.5;
        _this.tick.layoutY = -1;
        _this.tick.transparent = true;
        _this.add(_this.tick);
        _this.render = false;
        _this.setColor(0, 0, 0, 1);
        return _this;
    }
    Label.prototype.setColor = function (r, g, b, a) {
        this.text.color.set([r, g, b, a]);
        this.tick.color.set([r, g, b, a * 0.5]);
    };
    Label.prototype.setMask = function (mask) {
        this.text.mask = mask;
        this.tick.mask = mask;
    };
    Label.prototype.releaseGPUResources = function () {
        this.text.releaseGPUResources();
        this.tick.releaseGPUResources();
    };
    return Label;
}(Object2D_1.default));
exports.default = XAxis;


/***/ }),

/***/ "./ui/core/AppCanvas.tsx":
/*!*******************************!*\
  !*** ./ui/core/AppCanvas.tsx ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*

    AppCanvas
    - Manages frame loop
    - Manages root scene node and coordinate system
    - All coordinates are set in DOM pixel units relative to the canvas (unless marked as otherwise)
    
    - Should split up and move core parts to engine
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(/*! react */ "react");
var GPUDevice_1 = __webpack_require__(/*! engine/rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var RenderPass_1 = __webpack_require__(/*! engine/rendering/RenderPass */ "../node_modules/engine/rendering/RenderPass.js");
var Renderer_1 = __webpack_require__(/*! engine/rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Renderable_1 = __webpack_require__(/*! engine/rendering/Renderable */ "../node_modules/engine/rendering/Renderable.js");
var SharedResources_1 = __webpack_require__(/*! engine/SharedResources */ "../node_modules/engine/SharedResources.js");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var ReactObject_1 = __webpack_require__(/*! ./ReactObject */ "./ui/core/ReactObject.tsx");
var InteractionEvent_1 = __webpack_require__(/*! engine/ui/InteractionEvent */ "../node_modules/engine/ui/InteractionEvent.js");
/**
 * AppCanvas
 * - root scene node and coordinate system
 * - entry point for canvas rendering
 * - emits user interaction events on scene nodes
 */
var AppCanvas = /** @class */ (function (_super) {
    __extends(AppCanvas, _super);
    function AppCanvas(props) {
        var _this = _super.call(this, props) || this;
        _this._reactObjects = new Array();
        _this.pointerEventSupport = 'PointerEvent' in window;
        _this.dragData = {};
        // we use the root node of the document to set the cursor style because it lets us maintain the cursor when dragging beyond the canvas
        _this.cursorTarget = window.document.documentElement;
        _this.activePointers = {};
        _this._cursorStyle = '';
        _this.onPointerEnter = function (e) {
            // enter and leave are special cases in that they don't directly translate into our InteractionEvents
            // we need a special system to handle these
            var interactionData = _this.interactionDataFromEvent(e);
            _this.activePointers[interactionData.pointerId] = {
                interactionData: interactionData,
                sourceEvent: e,
                lastHitNodes: new Set()
            };
            _this.handlePointerChanges();
        };
        _this.onPointerLeave = function (e) {
            var interactionData = _this.interactionDataFromEvent(e);
            delete _this.activePointers[interactionData.pointerId];
            _this.handlePointerChanges();
        };
        _this.onPointerMove = function (e) {
            _this.resetCursor();
            var interactionData = _this.interactionDataFromEvent(e);
            interactionData.buttonChange = -1; // normalize between MouseEvent and PointerEvent
            // update pointer data in activePointers
            if (e.target === _this.canvas) {
                // pointer moving directly over the canvas; ensure this pointer is considered an active pointer
                if (_this.activePointers[interactionData.pointerId] === undefined) {
                    _this.activePointers[interactionData.pointerId] = {
                        interactionData: interactionData,
                        sourceEvent: e,
                        lastHitNodes: new Set()
                    };
                }
                else {
                    _this.activePointers[interactionData.pointerId].interactionData = interactionData;
                }
            }
            else {
                // pointer not directly over the canvas another DOM element may be overlaying
                // this is no longer an active pointer
                delete _this.activePointers[interactionData.pointerId];
            }
            var dragData = _this.dragData[interactionData.pointerId];
            var defaultPrevented = false;
            if (dragData !== undefined) {
                defaultPrevented = defaultPrevented || _this.executePointerInteraction(dragData.inactiveNodes, 'dragstart', interactionData, function (init) {
                    dragData.activeNodes.push(init.target);
                    return new InteractionEvent_1.default(init, e);
                });
                dragData.inactiveNodes = [];
                defaultPrevented = defaultPrevented || _this.executePointerInteraction(dragData.activeNodes, 'dragmove', interactionData, function (init) {
                    return new InteractionEvent_1.default(init, e);
                });
            }
            if (e.target === _this.canvas) {
                if (!defaultPrevented) {
                    var eventName = 'pointermove';
                    var hitNodes = _this.hitTestNodesForInteraction([eventName], interactionData.worldX, interactionData.worldY);
                    _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) {
                        return new InteractionEvent_1.default(init, e);
                    });
                }
            }
            _this.applyCursor();
            _this.handlePointerChanges();
        };
        _this.onPointerDown = function (e) {
            _this.resetCursor();
            if (e.target === _this.canvas) {
                var eventName = 'pointerdown';
                var interactionData = _this.interactionDataFromEvent(e);
                // initialize drag data entry
                var dragData_1 = _this.dragData[interactionData.pointerId] = {
                    activeNodes: new Array(),
                    inactiveNodes: new Array(),
                    button: e.button,
                };
                // we need collect drag event nodes as well as pointerdown receiver to make sure drag events are emitted
                var hitNodes = _this.hitTestNodesForInteraction([eventName, 'dragstart', 'dragmove', 'dragend'], interactionData.worldX, interactionData.worldY).slice();
                _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) {
                    if (dragData_1.inactiveNodes.indexOf(init.target) === -1) {
                        dragData_1.inactiveNodes.push(init.target);
                    }
                    return new InteractionEvent_1.default(init, e);
                });
            }
            _this.applyCursor();
        };
        _this.onPointerUp = function (e) {
            _this.resetCursor();
            var interactionData = _this.interactionDataFromEvent(e);
            var dragData = _this.dragData[interactionData.pointerId];
            var defaultPrevented = false;
            if (dragData !== undefined && dragData.button === e.button) {
                // clear drag data entry
                delete _this.dragData[interactionData.pointerId];
                // fire 'dragend' on any nodes where drag was started
                defaultPrevented = _this.executePointerInteraction(dragData.activeNodes, 'dragend', interactionData, function (init) { return new InteractionEvent_1.default(init, e); }, false);
            }
            if (e.target === _this.canvas) {
                if (!defaultPrevented) {
                    var eventName = 'pointerup';
                    var hitNodes = _this.hitTestNodesForInteraction([eventName], interactionData.worldX, interactionData.worldY);
                    _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) { return new InteractionEvent_1.default(init, e); });
                }
            }
            _this.applyCursor();
        };
        _this.onClick = function (e) {
            if (e.target === _this.canvas) {
                var eventName = 'click';
                var interactionData = _this.interactionDataFromEvent(e);
                var hitNodes = _this.hitTestNodesForInteraction([eventName], interactionData.worldX, interactionData.worldY);
                _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) { return new InteractionEvent_1.default(init, e); });
            }
        };
        _this.onDoubleClick = function (e) {
            if (e.target === _this.canvas) {
                var eventName = 'dblclick';
                var interactionData = _this.interactionDataFromEvent(e);
                var hitNodes = _this.hitTestNodesForInteraction([eventName], interactionData.worldX, interactionData.worldY);
                _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) { return new InteractionEvent_1.default(init, e); });
            }
        };
        _this.onWheel = function (e) {
            if (e.target === _this.canvas) {
                var eventName = 'wheel';
                var interactionData = _this.interactionDataFromEvent(e);
                var hitNodes = _this.hitTestNodesForInteraction([eventName], interactionData.worldX, interactionData.worldY);
                _this.executePointerInteraction(hitNodes, eventName, interactionData, function (init) {
                    return new InteractionEvent_1.WheelInteractionEvent(__assign({}, init, { wheelDeltaMode: e.deltaMode, wheelDeltaX: e.deltaX, wheelDeltaY: e.deltaY, wheelDeltaZ: e.deltaZ }), e);
                });
            }
        };
        _this._hitNodes = new Array(); // micro-optimization: reuse array between events to prevent re-allocation
        _this.state = {
            reactObjects: []
        };
        _this.updateSceneContent();
        return _this;
    }
    AppCanvas.prototype.componentDidMount = function () {
        if (this.device != null) {
            console.error('Component mounted twice');
        }
        var glOptions = {
            antialias: true,
            stencil: true,
            alpha: false,
        };
        var gl = this.canvas.getContext('webgl', glOptions);
        if (gl == null) {
            throw 'WebGL not supported';
        }
        // @! temporary initial GL state for 2D drawing
        // in the future this should be applied to the root 2D node
        gl.enable(gl.DEPTH_TEST);
        gl.depthFunc(gl.LEQUAL);
        gl.disable(gl.CULL_FACE);
        this.device = new GPUDevice_1.default(gl);
        this.renderer = new Renderer_1.default(this.device);
        SharedResources_1.default.initialize(this.device);
        this.addInputListeners();
        console.log("AppCanvas created with device %c\"" + this.device.name + "\"", 'font-weight: bold');
        var vao = this.device.capabilities.vertexArrayObjects;
        var inst = this.device.capabilities.instancing;
        console.log("\tVertex Array Objects: %c" + (vao ? 'enabled' : 'disabled'), "font-weight: bold; color: " + (vao ? 'green' : 'red'));
        console.log("\tInstancing: %c" + (inst ? 'enabled' : 'disabled'), "font-weight: bold; color: " + (inst ? 'green' : 'red'));
        if (!this.device.capabilities.instancing) {
            // support is expected on 100% of desktops and ~95% of mobile devices
            // a work around is possible to reach the final 5% of mobile devices
            throw 'WebGL extension ANGLE_instanced_arrays is required but not available on this device';
        }
    };
    AppCanvas.prototype.componentWillUnmount = function () {
        // for (let node of this.scene)
        this.scene.forEachSubNode(function (node) {
            if (node instanceof Renderable_1.default)
                node.releaseGPUResources();
        });
        SharedResources_1.default.release();
        this.device = null;
        this.renderer = null;
        this.removeInputListeners();
        if (this.props.onWillUnmount) {
            this.props.onWillUnmount();
        }
    };
    AppCanvas.prototype.componentDidUpdate = function (prevProps, prevState, snapshot) {
        if (prevProps.content != this.props.content) {
            this.updateSceneContent();
        }
        if (this.props.width !== prevProps.width ||
            this.props.height !== prevProps.height) {
            this.updateSceneTransform();
            this.scene.applyTransformToSubNodes();
            this.renderer.render(this.mainRenderPass);
        }
    };
    AppCanvas.prototype.render = function () {
        var _this = this;
        var pixelRatio = this.props.pixelRatio || window.devicePixelRatio || 1;
        var canvasWidth = this.props.width * pixelRatio + 'px';
        var canvasHeight = this.props.height * pixelRatio + 'px';
        var style = __assign({ position: 'relative', overflow: 'hidden', width: canvasWidth, height: canvasHeight }, (this.props.style || {}));
        return (React.createElement("div", { className: "app-canvas", style: style },
            React.createElement("canvas", { ref: function (v) { return _this.canvas = v; }, width: canvasWidth, height: canvasHeight, style: __assign({ display: 'block', position: 'absolute', top: 0, left: 0, width: this.props.width + 'px', height: this.props.height + 'px', zIndex: 0 }, (this.props.canvasStyle || {})) }),
            this.state.reactObjects.map(function (ro) { return React.createElement(ReactObject_1.ReactObjectContainer, { key: ro.reactUid, reactObject: ro, scene: _this.scene }); })));
    };
    AppCanvas.prototype.renderCanvas = function () {
        this.renderer.render(this.mainRenderPass);
        this.updateReactObjects();
    };
    AppCanvas.prototype.handleUserInteraction = function () {
        this.handlePointerChanges();
    };
    AppCanvas.prototype.updateSceneContent = function () {
        this.scene = new Object2D_1.Object2D();
        if (this.props.content != null) {
            this.scene.add(this.props.content);
        }
        this.mainRenderPass = new RenderPass_1.default(null, this.scene, {
            clearColor: [1, 1, 1, 1],
            clearDepth: 1,
            clearStencil: 0x00
        });
        this.updateSceneTransform();
        this.scene.applyTransformToSubNodes();
    };
    /**
     * Apply DOM pixel coordinate system to the scene via a transform on the root node
     * - Flip z-axis from default OpenGL coordinates so that 1 = in front the screen and -1 is inside the screen
     * - z coordinates clip outside of -1 to 1
     * - (0, 0) corresponds to the top-left of the canvas
     * - (canvas.clientWidth, canvas.clientHeight) corresponds to the bottom left
     */
    AppCanvas.prototype.updateSceneTransform = function () {
        // width and height should be the _display_ size of the scene in DOM pixel units
        var w_dom = this.props.width;
        var h_dom = this.props.height;
        this.scene.x = -1;
        this.scene.y = 1;
        this.scene.z = 0;
        this.scene.sx = 2 / w_dom;
        this.scene.sy = -2 / h_dom;
        this.scene.sz = -1 * 1 / 5000;
        this.scene.w = w_dom;
        this.scene.h = h_dom;
    };
    /**
     * Given bounds in OpenGL display coordinates (clip-space), return the same bounds in DOM pixel coordinates (relative to the canvas)
     * This applies the inverse of the scene transform
     */
    AppCanvas.prototype.worldToCanvasSpaceBounds = function (worldSpaceBounds) {
        return {
            l: (worldSpaceBounds.l - this.scene.x) / this.scene.sx,
            r: (worldSpaceBounds.r - this.scene.x) / this.scene.sx,
            t: (worldSpaceBounds.t - this.scene.y) / this.scene.sy,
            b: (worldSpaceBounds.b - this.scene.y) / this.scene.sy,
        };
    };
    /**
     * Converts from canvas-space coordinates into clip-space, which is the world-space of Object2D nodes
     */
    AppCanvas.prototype.canvasToWorldSpacePosition = function (canvasSpacePosition) {
        return {
            x: (canvasSpacePosition.x / this.props.width) * 2 - 1,
            y: -((canvasSpacePosition.y / this.props.height) * 2 - 1),
        };
    };
    AppCanvas.prototype.updateReactObjects = function () {
        var _this = this;
        // find all react nodes in the scene
        var reactObjectIndex = 0;
        var reactObjectsChanged = false;
        // for (let node of this.scene)
        this.scene.forEachSubNode(function (node) {
            if (node instanceof ReactObject_1.ReactObject) {
                var last = _this._reactObjects[reactObjectIndex];
                if (!reactObjectsChanged) {
                    reactObjectsChanged = last !== node;
                }
                _this._reactObjects[reactObjectIndex] = node;
                reactObjectIndex++;
            }
        });
        reactObjectsChanged = reactObjectsChanged || (reactObjectIndex !== this._reactObjects.length);
        // trim excess nodes from the previous frame
        if (reactObjectIndex < this._reactObjects.length) {
            this._reactObjects.length = reactObjectIndex;
        }
        // trigger react re-render of viewer if the node list has changed
        if (reactObjectsChanged) {
            this.setState({
                reactObjects: this._reactObjects
            });
        }
    };
    /**
     * Returns the event position relative to the canvas
     */
    AppCanvas.prototype.mouseEventToCanvasSpacePosition = function (e) {
        var x = 0;
        var y = 0;
        var canvasRect = this.canvas.getBoundingClientRect();
        var canvasX = window.scrollX + this.canvas.clientLeft;
        var canvasY = window.scrollY + canvasRect.top;
        x = e.pageX - canvasX;
        y = e.pageY - canvasY;
        return {
            x: x,
            y: y,
        };
    };
    AppCanvas.prototype.addInputListeners = function () {
        if (this.pointerEventSupport) {
            this.canvas.addEventListener('pointerdown', this.onPointerDown);
            window.addEventListener('pointerup', this.onPointerUp);
            window.addEventListener('pointermove', this.onPointerMove);
            window.addEventListener('pointerenter', this.onPointerEnter);
            window.addEventListener('pointerleave', this.onPointerLeave);
        }
        else {
            this.canvas.addEventListener('mousedown', this.onPointerDown);
            window.addEventListener('mouseup', this.onPointerUp);
            window.addEventListener('mousemove', this.onPointerMove);
            window.addEventListener('mouseenter', this.onPointerEnter);
            window.addEventListener('mouseleave', this.onPointerLeave);
        }
        this.canvas.addEventListener('click', this.onClick);
        this.canvas.addEventListener('dblclick', this.onDoubleClick);
        this.canvas.addEventListener('wheel', this.onWheel, { passive: false });
    };
    AppCanvas.prototype.removeInputListeners = function () {
        if (this.pointerEventSupport) {
            this.canvas.removeEventListener('pointerdown', this.onPointerDown);
            window.removeEventListener('pointerup', this.onPointerUp);
            window.removeEventListener('pointermove', this.onPointerMove);
            window.removeEventListener('pointerenter', this.onPointerEnter);
            window.removeEventListener('pointerleave', this.onPointerLeave);
        }
        else {
            this.canvas.removeEventListener('mousedown', this.onPointerDown);
            window.removeEventListener('mouseup', this.onPointerUp);
            window.removeEventListener('mousemove', this.onPointerMove);
            window.removeEventListener('mouseenter', this.onPointerEnter);
            window.removeEventListener('mouseleave', this.onPointerLeave);
        }
        this.canvas.removeEventListener('click', this.onClick);
        this.canvas.removeEventListener('dblclick', this.onDoubleClick);
        this.canvas.removeEventListener('wheel', this.onWheel, { passive: false });
    };
    AppCanvas.prototype.resetCursor = function () {
        this._cursorStyle = null;
    };
    AppCanvas.prototype.applyCursor = function () {
        var newStyle = this._cursorStyle === null ? '' : this._cursorStyle;
        if (this.cursorTarget.style.cursor !== newStyle) {
            this.cursorTarget.style.setProperty('cursor', newStyle, 'important');
        }
    };
    AppCanvas.prototype.handlePointerChanges = function () {
        var _loop_1 = function (pointerId) {
            var inactivePointer = this_1._lastActivePointers[pointerId];
            if (this_1.activePointers[pointerId] === undefined) {
                // pointer became inactive, fire 'pointerleave' on all nodes it was hitting 
                this_1.executePointerInteraction(inactivePointer.lastHitNodes, 'pointerleave', inactivePointer.interactionData, function (init) { return new InteractionEvent_1.default(init, inactivePointer.sourceEvent); });
            }
        };
        var this_1 = this;
        // fire pointerleave for any pointers that are no longer active in this frame
        for (var pointerId in this._lastActivePointers) {
            _loop_1(pointerId);
        }
        // reset lastActivePointers and fill in from active pointers
        this._lastActivePointers = {};
        var _loop_2 = function (pointerId) {
            var e_1, _a, e_2, _b;
            var activePointer = this_2.activePointers[pointerId];
            var interactionData = activePointer.interactionData, lastHitNodes = activePointer.lastHitNodes, sourceEvent = activePointer.sourceEvent;
            var hitNodes = this_2.hitTestNodesForInteraction([
                'pointerenter',
                'pointerleave'
            ], interactionData.worldX, interactionData.worldY);
            this_2._lastActivePointers[pointerId] = activePointer;
            // early exit
            if (hitNodes.length === 0 && lastHitNodes.size === 0) {
                return "continue";
            }
            // find delta since last call
            var addedNodes = new Set();
            var removedNodes = new Set();
            try {
                for (var hitNodes_1 = __values(hitNodes), hitNodes_1_1 = hitNodes_1.next(); !hitNodes_1_1.done; hitNodes_1_1 = hitNodes_1.next()) {
                    var node = hitNodes_1_1.value;
                    if (!lastHitNodes.has(node)) {
                        addedNodes.add(node);
                        lastHitNodes.add(node);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (hitNodes_1_1 && !hitNodes_1_1.done && (_a = hitNodes_1.return)) _a.call(hitNodes_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            try {
                for (var lastHitNodes_1 = __values(lastHitNodes), lastHitNodes_1_1 = lastHitNodes_1.next(); !lastHitNodes_1_1.done; lastHitNodes_1_1 = lastHitNodes_1.next()) {
                    var node = lastHitNodes_1_1.value;
                    if (hitNodes.indexOf(node) === -1) {
                        removedNodes.add(node);
                        lastHitNodes.delete(node);
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (lastHitNodes_1_1 && !lastHitNodes_1_1.done && (_b = lastHitNodes_1.return)) _b.call(lastHitNodes_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
            var totalNodeChange = addedNodes.size + removedNodes.size;
            // early exit
            if (totalNodeChange === 0)
                return "continue";
            this_2.executePointerInteraction(addedNodes, 'pointerenter', interactionData, function (init) { return new InteractionEvent_1.default(init, sourceEvent); });
            this_2.executePointerInteraction(removedNodes, 'pointerleave', interactionData, function (init) { return new InteractionEvent_1.default(init, sourceEvent); });
        };
        var this_2 = this;
        // for all registered pointers:
        for (var pointerId in this.activePointers) {
            _loop_2(pointerId);
        }
    };
    AppCanvas.prototype.hitTestNodesForInteraction = function (interactionEventNames, worldX, worldY) {
        var hitNodeIndex = 0;
        var hitNodes = this._hitNodes;
        this.scene.forEachSubNode(function (node) {
            var e_3, _a;
            if (node instanceof Object2D_1.Object2D) {
                var nodeInternal = node;
                // we can skip this node if we know it doesn't have any interaction behaviors
                var listeners = 0;
                try {
                    for (var interactionEventNames_1 = __values(interactionEventNames), interactionEventNames_1_1 = interactionEventNames_1.next(); !interactionEventNames_1_1.done; interactionEventNames_1_1 = interactionEventNames_1.next()) {
                        var name_1 = interactionEventNames_1_1.value;
                        listeners += nodeInternal.interactionEventListenerCount[name_1];
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (interactionEventNames_1_1 && !interactionEventNames_1_1.done && (_a = interactionEventNames_1.return)) _a.call(interactionEventNames_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                if (node.cursorStyle == null &&
                    listeners <= 0)
                    return;
                var worldSpaceBounds = node.getWorldBounds();
                // hit-test position with object bounds
                if (worldX >= worldSpaceBounds.l &&
                    worldX <= worldSpaceBounds.r &&
                    worldY >= worldSpaceBounds.b &&
                    worldY <= worldSpaceBounds.t) {
                    hitNodes[hitNodeIndex++] = node;
                }
            }
        });
        // trim excess elements from last use
        if (hitNodeIndex < hitNodes.length) {
            hitNodes.length = hitNodeIndex;
        }
        // top-most nodes should receive events first
        hitNodes.sort(this.compareZ);
        return hitNodes;
    };
    AppCanvas.prototype.executePointerInteraction = function (nodes, interactionEventName, interactionData, constructEvent, setCursor) {
        if (setCursor === void 0) { setCursor = true; }
        var e_4, _a;
        var defaultPrevented = false;
        try {
            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
                var node = nodes_1_1.value;
                var nodeInternal = node;
                var worldSpaceBounds = node.getWorldBounds();
                var fx = (interactionData.worldX - worldSpaceBounds.l) / (worldSpaceBounds.r - worldSpaceBounds.l);
                var fy = (interactionData.worldY - worldSpaceBounds.t) / (worldSpaceBounds.b - worldSpaceBounds.t);
                // populate node-specific event fields
                interactionData.target = node;
                interactionData.localX = fx * nodeInternal.computedWidth;
                interactionData.localY = fy * nodeInternal.computedHeight;
                interactionData.fractionX = fx;
                interactionData.fractionY = fy;
                var eventObject = constructEvent(interactionData);
                var eventObjectInternal = eventObject;
                // trigger event on node
                nodeInternal.eventEmitter.emit(interactionEventName, eventObject);
                // update cursor style
                if (setCursor && this._cursorStyle == null && node.cursorStyle != null) {
                    this._cursorStyle = node.cursorStyle;
                }
                defaultPrevented = eventObjectInternal.defaultPrevented || defaultPrevented;
                // if user has executed stopPropagation() then do not emit on subsequent nodes
                if (eventObjectInternal.propagationStopped)
                    break;
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return defaultPrevented;
    };
    AppCanvas.prototype.interactionDataFromEvent = function (e) {
        var canvasSpacePosition = this.mouseEventToCanvasSpacePosition(e);
        var worldSpacePosition = this.canvasToWorldSpacePosition(canvasSpacePosition);
        var interactionData = {
            buttonChange: e.button,
            buttonState: e.buttons,
            altKey: e.altKey,
            ctrlKey: e.ctrlKey,
            shiftKey: e.shiftKey,
            metaKey: e.metaKey,
            canvasX: canvasSpacePosition.x,
            canvasY: canvasSpacePosition.y,
            worldX: worldSpacePosition.x,
            worldY: worldSpacePosition.y,
            // PointerEvent data, defaults to mouse events
            pointerId: -1,
            pointerType: 'mouse',
            isPrimary: true,
            width: 1,
            height: 1,
            pressure: 0,
            tiltX: 0,
            tiltY: 0,
            // node-specific
            target: null,
            localX: 0,
            localY: 0,
            fractionX: 0,
            fractionY: 0,
        };
        // set pointer event data if it's available
        if (this.pointerEventSupport && e instanceof PointerEvent) {
            interactionData.pointerId = e.pointerId;
            interactionData.pointerType = e.pointerType;
            interactionData.isPrimary = e.isPrimary;
            interactionData.width = e.width;
            interactionData.height = e.height;
            interactionData.pressure = e.pressure;
            interactionData.tiltX = e.tiltX;
            interactionData.tiltY = e.tiltY;
        }
        return interactionData;
    };
    AppCanvas.prototype.compareZ = function (a, b) {
        return a.getWorldZ() - b.getWorldZ();
    };
    return AppCanvas;
}(React.Component));
exports.AppCanvas = AppCanvas;
exports.default = AppCanvas;


/***/ }),

/***/ "./ui/core/ReactObject.tsx":
/*!*********************************!*\
  !*** ./ui/core/ReactObject.tsx ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var React = __webpack_require__(/*! react */ "react");
var ReactObject = /** @class */ (function (_super) {
    __extends(ReactObject, _super);
    function ReactObject(content, w, h) {
        var _this = _super.call(this) || this;
        _this.render = false;
        _this.reactUid = ReactObject.uidCounter++;
        _this._content = content;
        if (w != null)
            _this.w = w;
        if (h != null)
            _this.h = h;
        return _this;
    }
    Object.defineProperty(ReactObject.prototype, "content", {
        get: function () { return this._content; },
        set: function (n) { this._content = n; this.eventEmitter.emit('setContent', n); },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    Object.defineProperty(ReactObject.prototype, "containerStyle", {
        get: function () { return this._containerStyle; },
        set: function (style) { this._containerStyle = style; this.eventEmitter.emit('setContent', this._content); },
        enumerable: true,
        configurable: true
    });
    ;
    ;
    ReactObject.prototype.addSetContentListener = function (listener) {
        this.eventEmitter.addListener('setContent', listener);
    };
    ReactObject.prototype.removeSetContentListener = function (listener) {
        this.eventEmitter.removeListener('setContent', listener);
    };
    ReactObject.prototype.addWorldTransformUpdatedListener = function (listener) {
        this.eventEmitter.addListener('worldTransformUpdated', listener);
    };
    ReactObject.prototype.removeWorldTransformUpdatedListener = function (listener) {
        this.eventEmitter.removeListener('worldTransformUpdated', listener);
    };
    ReactObject.prototype.applyWorldTransform = function (transform) {
        _super.prototype.applyWorldTransform.call(this, transform);
        this.eventEmitter.emit('worldTransformUpdated', this.worldTransformMat4, this.computedWidth, this.computedHeight);
    };
    ReactObject.uidCounter = 0;
    return ReactObject;
}(Object2D_1.default));
exports.ReactObject = ReactObject;
var ReactObjectContainer = /** @class */ (function (_super) {
    __extends(ReactObjectContainer, _super);
    function ReactObjectContainer(props) {
        var _this = _super.call(this, props) || this;
        _this.updateTransformState = function (worldTransform, computedWidth, computedHeight) {
            _this.setState({
                worldTransform: worldTransform,
                computedWidth: computedWidth,
                computedHeight: computedHeight
            });
        };
        _this.updateContentState = function (content) {
            _this.setState({
                content: content
            });
        };
        var reactObjectInternal = props.reactObject;
        _this.state = {
            content: props.reactObject.content,
            worldTransform: reactObjectInternal.worldTransformMat4,
            computedWidth: reactObjectInternal.computedWidth,
            computedHeight: reactObjectInternal.computedHeight,
            style: props.reactObject.containerStyle,
        };
        return _this;
    }
    ReactObjectContainer.prototype.componentDidMount = function () {
        this.props.reactObject.addWorldTransformUpdatedListener(this.updateTransformState);
        this.props.reactObject.addSetContentListener(this.updateContentState);
    };
    ReactObjectContainer.prototype.componentWillUnmount = function () {
        this.props.reactObject.removeWorldTransformUpdatedListener(this.updateTransformState);
        this.props.reactObject.removeSetContentListener(this.updateContentState);
    };
    ReactObjectContainer.prototype.render = function () {
        var scene = this.props.scene;
        var w = this.state.worldTransform;
        // apply inverse scene transform to convert clips-space world coordinates to DOM pixels
        var x = (w[12] - scene.x) / scene.sx;
        var y = (w[13] - scene.y) / scene.sy;
        var z = (w[14] - scene.z) / scene.sz;
        var sx = w[0] / scene.sx;
        var sy = w[5] / scene.sy;
        var sz = w[10] / scene.sz;
        return React.createElement("div", { className: "react-object-container", style: __assign({}, this.state.style, { position: 'absolute', transform: "matrix3d(\n                    " + sx + " , 0     , 0     , 0 ,\n                    0     , " + sy + " , 0     , 0 ,\n                    0     , 0     , " + sz + " , 0 ,\n                    " + x + "  , " + y + "  , " + z + "  , 1\n                )", width: this.state.computedWidth, height: this.state.computedHeight }) }, this.state.content);
    };
    return ReactObjectContainer;
}(React.Component));
exports.ReactObjectContainer = ReactObjectContainer;
exports.default = ReactObject;


/***/ }),

/***/ "./ui/core/index.ts":
/*!**************************!*\
  !*** ./ui/core/index.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./AppCanvas */ "./ui/core/AppCanvas.tsx"));
__export(__webpack_require__(/*! ./ReactObject */ "./ui/core/ReactObject.tsx"));


/***/ }),

/***/ "./ui/font/Fonts.ts":
/*!**************************!*\
  !*** ./ui/font/Fonts.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenSansRegular = __webpack_require__(/*! ./OpenSans-Regular.msdf.bin */ "./ui/font/OpenSans-Regular.msdf.bin");


/***/ }),

/***/ "./ui/font/OpenSans-Regular.msdf.bin":
/*!*******************************************!*\
  !*** ./ui/font/OpenSans-Regular.msdf.bin ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:application/octet-stream;base64,"

/***/ }),

/***/ "./ui/font/index.ts":
/*!**************************!*\
  !*** ./ui/font/index.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./Fonts */ "./ui/font/Fonts.ts"));


/***/ }),

/***/ "./ui/index.ts":
/*!*********************!*\
  !*** ./ui/index.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./core */ "./ui/core/index.ts"));
__export(__webpack_require__(/*! ./font */ "./ui/font/index.ts"));
__export(__webpack_require__(/*! ./track */ "./ui/track/index.ts"));
__export(__webpack_require__(/*! ./Panel */ "./ui/Panel.tsx"));
__export(__webpack_require__(/*! ./TrackViewer */ "./ui/TrackViewer.tsx"));
__export(__webpack_require__(/*! ./UIConstants */ "./ui/UIConstants.ts"));
__export(__webpack_require__(/*! ./XAxis */ "./ui/XAxis.ts"));


/***/ }),

/***/ "./ui/track/AnnotationTrack.ts":
/*!*************************************!*\
  !*** ./ui/track/AnnotationTrack.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Strand_1 = __webpack_require__(/*! genomics-formats/dist/gff3/Strand */ "../node_modules/genomics-formats/dist/gff3/Strand.js");
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var AnnotationTileStore_1 = __webpack_require__(/*! ../../tile-store/AnnotationTileStore */ "./tile-store/AnnotationTileStore.ts");
var SharedTileStores_1 = __webpack_require__(/*! ../../tile-store/SharedTileStores */ "./tile-store/SharedTileStores.ts");
var TileStore_1 = __webpack_require__(/*! ../../tile-store/TileStore */ "./tile-store/TileStore.ts");
var AnnotationTileset_1 = __webpack_require__(/*! ../../model/AnnotationTileset */ "./model/AnnotationTileset.ts");
var Renderer_1 = __webpack_require__(/*! engine/rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Text_1 = __webpack_require__(/*! engine/ui/Text */ "../node_modules/engine/ui/Text.js");
var Fonts_1 = __webpack_require__(/*! ../font/Fonts */ "./ui/font/Fonts.ts");
var BaseTrack_1 = __webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts");
var IntervalInstances_1 = __webpack_require__(/*! ./util/IntervalInstances */ "./ui/track/util/IntervalInstances.ts");
var valis_2 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
/**
 * WIP Annotation tracks:
 *
 * Todo:
 * - Convert micro-scale annotations to use instancing (and text batching)
 * - Merge shaders where possible and clean up
 */
var AnnotationTrack = /** @class */ (function (_super) {
    __extends(AnnotationTrack, _super);
    function AnnotationTrack(model) {
        var _this = _super.call(this, model) || this;
        _this.macroLodBlendRange = 2;
        _this.macroLodThresholdLow = 10;
        _this.macroLodThresholdHigh = _this.macroLodThresholdLow + _this.macroLodBlendRange;
        _this.namesLodBlendRange = 2;
        _this.namesLodThresholdLow = 9;
        _this.namesLodThresholdHigh = _this.namesLodThresholdLow + _this.namesLodBlendRange;
        _this.pointerState = {
            pointerOver: false,
        };
        _this._macroTileCache = new UsageCache_1.default();
        _this._annotationCache = new UsageCache_1.default();
        _this._onStageAnnotations = new UsageCache_1.default();
        _this.addAnnotation = function (annotation) {
            _this.add(annotation);
        };
        _this.removeAnnotation = function (annotation) {
            _this.remove(annotation);
        };
        _this.deleteAnnotation = function (annotation) {
            annotation.releaseGPUResources();
            annotation.forEachSubNode(function (sub) {
                sub.releaseGPUResources();
            });
        };
        _this.annotationKey = function (feature) {
            return feature.soClass + '\x1F' + feature.name + '\x1F' + feature.startIndex + '\x1F' + feature.length;
        };
        _this.color.set([0.1, 0.1, 0.1, 1]);
        _this.addInteractionListener('pointerenter', function (e) {
            _this.pointerState.pointerOver = true;
        });
        _this.addInteractionListener('pointerleave', function (e) {
            _this.pointerState.pointerOver = false;
        });
        return _this;
    }
    AnnotationTrack.prototype.setContig = function (contig) {
        this.annotationStore = SharedTileStores_1.default.getTileStore('annotation', contig, function (c) { return new AnnotationTileStore_1.AnnotationTileStore(c); });
        this.macroAnnotationStore = SharedTileStores_1.default.getTileStore('macroAnnotation', contig, function (c) { return new AnnotationTileStore_1.MacroAnnotationTileStore(c); });
        _super.prototype.setContig.call(this, contig);
    };
    AnnotationTrack.prototype.updateDisplay = function () {
        this._pendingTiles.markAllUnused();
        this._onStageAnnotations.markAllUnused();
        var x0 = this.x0;
        var x1 = this.x1;
        var span = x1 - x0;
        var widthPx = this.getComputedWidth();
        if (widthPx > 0) {
            var basePairsPerDOMPixel = (span / widthPx);
            var continuousLodLevel = Scalar_1.Scalar.log2(Math.max(basePairsPerDOMPixel, 1));
            var macroOpacity = Scalar_1.Scalar.linstep(this.macroLodThresholdLow, this.macroLodThresholdHigh, continuousLodLevel);
            var microOpacity = 1.0 - macroOpacity;
            if (microOpacity > 0) {
                this.updateMicroAnnotations(x0, x1, span, basePairsPerDOMPixel, continuousLodLevel, microOpacity);
            }
            if (macroOpacity > 0) {
                this.updateMacroAnnotations(x0, x1, span, basePairsPerDOMPixel, macroOpacity);
            }
        }
        this._pendingTiles.removeUnused(this.removeTileLoadingDependency);
        this._onStageAnnotations.removeUnused(this.removeAnnotation);
        this.toggleLoadingIndicator(this._pendingTiles.count > 0, true);
        this.displayNeedUpdate = false;
    };
    AnnotationTrack.prototype.updateMacroAnnotations = function (x0, x1, span, samplingDensity, opacity) {
        var _this = this;
        this.macroAnnotationStore.getTiles(x0, x1, samplingDensity, true, function (tile) {
            if (tile.state !== TileStore_1.TileState.Complete) {
                // if the tile is incomplete then wait until complete and call updateAnnotations() again
                _this._pendingTiles.get(_this.contig + ':' + tile.key, function () { return _this.createTileLoadingDependency(tile); });
                return;
            }
            // Instance Rendering
            var tileObject = _this._macroTileCache.get(_this.contig + ':' + tile.key, function () {
                var e_1, _a;
                // initialize macro gene instances
                // create array of gene annotation data
                var instanceData = new Array();
                var nonCodingColor = [82 / 0xff, 75 / 0xff, 165 / 0xff, 0.4];
                var codingColor = [26 / 0xff, 174 / 0xff, 222 / 0xff, 0.4];
                try {
                    for (var _b = __values(tile.payload), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var gene = _c.value;
                        if (gene.strand !== _this.model.strand)
                            continue;
                        var color = gene.class === AnnotationTileset_1.GeneClass.NonProteinCoding ? nonCodingColor : codingColor;
                        var height = gene.transcriptCount * 20 + (gene.transcriptCount - 1) * 10 + 60;
                        instanceData.push({
                            xFractional: (gene.startIndex - tile.x) / tile.span,
                            y: 0,
                            z: 0,
                            wFractional: gene.length / tile.span,
                            h: height,
                            color: color,
                        });
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                var geneInstances = new IntervalInstances_1.default(instanceData);
                geneInstances.y = 0;
                geneInstances.z = 0.75;
                geneInstances.mask = _this;
                return geneInstances;
            });
            tileObject.layoutParentX = (tile.x - x0) / span;
            tileObject.layoutW = tile.span / span;
            tileObject.opacity = opacity;
            _this._onStageAnnotations.get('macro-gene-tile:' + _this.contig + ':' + tile.key, function () {
                _this.addAnnotation(tileObject);
                return tileObject;
            });
        });
    };
    AnnotationTrack.prototype.updateMicroAnnotations = function (x0, x1, span, samplingDensity, continuousLodLevel, opacity) {
        var _this = this;
        var namesOpacity = 1.0 - Scalar_1.Scalar.linstep(this.namesLodThresholdLow, this.namesLodThresholdHigh, continuousLodLevel);
        this.annotationStore.getTiles(x0, x1, samplingDensity, true, function (tile) {
            var e_2, _a;
            if (tile.state !== TileStore_1.TileState.Complete) {
                // if the tile is incomplete then wait until complete and call updateAnnotations() again
                _this._pendingTiles.get(_this.contig + ':' + tile.key, function () { return _this.createTileLoadingDependency(tile); });
                return;
            }
            var _loop_1 = function (gene) {
                // @! temp performance hack, only use node when visible
                // (don't need to do this when using instancing)
                {
                    if (!(gene.startIndex <= x1 && (gene.startIndex + gene.length) >= x0))
                        return "continue";
                }
                // apply gene filter
                if (gene.strand !== _this.model.strand)
                    return "continue";
                var annotationKey = _this.contig + ':' + _this.annotationKey(gene);
                var annotation = _this._annotationCache.get(annotationKey, function () {
                    // create
                    var object = new GeneAnnotation(gene, _this.pointerState);
                    object.y = 40;
                    object.layoutH = 0;
                    object.z = 1 / 4;
                    object.mask = _this;
                    object.forEachSubNode(function (sub) { return sub.mask = _this; });
                    return object;
                });
                annotation.nameOpacity = namesOpacity;
                _this._onStageAnnotations.get(annotationKey, function () {
                    _this.addAnnotation(annotation);
                    return annotation;
                });
                annotation.layoutParentX = (gene.startIndex - x0) / span;
                annotation.layoutW = (gene.length) / span;
                annotation.opacity = opacity;
            };
            try {
                for (var _b = __values(tile.payload), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var gene = _c.value;
                    _loop_1(gene);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        });
    };
    return AnnotationTrack;
}(BaseTrack_1.default));
exports.AnnotationTrack = AnnotationTrack;
var GeneAnnotation = /** @class */ (function (_super) {
    __extends(GeneAnnotation, _super);
    function GeneAnnotation(gene, trackPointerState) {
        var _this = _super.call(this) || this;
        _this.gene = gene;
        _this._opacity = 1;
        _this.onTranscriptClick = function (transcript) {
            if (_this.gene.name == null) {
                console.warn("Cannot search for a gene with no name", _this.gene);
                return;
            }
            // we want to directly open the details view of the entity here
            // @to-do After we switch to use the /reference API
            // 1. Directly use id of the entity data (no query needed), similar to VariantTrack
            // 2. Open gene details when clicking on gene, transcript details when clicking transcript, exon details when clicking exon
            var builder = new valis_1.QueryBuilder();
            builder.newGenomeQuery();
            builder.filterName(_this.gene.name.toUpperCase());
            builder.setLimit(1);
            var geneQuery = builder.build();
            valis_2.SiriusApi.getQueryResults(geneQuery, false).then(function (results) {
                if (results.data.length > 0) {
                    var entity = results.data[0];
                    console.log('@! todo: transcript clicked', entity);
                }
                else {
                    // this is a temporary solution
                    alert("Data not found");
                }
            });
        };
        /**
        let spanMarker = new TranscriptSpan(gene.strand);
        spanMarker.color.set([138 / 0xFF, 136 / 0xFF, 191 / 0xFF, 0.38]);
        spanMarker.layoutW = 1;
        spanMarker.h = 10;
        spanMarker.transparent = true;
        this.add(spanMarker);
        InteractiveStyling.colorFromElement('gene', spanMarker.color);
        /**/
        _this.name = new Text_1.default(Fonts_1.OpenSansRegular, gene.name, 16, [1, 1, 1, 1]);
        _this.name.layoutY = -1;
        _this.name.y = -5;
        _this.add(_this.name);
        var transcriptOffset = 5;
        var transcriptHeight = 20;
        var transcriptSpacing = 10;
        for (var i = 0; i < gene.transcripts.length; i++) {
            var transcript = gene.transcripts[i];
            var transcriptAnnotation = new TranscriptAnnotation(transcript, gene.strand, _this.onTranscriptClick, trackPointerState);
            transcriptAnnotation.h = transcriptHeight;
            transcriptAnnotation.y = i * (transcriptHeight + transcriptSpacing) + transcriptOffset;
            transcriptAnnotation.layoutParentX = (transcript.startIndex - gene.startIndex) / gene.length;
            transcriptAnnotation.layoutW = transcript.length / gene.length;
            _this.add(transcriptAnnotation);
        }
        return _this;
    }
    Object.defineProperty(GeneAnnotation.prototype, "opacity", {
        get: function () {
            return this._opacity;
        },
        set: function (v) {
            var e_3, _a;
            this._opacity = v;
            try {
                for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    child.opacity = v;
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeneAnnotation.prototype, "nameOpacity", {
        get: function () {
            return this.name.color[3];
        },
        set: function (v) {
            this.name.color[3] = v;
            this.name.visible = v >= 0;
        },
        enumerable: true,
        configurable: true
    });
    return GeneAnnotation;
}(Object2D_1.default));
var TranscriptAnnotation = /** @class */ (function (_super) {
    __extends(TranscriptAnnotation, _super);
    function TranscriptAnnotation(transcript, strand, onClick, trackPointerState) {
        var _a, e_4, _b, e_5, _c;
        var _this = _super.call(this) || this;
        _this.transcript = transcript;
        _this._opacity = 1;
        var transcriptColor = (_a = {},
            _a[AnnotationTileset_1.TranscriptClass.Unspecified] = [0.5, 0.5, 0.5, 0.25],
            _a[AnnotationTileset_1.TranscriptClass.ProteinCoding] = [1, 0, 1, 0.25],
            _a[AnnotationTileset_1.TranscriptClass.NonProteinCoding] = [0, 1, 1, 0.25],
            _a);
        var backgroundColor = [107 / 0xff, 109 / 0xff, 136 / 0xff, 0.17]; // rgba(107, 109, 136, 0.17)
        var passiveOpacity = backgroundColor[3];
        var hoverOpacity = passiveOpacity * 3;
        var background = new Rect_1.Rect(0, 0, backgroundColor);
        background.cursorStyle = 'pointer';
        background.z = 0;
        background.transparent = true;
        background.layoutW = 1;
        background.layoutH = 1;
        _this.add(background);
        // highlight on mouse-over
        var springStrength = 300;
        background.addInteractionListener('pointermove', function (e) {
            if (trackPointerState.pointerOver) {
                background.cursorStyle = 'pointer';
                Animator_1.default.springTo(background.color, { 3: hoverOpacity }, springStrength);
            }
            else {
                background.cursorStyle = null;
                Animator_1.default.springTo(background.color, { 3: passiveOpacity }, springStrength);
            }
        });
        background.addInteractionListener('pointerleave', function () {
            background.cursorStyle = null;
            Animator_1.default.springTo(background.color, { 3: passiveOpacity }, springStrength);
        });
        // callback on click
        background.addInteractionListener('pointerup', function (e) {
            if (trackPointerState.pointerOver && e.isPrimary) {
                e.preventDefault();
                e.stopPropagation();
                onClick(transcript);
            }
        });
        /**/
        var spanMarker = new TranscriptSpan(strand);
        spanMarker.color.set([138 / 0xFF, 136 / 0xFF, 191 / 0xFF, 0.38]);
        spanMarker.h = 10;
        spanMarker.layoutW = 1;
        spanMarker.layoutY = -0.5;
        spanMarker.layoutParentY = 0.5;
        spanMarker.z = 0.1;
        spanMarker.transparent = true;
        _this.add(spanMarker);
        try {
            /**/
            // create exons
            for (var _d = __values(transcript.exon), _e = _d.next(); !_e.done; _e = _d.next()) {
                var exonInfo = _e.value;
                var exon = new Exon();
                exon.z = 0.25;
                exon.layoutH = 1;
                exon.layoutParentX = (exonInfo.startIndex - transcript.startIndex) / transcript.length;
                exon.layoutW = exonInfo.length / transcript.length;
                _this.add(exon);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_b = _d.return)) _b.call(_d);
            }
            finally { if (e_4) throw e_4.error; }
        }
        try {
            // create untranslated regions
            for (var _f = __values(transcript.utr), _g = _f.next(); !_g.done; _g = _f.next()) {
                var utrInfo = _g.value;
                var utr = new UTR();
                utr.z = 0.5;
                utr.layoutH = 1;
                utr.layoutParentX = (utrInfo.startIndex - transcript.startIndex) / transcript.length;
                utr.layoutW = utrInfo.length / transcript.length;
                _this.add(utr);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
            }
            finally { if (e_5) throw e_5.error; }
        }
        // create protein coding sequences
        // ! assuming CDS array is sorted from startIndex
        var reverse = strand === Strand_1.Strand.Negative;
        var mRnaIndex = 0; // track offset within RNA sequence after splicing
        for (var k = 0; k < transcript.cds.length; k++) {
            // if on negative strand, iterate in reverse
            var i = reverse ? ((transcript.cds.length - 1) - k) : k;
            var cdsInfo = transcript.cds[i];
            var cds = new CDS(cdsInfo.length, cdsInfo.phase, strand, mRnaIndex);
            cds.z = 0.75;
            cds.layoutH = 1;
            cds.layoutParentX = (cdsInfo.startIndex - transcript.startIndex) / transcript.length;
            cds.layoutW = cdsInfo.length / transcript.length;
            _this.add(cds);
            mRnaIndex += cdsInfo.length;
        }
        return _this;
    }
    Object.defineProperty(TranscriptAnnotation.prototype, "opacity", {
        get: function () {
            return this._opacity;
        },
        set: function (v) {
            var e_6, _a;
            this._opacity = v;
            try {
                for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    child.opacity = v;
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_6) throw e_6.error; }
            }
        },
        enumerable: true,
        configurable: true
    });
    return TranscriptAnnotation;
}(Object2D_1.default));
var Exon = /** @class */ (function (_super) {
    __extends(Exon, _super);
    function Exon() {
        var _this = _super.call(this, 0, 0) || this;
        _this.color.set([82 / 0xff, 75 / 0xff, 165 / 0xff, 0.3]); // rgba(82, 75, 165, 0.3)
        _this.transparent = true;
        return _this;
    }
    Exon.prototype.draw = function (context) {
        _super.prototype.draw.call(this, context);
    };
    Exon.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision highp float;\n\n            uniform vec2 size;\n\n            uniform vec4 color;\n\n            varying vec2 vUv;\n\n            void main() {\n                vec2 domPx = vUv * size;\n\n                const vec2 borderWidthPx = vec2(1.);\n                const float borderStrength = 0.3;\n\n                vec2 inner = step(borderWidthPx, domPx) * step(domPx, size - borderWidthPx);\n                float border = inner.x * inner.y;\n\n                vec4 c = color;\n                c.rgb += (1.0 - border) * vec3(borderStrength);\n\n                gl_FragColor = vec4(c.rgb, 1.0) * c.a;\n            }\n        ";
    };
    return Exon;
}(Rect_1.Rect));
var UTR = /** @class */ (function (_super) {
    __extends(UTR, _super);
    function UTR() {
        var _this = _super.call(this, 0, 0) || this;
        _this.color.set([138 / 0xff, 136 / 0xff, 191 / 0xff, 0.38]); // rgba(138, 136, 191, 0.38)
        _this.transparent = true;
        return _this;
    }
    UTR.prototype.draw = function (context) {
        context.uniform1f('pixelRatio', this.worldTransformMat4[0] * context.viewport.w * 0.5);
        _super.prototype.draw.call(this, context);
    };
    UTR.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision highp float;\n\n            uniform vec2 size;\n            uniform vec4 color;\n            uniform float pixelRatio;\n\n            varying vec2 vUv;\n\n            void main() {\n                vec2 domPx = vUv * size;\n\n                const vec2 borderWidthPx = vec2(1.);\n\n                vec2 inner = step(borderWidthPx, domPx) * step(domPx, size - borderWidthPx);\n                float border = inner.x * inner.y;\n\n                // crosshatch\n                const float angle = -0.520;\n                const float widthPx = 2.;\n                const float wavelengthPx = 7.584;\n                const float lineStrength = 0.25;\n\n                vec2 centerPx = domPx - size * 0.5;\n\n                float lPx = centerPx.x * cos(angle) - centerPx.y * sin(angle);\n                // not antialiased but looks good enough with current color scheme\n                float lines = step(widthPx, mod(lPx, wavelengthPx)) * lineStrength + (1. - lineStrength);\n\n                vec4 c = color;\n                c.rgb += (1.0 - border * lines) * vec3(0.3);\n\n                gl_FragColor = vec4(c.rgb, 1.0) * c.a;\n            }\n        ";
    };
    return UTR;
}(Rect_1.Rect));
var CDS = /** @class */ (function (_super) {
    __extends(CDS, _super);
    function CDS(length_bases, phase, // number of bases to substract from start to reach first complete codon
    strand, mRnaIndex) {
        var _this = _super.call(this, 0, 0) || this;
        _this.length_bases = length_bases;
        _this.phase = phase;
        var defaultStartTone = phase > 0 ? 1 : 0;
        // we determine which 'tone' the first codon is by its position in the mRNA sequence (after splicing)
        var startTone = Math.floor(mRnaIndex / 3) % 2; // 0 = A, 1 = B
        // if necessary swap start tone by offsetting phase
        if (defaultStartTone !== startTone) {
            _this.phase += 3;
        }
        _this.reverse = strand === Strand_1.Strand.Negative ? 1.0 : 0.0;
        _this.color.set([26 / 0xff, 174 / 0xff, 222 / 0xff, 0.58]); // rgba(26, 174, 222, 0.58)
        _this.transparent = true;
        _this.blendMode = Renderer_1.BlendMode.PREMULTIPLIED_ALPHA;
        return _this;
    }
    CDS.prototype.draw = function (context) {
        context.uniform1f('baseWidthPx', (this.computedWidth / this.length_bases));
        context.uniform1f('phase', this.phase || 0);
        context.uniform1f('reverse', this.reverse);
        context.uniform1f('pixelRatio', this.worldTransformMat4[0] * context.viewport.w * 0.5);
        _super.prototype.draw.call(this, context);
    };
    CDS.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision highp float;\n\n            uniform vec2 size;\n\n            uniform float pixelRatio;\n            uniform float baseWidthPx;\n            uniform float phase;\n            uniform float reverse;\n\n            uniform vec4 color;\n\n            varying vec2 vUv;\n\n            float squareWaveIntegral(in float x, in float wavelength) {\n                float k = x / wavelength;\n                float u = fract(k);\n                float wave = step(0.5, u) * 2.0 - 1.0;\n                return (fract(k * wave) - 1.) * wavelength;\n            }\n\n            float squareWaveAntialiased(in float xPixels, in float wavelengthPixels) {\n                // antialiasing: we find the average over the pixel by sampling signal integral either side and dividing by sampling interval (1 in this case)\n                float waveAvg = squareWaveIntegral(xPixels + 0.5, wavelengthPixels) - squareWaveIntegral(xPixels - 0.5, wavelengthPixels);\n\n                // lerp to midpoint (0) for small wavelengths (~ 1 pixel) to avoid moire patterns\n                waveAvg = mix(waveAvg, 0., clamp(2. - wavelengthPixels, 0., 1.0));\n                return waveAvg;\n            }\n\n            void main() {\n                vec2 domPx = vUv * size;\n\n                const vec2 borderWidthPx = vec2(1.);\n                vec2 inner = step(borderWidthPx, domPx) * step(domPx, size - borderWidthPx);\n                float border = inner.x * inner.y;\n\n                // two-tones for codons\n                vec4 codonAColor = color;\n                vec4 codonBColor = color + vec4(0.05);\n                // a codon is 3 bases wide\n                float codonWidthPx = baseWidthPx * 3.0;\n\n                // use square wave to create codon tones\n                // we use true pixel coordinates to make antialiasing easier\n                float xPixels = (mix(domPx.x, size.x - domPx.x, reverse) - baseWidthPx * phase) * pixelRatio;\n                float wavelengthPixels = codonWidthPx * pixelRatio * 2.0;\n\n                float codon = squareWaveAntialiased(xPixels, wavelengthPixels) * 0.5 + 0.5; // scale wave to 0 - 1\n\n                vec4 c =\n                    mix(codonAColor, codonBColor, codon); // switch between codon colors\n\n                c.rgb += (1.0 - border) * vec3(0.3); // additive blend border\n\n                gl_FragColor = vec4(c.rgb, 1.0) * c.a;\n            }\n        ";
    };
    return CDS;
}(Rect_1.Rect));
var TranscriptSpan = /** @class */ (function (_super) {
    __extends(TranscriptSpan, _super);
    function TranscriptSpan(direction) {
        var _this = _super.call(this, 0, 0) || this;
        _this.direction = direction;
        _this.color.set([0, 1, 0, 1]);
        return _this;
    }
    TranscriptSpan.prototype.draw = function (context) {
        context.uniform2f('pixelSize', 1 / context.viewport.w, 1 / context.viewport.h);
        context.uniform1f('reverse', this.direction === Strand_1.Strand.Negative ? 1 : 0);
        _super.prototype.draw.call(this, context);
    };
    TranscriptSpan.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision highp float;\n\n            uniform vec2 pixelSize;\n            uniform vec2 size;\n            uniform float reverse;\n\n            uniform vec4 color;\n\n            varying vec2 vUv;\n\n            float distanceToSegment(vec2 a, vec2 b, vec2 p) {\n                p -= a; b -= a;                        // go to A referential\n                float q = dot(p, b) / dot(b, b) ;      // projection of P on line AB: normalized ordinate\n                b *= clamp(q, 0., 1.);                 // point on segment AB closest to P\n                return length( p - b);                 // distance to P\n            }\n\n            float lineSegment(vec2 x, vec2 a, vec2 b, float r, vec2 pixelSize) {\n                float f = distanceToSegment(a, b, x);\n                float e = pixelSize.x * 0.5;\n                return smoothstep(r - e, r + e, f);\n            }\n\n            void main() {\n                vec2 x = vec2(vUv.x, vUv.y - 0.5);\n\n                x.x = mix(x.x, 1.0 - x.x, reverse);\n\n                float n = 2.0;\n                x *= n; x.x = fract(x.x);\n\n                vec2 p = x * size;\n\n                float m = 1.0 - (\n                    // arrow\n                    lineSegment(\n                        p + vec2(-size.x * 0.5, 0.0),\n                        vec2(-10.0, -10.0) * 0.75,\n                        vec2(  0.0,   0.0),\n                        1.0,\n                        pixelSize\n                    ) *\n                    lineSegment(\n                        p + vec2(-size.x * 0.5, 0.0),\n                        vec2(-10.0, 10.0) * 0.75,\n                        vec2(  0.0,  0.0),\n                        1.0,\n                        pixelSize\n                    ) *\n\n                    // middle line\n                    lineSegment(x, vec2(0), vec2(1.0, 0.), 0.1, pixelSize)\n                );\n\n                vec3 rgb = color.rgb * m;\n                float a = m * color.a;\n\n                gl_FragColor = vec4(rgb, 1.0) * a; return;\n\n\n                /*\n\n                float h = 0.1;\n                float l = lineSegment(\n                    uv,\n                    vec2(0.5 - w * 0.5,  0.5),\n                    vec2(0.5 + w * 0.5,  0.5),\n                    h,\n                    pixelSize\n                );\n\n                gl_FragColor = vec4(0., 0., l, 1.); return;\n\n                float r = size.x / size.y;\n\n                vec2 x = vec2(vUv.x, vUv.y - 0.5);\n                x.x *= r;\n                x *= 1.0; x.x = fract(x.x);\n\n                vec2 lx = vec2(x.x - 0.5, x.y);\n                float lines = 1.0 - (\n                    lineSegment(lx, vec2(-0.25,  0.25), vec2(0), 0.05, pixelSize) *\n                    lineSegment(lx, vec2(-0.25, -0.25), vec2(0), 0.05, pixelSize)\n                );\n\n                // gl_FragColor = vec4(lx, 0., 1.); return;\n\n                gl_FragColor = vec4(vec3(lines), 1.);\n                */\n            }\n        ";
    };
    return TranscriptSpan;
}(Rect_1.Rect));
exports.default = AnnotationTrack;


/***/ }),

/***/ "./ui/track/BaseTrack.ts":
/*!*******************************!*\
  !*** ./ui/track/BaseTrack.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Text_1 = __webpack_require__(/*! engine/ui/Text */ "../node_modules/engine/ui/Text.js");
var Fonts_1 = __webpack_require__(/*! ../font/Fonts */ "./ui/font/Fonts.ts");
var TrackObject = /** @class */ (function (_super) {
    __extends(TrackObject, _super);
    function TrackObject(model) {
        var _this = _super.call(this, 0, 0, [0.1, 0.1, 0.1, 1]) || this;
        _this.model = model;
        _this.defaultCursor = 'crosshair';
        _this.axisPointers = {};
        _this.activeAxisPointerColor = [1, 1, 1, 0.8];
        _this.secondaryAxisPointerColor = [0.2, 0.2, 0.2, 1];
        _this.displayNeedUpdate = true;
        _this._pendingTiles = new UsageCache_1.default();
        // when we're waiting on data from a tile we add a complete listener to update the annotation when the data arrives
        _this.createTileLoadingDependency = function (tile) {
            tile.addEventListener('complete', _this.onDependentTileComplete);
            return tile;
        };
        _this.removeTileLoadingDependency = function (tile) {
            tile.removeEventListener('complete', _this.onDependentTileComplete);
        };
        _this.onDependentTileComplete = function () {
            _this.updateDisplay();
        };
        _this.cursorStyle = _this.defaultCursor;
        _this.addInteractionListener('pointerdown', function () { return _this.cursorStyle = 'pointer'; });
        _this.addInteractionListener('pointerup', function () { return _this.cursorStyle = _this.defaultCursor; });
        _this.addInteractionListener('dragend', function () { return _this.cursorStyle = _this.defaultCursor; });
        _this.loadingIndicator = new LoadingIndicator();
        _this.loadingIndicator.cursorStyle = 'pointer';
        _this.loadingIndicator.layoutY = -1;
        _this.loadingIndicator.layoutParentY = 1;
        _this.loadingIndicator.x = 10;
        _this.loadingIndicator.y = -10;
        _this.loadingIndicator.mask = _this;
        _this.add(_this.loadingIndicator);
        // @! depth-box, should be at top, maybe layoutParentZ = 1
        // - be careful to avoid conflict with cursor
        _this.toggleLoadingIndicator(false, false);
        var focusRegionColor = [.1, .1, .1, 1.0];
        var focusRegionOpacity = 0.7;
        _this.focusRegionRectLeft = new Rect_1.default(0, 0, focusRegionColor);
        _this.focusRegionRectRight = new Rect_1.default(0, 0, focusRegionColor);
        _this.focusRegionRectLeft.opacity = _this.focusRegionRectRight.opacity = focusRegionOpacity;
        _this.focusRegionRectLeft.layoutH = _this.focusRegionRectRight.layoutH = 1.0;
        _this.focusRegionRectLeft.z = _this.focusRegionRectRight.z = 1.9;
        _this.add(_this.focusRegionRectLeft);
        _this.add(_this.focusRegionRectRight);
        // disabled by default
        _this.disableFocusRegion();
        return _this;
    }
    TrackObject.prototype.setContig = function (contig) {
        this.contig = contig;
        this.displayNeedUpdate = true;
    };
    TrackObject.prototype.setRange = function (x0, x1) {
        this.x0 = x0;
        this.x1 = x1;
        this.displayNeedUpdate = true;
    };
    TrackObject.prototype.setAxisPointer = function (id, fractionX, style) {
        var withinBounds = fractionX >= 0 && fractionX <= 1;
        var axisPointer = this.axisPointers[id];
        if (axisPointer === undefined) {
            // !withinBounds means do not draw, so we don't need to create the object
            if (!withinBounds)
                return;
            // create axis pointer
            axisPointer = new AxisPointer(style, this.activeAxisPointerColor, this.secondaryAxisPointerColor);
            axisPointer.z = 2;
            this.add(axisPointer);
            this.axisPointers[id] = axisPointer;
        }
        axisPointer.render = withinBounds;
        if (withinBounds) {
            axisPointer.layoutParentX = fractionX;
        }
        if (axisPointer.style !== style) {
            axisPointer.setStyle(style);
        }
    };
    TrackObject.prototype.removeAxisPointer = function (id) {
        var axisPointer = this.axisPointers[id];
        if (axisPointer === undefined) {
            return;
        }
        this.remove(axisPointer);
        delete this.axisPointers[id];
    };
    TrackObject.prototype.setFocusRegion = function (x0_fractional, x1_fractional) {
        this.focusRegionRectLeft.layoutParentX = 0;
        this.focusRegionRectLeft.layoutW = Math.max(Math.min(x0_fractional, x1_fractional), 0);
        this.focusRegionRectLeft.render = true;
        this.focusRegionRectRight.layoutParentX = Math.max(x0_fractional, x1_fractional);
        this.focusRegionRectRight.layoutW = Math.max(1.0 - this.focusRegionRectRight.layoutParentX, 0);
        this.focusRegionRectRight.render = true;
    };
    TrackObject.prototype.disableFocusRegion = function () {
        this.focusRegionRectLeft.render = false;
        this.focusRegionRectRight.render = false;
    };
    TrackObject.prototype.applyTransformToSubNodes = function (root) {
        // update tiles if we need to
        if ((this._lastComputedWidth !== this.getComputedWidth()) || this.displayNeedUpdate) {
            this.updateDisplay();
            this._lastComputedWidth = this.getComputedWidth();
        }
        _super.prototype.applyTransformToSubNodes.call(this, root);
    };
    TrackObject.prototype.updateDisplay = function () {
        this._pendingTiles.markAllUnused();
        // fetch and display data
        this.displayNeedUpdate = false;
        this._pendingTiles.removeUnused(this.removeTileLoadingDependency);
        this.toggleLoadingIndicator(this._pendingTiles.count > 0, true);
    };
    /**
     * Show or hide the loading indicator via animation
     * This function can be safely called repeatedly without accounting for the current state of the indicator
     */
    TrackObject.prototype.toggleLoadingIndicator = function (visible, animate) {
        // we want a little bit of delay before the animation, for this we use a negative opacity when invisible
        var targetOpacity = visible ? 1 : -0.1;
        if (animate) {
            Animator_1.default.springTo(this.loadingIndicator, { 'opacity': targetOpacity }, 50);
        }
        else {
            Animator_1.default.stop(this.loadingIndicator, ['opacity']);
            this.loadingIndicator.opacity = targetOpacity;
        }
    };
    return TrackObject;
}(Rect_1.default));
exports.TrackObject = TrackObject;
var AxisPointerStyle;
(function (AxisPointerStyle) {
    AxisPointerStyle[AxisPointerStyle["Active"] = 0] = "Active";
    AxisPointerStyle[AxisPointerStyle["Secondary"] = 1] = "Secondary";
})(AxisPointerStyle = exports.AxisPointerStyle || (exports.AxisPointerStyle = {}));
var AxisPointer = /** @class */ (function (_super) {
    __extends(AxisPointer, _super);
    function AxisPointer(style, activeColor, secondaryColor) {
        var _this = _super.call(this, 0, 0) || this;
        _this.activeColor = activeColor;
        _this.secondaryColor = secondaryColor;
        _this.layoutX = -0.5;
        _this.layoutH = 1;
        _this.w = 1;
        _this.setStyle(style);
        return _this;
    }
    AxisPointer.prototype.setStyle = function (style) {
        switch (style) {
            case AxisPointerStyle.Active:
                this.color.set(this.activeColor);
                break;
            case AxisPointerStyle.Secondary:
                this.color.set(this.secondaryColor);
                break;
        }
        this.style = style;
    };
    return AxisPointer;
}(Rect_1.default));
var LoadingIndicator = /** @class */ (function (_super) {
    __extends(LoadingIndicator, _super);
    function LoadingIndicator() {
        return _super.call(this, Fonts_1.OpenSansRegular, 'Loading', 12, [1, 1, 1, 1]) || this;
    }
    return LoadingIndicator;
}(Text_1.default));
exports.default = TrackObject;


/***/ }),

/***/ "./ui/track/ConstructTrack.ts":
/*!************************************!*\
  !*** ./ui/track/ConstructTrack.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AnnotationTrack_1 = __webpack_require__(/*! ./AnnotationTrack */ "./ui/track/AnnotationTrack.ts");
var SequenceTrack_1 = __webpack_require__(/*! ./SequenceTrack */ "./ui/track/SequenceTrack.ts");
var BaseTrack_1 = __webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts");
var VariantTrack_1 = __webpack_require__(/*! ./VariantTrack */ "./ui/track/VariantTrack.ts");
var IntervalTrack_1 = __webpack_require__(/*! ./IntervalTrack */ "./ui/track/IntervalTrack.ts");
function ConstructTrack(model) {
    switch (model.type) {
        case 'empty': return new BaseTrack_1.default(model);
        case 'sequence': return new SequenceTrack_1.default(model);
        case 'annotation': return new AnnotationTrack_1.default(model);
        case 'variant': return new VariantTrack_1.default(model);
        case 'interval': return new IntervalTrack_1.default(model);
        default: {
            console.error("Not able to construct a \"" + model.type + "\" track");
            return null;
        }
    }
}
exports.ConstructTrack = ConstructTrack;
exports.default = ConstructTrack;


/***/ }),

/***/ "./ui/track/IntervalTrack.ts":
/*!***********************************!*\
  !*** ./ui/track/IntervalTrack.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var GenericIntervalTileStore_1 = __webpack_require__(/*! ../../tile-store/GenericIntervalTileStore */ "./tile-store/GenericIntervalTileStore.ts");
var SharedTileStores_1 = __webpack_require__(/*! ../../tile-store/SharedTileStores */ "./tile-store/SharedTileStores.ts");
var TileStore_1 = __webpack_require__(/*! ../../tile-store/TileStore */ "./tile-store/TileStore.ts");
var BaseTrack_1 = __webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts");
var IntervalInstances_1 = __webpack_require__(/*! ./util/IntervalInstances */ "./ui/track/util/IntervalInstances.ts");
var IntervalTrack = /** @class */ (function (_super) {
    __extends(IntervalTrack, _super);
    function IntervalTrack(model) {
        var _this = _super.call(this, model) || this;
        _this.blendEnabled = true;
        _this._pendingTiles = new UsageCache_1.default();
        _this._intervalTileCache = new UsageCache_1.default();
        _this._onStage = new UsageCache_1.default();
        _this.removeTile = function (tile) {
            _this.remove(tile);
        };
        _this.setBlendMode(model.blendEnabled);
        return _this;
    }
    IntervalTrack.prototype.setContig = function (contig) {
        var _this = this;
        var typeKey = this.model.tileStoreType + ':' + JSON.stringify(this.model.query);
        this.tileStore = SharedTileStores_1.default.getTileStore(typeKey, contig, function (contig) { return new GenericIntervalTileStore_1.default(contig, _this.model.query); });
        _super.prototype.setContig.call(this, contig);
    };
    IntervalTrack.prototype.setBlendMode = function (enabled) {
        this.blendEnabled = enabled;
    };
    IntervalTrack.prototype.updateDisplay = function () {
        var _this = this;
        this._pendingTiles.markAllUnused();
        this._onStage.markAllUnused();
        var x0 = this.x0;
        var x1 = this.x1;
        var span = x1 - x0;
        var widthPx = this.getComputedWidth();
        if (widthPx > 0) {
            var basePairsPerDOMPixel = (span / widthPx);
            var continuousLodLevel_1 = Scalar_1.Scalar.log2(Math.max(basePairsPerDOMPixel, 1));
            this.tileStore.getTiles(x0, x1, basePairsPerDOMPixel, true, function (tile) {
                if (tile.state === TileStore_1.TileState.Complete) {
                    _this.displayTileNode(tile, 0.9, x0, span, continuousLodLevel_1);
                }
                else {
                    // if the tile is incomplete then wait until complete and call updateAnnotations() again
                    _this._pendingTiles.get(_this.contig + ':' + tile.key, function () { return _this.createTileLoadingDependency(tile); });
                    // display a fallback tile if one is loaded at this location
                    var gapCenterX = tile.x + tile.span * 0.5;
                    var fallbackTile = _this.tileStore.getTile(gapCenterX, 1 << _this.tileStore.macroLodLevel, false);
                    if (fallbackTile.state === TileStore_1.TileState.Complete) {
                        // display fallback tile behind other tiles
                        _this.displayTileNode(fallbackTile, 0.3, x0, span, continuousLodLevel_1);
                    }
                }
            });
        }
        this.displayNeedUpdate = false;
        this._pendingTiles.removeUnused(this.removeTileLoadingDependency);
        this._onStage.removeUnused(this.removeTile);
        this.toggleLoadingIndicator(this._pendingTiles.count > 0, true);
    };
    IntervalTrack.prototype.displayTileNode = function (tile, z, x0, span, continuousLodLevel) {
        var _this = this;
        var tileKey = this.contig + ':' + z + ':' + tile.key;
        var node = this._intervalTileCache.get(tileKey, function () {
            return _this.createTileNode(tile);
        });
        node.layoutParentX = (tile.x - x0) / span;
        node.layoutW = tile.span / span;
        node.z = z;
        // decrease opacity at large lods to prevent white-out as interval cluster together and overlap
        var e = 2;
        var t = Math.pow((Math.max(continuousLodLevel - 2, 0) / 15), e);
        node.opacity = this.blendEnabled ? Scalar_1.Scalar.lerp(1, 0.1, Scalar_1.Scalar.clamp(t, 0, 1)) : 1.0;
        this._onStage.get(tileKey, function () {
            _this.add(node);
            return node;
        });
    };
    IntervalTrack.prototype.createTileNode = function (tile) {
        var nIntervals = tile.payload.length * 0.5;
        var instanceData = new Array(nIntervals);
        for (var i = 0; i < nIntervals; i++) {
            var intervalStartIndex = tile.payload[i * 2 + 0];
            var intervalSpan = tile.payload[i * 2 + 1];
            var fractionX = (intervalStartIndex - tile.x) / tile.span;
            var wFractional = intervalSpan / tile.span;
            instanceData[i] = {
                xFractional: fractionX,
                wFractional: wFractional,
                y: 0,
                z: 0,
                h: 35,
                color: [74 / 0xff, 52 / 0xff, 226 / 0xff, 0.66],
            };
        }
        var instancesTile = new IntervalInstances_1.default(instanceData);
        instancesTile.minWidth = 0.5;
        instancesTile.blendFactor = 0.2; // nearly full additive
        instancesTile.y = 5;
        instancesTile.mask = this;
        return instancesTile;
    };
    return IntervalTrack;
}(BaseTrack_1.default));
exports.IntervalTrack = IntervalTrack;
exports.default = IntervalTrack;


/***/ }),

/***/ "./ui/track/SequenceTrack.ts":
/*!***********************************!*\
  !*** ./ui/track/SequenceTrack.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var SequenceTileStore_1 = __webpack_require__(/*! ../../tile-store/SequenceTileStore */ "./tile-store/SequenceTileStore.ts");
var TileStore_1 = __webpack_require__(/*! ../../tile-store/TileStore */ "./tile-store/TileStore.ts");
var GPUDevice_1 = __webpack_require__(/*! engine/rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var Renderer_1 = __webpack_require__(/*! engine/rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var SharedResources_1 = __webpack_require__(/*! engine/SharedResources */ "../node_modules/engine/SharedResources.js");
var Text_1 = __webpack_require__(/*! engine/ui/Text */ "../node_modules/engine/ui/Text.js");
var Fonts_1 = __webpack_require__(/*! ../font/Fonts */ "./ui/font/Fonts.ts");
var ShaderTrack_1 = __webpack_require__(/*! ./ShaderTrack */ "./ui/track/ShaderTrack.ts");
var TextClone_1 = __webpack_require__(/*! ./util/TextClone */ "./ui/track/util/TextClone.ts");
var SequenceTrack = /** @class */ (function (_super) {
    __extends(SequenceTrack, _super);
    function SequenceTrack(model) {
        var _this = _super.call(this, model, 'sequence', function (c) { return new SequenceTileStore_1.SequenceTileStore(c); }) || this;
        _this.densityMultiplier = 2.0;
        _this.color.set([0, 0, 0, 1]);
        return _this;
    }
    SequenceTrack.prototype.constructTileNode = function () {
        return new SequenceTile();
    };
    return SequenceTrack;
}(ShaderTrack_1.ShaderTrack));
exports.SequenceTrack = SequenceTrack;
/**
 * - A TileNode render field should only be set to true if it's TileEntry is in the Complete state
 */
var NUCLEOBASE_A_COLOR = new Float32Array([0.216, 0.063, 0.318, 1.0]); // #371051;
var NUCLEOBASE_T_COLOR = new Float32Array([0.200, 0.200, 0.404, 1.0]); // #333367;
var NUCLEOBASE_C_COLOR = new Float32Array([0.043, 0.561, 0.608, 1.0]); // #0B8F9B;
var NUCLEOBASE_G_COLOR = new Float32Array([0.071, 0.725, 0.541, 1.0]); // #12B98A;
var SequenceTile = /** @class */ (function (_super) {
    __extends(SequenceTile, _super);
    function SequenceTile() {
        var _this = _super.call(this) || this;
        _this._labelCache = new UsageCache_1.UsageCache();
        _this.createLabel = function (baseCharacter) {
            var textClone = new TextClone_1.TextClone(SequenceTile.baseTextInstances[baseCharacter], [1, 1, 1, 1]);
            textClone.additiveBlendFactor = 1.0;
            textClone.layoutX = -0.5;
            textClone.layoutY = -0.5;
            var container = new Object2D_1.default();
            container.add(textClone);
            _this.add(container);
            return { container: container, text: textClone };
        };
        _this.deleteLabel = function (label) {
            label.container.remove(label.text); // ensure textClone cleanup is fired
            label.text.releaseGPUResources();
            _this.remove(label.container);
        };
        return _this;
    }
    SequenceTile.prototype.setTile = function (tile) {
        _super.prototype.setTile.call(this, tile);
        if (this.tile != null) {
            this.memoryBlockY = (tile.blockRowIndex + 0.5) / tile.block.rows.length; // y-center of texel
        }
    };
    SequenceTile.prototype.applyTransformToSubNodes = function (root) {
        // updateLabels depends on computedWidth and layoutX, if any of those has changed we need to call it
        if (this.computedWidth !== this._lastComputedWidth ||
            this._lastComputedX !== this.computedX) {
            this._lastComputedWidth = this.computedWidth;
            this._lastComputedX = this.computedX;
            // update labels when laying out scene-graph
            this.updateLabels();
        }
        _super.prototype.applyTransformToSubNodes.call(this, root);
    };
    SequenceTile.prototype.allocateGPUResources = function (device) {
        // static initializations
        this.gpuVertexState = SharedResources_1.default.quad1x1VertexState;
        this.gpuProgram = SharedResources_1.default.getProgram(device, SequenceTile.vertexShader, SequenceTile.fragmentShader, SequenceTile.attributeLayout);
        // we assume .tile is set and in the complete state before allocateGPUResources is called
        this.gpuTexture = this.tile.payload.getTexture(device);
    };
    SequenceTile.prototype.releaseGPUResources = function () {
        // since our resources are shared we don't actually want to release anything here
        this.gpuVertexState = null;
        this.gpuProgram = null;
        this.gpuTexture = null;
    };
    SequenceTile.prototype.draw = function (context) {
        var payload = this.tile.payload;
        context.uniform2f('size', this.computedWidth, this.computedHeight);
        context.uniformMatrix4fv('model', false, this.worldTransformMat4);
        context.uniform1f('opacity', this.opacity);
        context.uniform1f('memoryBlockY', this.memoryBlockY);
        context.uniform3f('offsetScaleLod', payload.sequenceMinMax.min, (payload.sequenceMinMax.max - payload.sequenceMinMax.min), this.displayLodLevel);
        context.uniformTexture2D('memoryBlock', this.gpuTexture);
        context.draw(Renderer_1.DrawMode.TRIANGLES, 6, 0);
        this.tile.markLastUsed();
    };
    SequenceTile.prototype.updateLabels = function () {
        var _this = this;
        var tile = this.tile;
        this._labelCache.markAllUnused();
        if (tile != null) {
            if (tile.lodLevel === 0 && tile.state === TileStore_1.TileState.Complete) {
                var data = tile.payload.array;
                var baseWidth = 1 / tile.lodSpan;
                var baseDisplayWidth = this.computedWidth * baseWidth;
                var maxTextSize = 16;
                var minTextSize = 5;
                var padding = 3;
                var maxOpacity = 0.7;
                var textSizePx = Math.min(baseDisplayWidth - padding, maxTextSize);
                var textOpacity = Math.min(Math.max((textSizePx - minTextSize) / (maxTextSize - minTextSize), 0.0), 1.0) * maxOpacity;
                textOpacity = textOpacity * textOpacity;
                if (textOpacity > 0 && textSizePx > 0) {
                    var nChannels = 4;
                    var nBases = tile.payload.array.length / nChannels;
                    // determine the portion of this tile that's visible, only touch labels for this portion
                    // we assume:
                    //     - layoutX and layoutW are used for positioning
                    //     - x >= 0 and x <= 1 is visible range
                    var visibleX0 = -this.layoutParentX / this.layoutW;
                    var visibleX1 = (1 - this.layoutParentX) / this.layoutW;
                    var firstVisibleBase = Scalar_1.Scalar.clamp(Math.floor(visibleX0 / baseWidth), 0, nBases - 1);
                    var lastVisibleBase = Scalar_1.Scalar.clamp(Math.floor(visibleX1 / baseWidth), 0, nBases - 1);
                    var proportionThreshold = 0.5;
                    var _loop_1 = function (i) {
                        var a = data[i * 4 + 0] / 0xFF;
                        var c = data[i * 4 + 1] / 0xFF;
                        var g = data[i * 4 + 2] / 0xFF;
                        var t = data[i * 4 + 3] / 0xFF;
                        // determine a nucleobase character to display
                        var baseChar;
                        if (a > proportionThreshold) {
                            baseChar = 'A';
                        }
                        else if (c > proportionThreshold) {
                            baseChar = 'C';
                        }
                        else if (t > proportionThreshold) {
                            baseChar = 'T';
                        }
                        else if (g > proportionThreshold) {
                            baseChar = 'G';
                        }
                        else {
                            baseChar = 'N'; // any nucleobase
                        }
                        var label = this_1._labelCache.get(i + '', function () { return _this.createLabel(baseChar); });
                        label.container.layoutParentX = (i + 0.5) * baseWidth;
                        label.container.layoutParentY = 0.5;
                        label.container.sx = label.container.sy = textSizePx;
                        label.text.mask = this_1.mask;
                        label.text.color[3] = textOpacity;
                    };
                    var this_1 = this;
                    for (var i = firstVisibleBase; i <= lastVisibleBase; i++) {
                        _loop_1(i);
                    }
                }
            }
        }
        this._labelCache.removeUnused(this.deleteLabel);
    };
    SequenceTile.prototype.onTileComplete = function () {
        _super.prototype.onTileComplete.call(this);
        this.updateLabels();
    };
    SequenceTile.attributeLayout = [
        { name: 'position', type: GPUDevice_1.AttributeType.VEC2 }
    ];
    SequenceTile.vertexShader = "\n        #version 100\n\n        attribute vec2 position;\n        uniform mat4 model;\n        uniform vec2 size;\n        uniform float memoryBlockY;\n\n        varying vec2 texCoord;\n        varying vec2 vUv;\n\n        void main() {\n            texCoord = vec2(position.x, memoryBlockY);\n            vUv = position;\n            gl_Position = model * vec4(position * size, 0., 1.0);\n        }\n    ";
    SequenceTile.fragmentShader = "\n        #version 100\n\n        precision mediump float;\n        uniform float opacity;\n        uniform sampler2D memoryBlock;\n        uniform vec3 offsetScaleLod;\n\n        varying vec2 texCoord;\n        varying vec2 vUv;\n\n        float contrastCurve(float x, float s) {\n            float s2 = pow(2.0, s);\n            float px = pow(4.0, -s * x);\n            return ((s2 + 1.)/(s2*px + 1.0) - 1.) / (s2 - 1.0);\n        }\n\n        vec3 viridis( float x ) {\n            x = clamp(x, 0., 1.0);\n            vec4 x1 = vec4( 1.0, x, x * x, x * x * x ); // 1 x x2 x3\n            vec4 x2 = x1 * x1.w * x; // x4 x5 x6 x7\n            return vec3(\n                dot( x1, vec4( +0.280268003, -0.143510503, +2.225793877, -14.81508888 ) ) + dot( x2.xy, vec2( +25.212752309, -11.77258958 ) ),\n                dot( x1, vec4( -0.002117546, +1.617109353, -1.909305070, +2.701152864 ) ) + dot( x2.xy, vec2(  -1.685288385, +0.178738871 ) ),\n                dot( x1, vec4( +0.300805501, +2.614650302, -12.01913909, +28.93355911 ) ) + dot( x2.xy, vec2( -33.491294770, +13.76205384 ) )\n            );\n        }\n        \n        void main() {\n            vec4 texRaw = texture2D(memoryBlock, texCoord);\n            // unpack data\n            vec4 acgt = texRaw * offsetScaleLod.y + offsetScaleLod.x;\n\n            // micro-scale color\n            const vec3 aRgb = vec4(" + NUCLEOBASE_A_COLOR.join(', ') + ").rgb;\n            const vec3 tRgb = vec4(" + NUCLEOBASE_T_COLOR.join(', ') + ").rgb;\n            const vec3 cRgb = vec4(" + NUCLEOBASE_C_COLOR.join(', ') + ").rgb;\n            const vec3 gRgb = vec4(" + NUCLEOBASE_G_COLOR.join(', ') + ").rgb;\n\n            vec3 colMicro = (\n                    acgt[0] * aRgb +\n                    acgt[1] * cRgb +\n                    acgt[2] * gRgb +\n                    acgt[3] * tRgb\n            );\n\n            // blend into to macro-scale color\n            // macro-scale simulates g-banding with a non-linear response\n            float tileLodLevel = offsetScaleLod.z;\n            float q = tileLodLevel - 5.0;\n            float expectedSpan = min(pow(0.9, q), 1.0);\n            float expectedAvg = min(pow(0.8, q) * 0.25 + 0.25, 0.5);\n            vec4 acgtScaled = (acgt - expectedAvg) / expectedSpan + 0.5;\n\n            float gc = (acgtScaled[1] + acgtScaled[2]) * 0.5;\n\n            float gcCurved = (contrastCurve(gc, 4.) + 0.3 * gc * gc);\n            vec3 colMacro = (\n                viridis(gcCurved) +\n                vec3(30.) * pow(gc, 12.0) // tend to white at highest-density\n            );\n\n            const float microScaleEndLod = 6.0;\n            float displayLodLevel = offsetScaleLod.z;\n            float microMacroMix = clamp((displayLodLevel - microScaleEndLod) / microScaleEndLod, 0., 1.0);\n\n            gl_FragColor = vec4(mix(colMicro, colMacro, microMacroMix), 1.0) * opacity;\n\n            /**\n            // for debug: makes tiling visible\n            float debugMask = step(0.45, vUv.y) * step(vUv.y, 0.55);\n            vec4 debugColor = vec4(vUv.xxx, 1.0);\n            gl_FragColor = mix(gl_FragColor, debugColor, debugMask);\n            /**/\n        }\n    ";
    // we only need 1 text instance of each letter which we can render multiple times
    // this saves reallocating new vertex buffers for each letter
    SequenceTile.baseTextInstances = {
        'A': new Text_1.Text(Fonts_1.OpenSansRegular, 'A', 1, [1, 1, 1, 1]),
        'C': new Text_1.Text(Fonts_1.OpenSansRegular, 'C', 1, [1, 1, 1, 1]),
        'G': new Text_1.Text(Fonts_1.OpenSansRegular, 'G', 1, [1, 1, 1, 1]),
        'T': new Text_1.Text(Fonts_1.OpenSansRegular, 'T', 1, [1, 1, 1, 1]),
        'N': new Text_1.Text(Fonts_1.OpenSansRegular, 'N', 1, [1, 1, 1, 1]),
    };
    return SequenceTile;
}(ShaderTrack_1.TileNode));
exports.default = SequenceTrack;


/***/ }),

/***/ "./ui/track/ShaderTrack.ts":
/*!*********************************!*\
  !*** ./ui/track/ShaderTrack.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var UIConstants_1 = __webpack_require__(/*! ../UIConstants */ "./ui/UIConstants.ts");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var TileStore_1 = __webpack_require__(/*! ../../tile-store/TileStore */ "./tile-store/TileStore.ts");
var BaseTrack_1 = __webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts");
var SharedTileStores_1 = __webpack_require__(/*! ../../tile-store/SharedTileStores */ "./tile-store/SharedTileStores.ts");
/**
 * TileTrack provides a base class for Tracks that use TileStore
 */
var ShaderTrack = /** @class */ (function (_super) {
    __extends(ShaderTrack, _super);
    function ShaderTrack(model, tileStoreType, tileStoreConstructor) {
        var _this = _super.call(this, model) || this;
        _this.tileStoreType = tileStoreType;
        _this.tileStoreConstructor = tileStoreConstructor;
        _this.densityMultiplier = 1.0;
        _this._pixelRatio = window.devicePixelRatio || 1;
        _this._tileNodeCache = new UsageCache_1.default();
        _this.createTileNode = function () {
            // create empty tile node
            var tileNode = _this.constructTileNode();
            tileNode.mask = _this;
            _this.add(tileNode);
            return tileNode;
        };
        _this.deleteTileNode = function (tileNode) {
            tileNode.setTile(null); // ensure cleanup is performed
            tileNode.releaseGPUResources();
            _this.remove(tileNode);
        };
        return _this;
    }
    Object.defineProperty(ShaderTrack.prototype, "pixelRatio", {
        get: function () { return this._pixelRatio; },
        set: function (v) {
            this._pixelRatio = v;
            this.displayNeedUpdate = true;
        },
        enumerable: true,
        configurable: true
    });
    ShaderTrack.prototype.setContig = function (contig) {
        this.tileStore = SharedTileStores_1.default.getTileStore(this.tileStoreType, contig, this.tileStoreConstructor);
        _super.prototype.setContig.call(this, contig);
    };
    ShaderTrack.prototype.constructTileNode = function () {
        return new TileNode();
    };
    ShaderTrack.prototype.updateDisplay = function () {
        var _this = this;
        var x0 = this.x0;
        var x1 = this.x1;
        var span = x1 - x0;
        var widthPx = this.getComputedWidth();
        this._tileNodeCache.markAllUnused();
        if (widthPx > 0) {
            var basePairsPerDOMPixel = (span / widthPx);
            var samplingDensity_1 = this.densityMultiplier * basePairsPerDOMPixel / this.pixelRatio;
            var displayLodLevel_1 = Scalar_1.default.log2(Math.max(samplingDensity_1, 1));
            var lodLevel = Math.floor(displayLodLevel_1);
            this.tileStore.getTiles(x0, x1, samplingDensity_1, true, function (tile) {
                var tileNode = _this._tileNodeCache.get(_this.contig + ':' + tile.key, _this.createTileNode);
                _this.updateTileNode(tileNode, tile, x0, span, displayLodLevel_1);
                // main tiles are positioned front-most so they appear above any fallback tiles
                tileNode.z = 1.0;
                // if tileNode is not opaque and displaying data then we've got a gap to fill
                if (!_this.tileNodeIsOpaque(tileNode)) {
                    var gapCenterX = tile.x + tile.span * 0.5;
                    // limit the number of loading-fade-in tiles to improve performance
                    var loadingTilesAllowed = 1;
                    var fadingTilesAllowed = 1;
                    // fill with larger tiles (higher lod level)
                    for (var p = 1; p < 30; p++) {
                        var densityMultiplier = 1 << p; // p must not exceed 30 or 1 << p will overflow
                        var fallbackDensity = samplingDensity_1 * densityMultiplier;
                        // exhausted all available lods
                        if (!_this.tileStore.isWithinInitializedLodRange(fallbackDensity))
                            break;
                        var fallbackTile = _this.tileStore.getTile(gapCenterX, fallbackDensity, false);
                        // it's possible we end up with the same lod we already have, if so, skip it
                        if (fallbackTile.lodLevel === tile.lodLevel)
                            continue;
                        // can we use this tile as a fallback?
                        if (((loadingTilesAllowed > 0) && (fallbackTile.state === TileStore_1.TileState.Loading)) ||
                            (fallbackTile.state === TileStore_1.TileState.Complete)) {
                            if (fallbackTile.state === TileStore_1.TileState.Loading) {
                                loadingTilesAllowed--;
                            }
                            var fallbackNode = _this._tileNodeCache.get(_this.contig + ':' + fallbackTile.key, _this.createTileNode);
                            _this.updateTileNode(fallbackNode, fallbackTile, x0, span, displayLodLevel_1);
                            // z-position tile so that better lods are front-most
                            fallbackNode.z = (1.0 - fallbackTile.lodLevel / 50) - 0.1;
                            // remove the tile if it's currently fading in and we've run out of fading tile budget
                            var tileIsFading = (fallbackTile.state === TileStore_1.TileState.Complete) && (fallbackNode.opacity < 1);
                            if (tileIsFading) {
                                if (fadingTilesAllowed <= 0) {
                                    // this is a fading tile and we've run out of fading tile budget
                                    // mark it as unused so it's removed by UsageCache
                                    _this._tileNodeCache.markUnused(_this.contig + ':' + fallbackTile.key);
                                    continue;
                                }
                                else {
                                    fadingTilesAllowed--;
                                }
                            }
                            // if the fallback node is opaque then we've successfully plugged the gap
                            if (_this.tileNodeIsOpaque(fallbackNode)) {
                                break;
                            }
                        }
                    }
                }
            });
        }
        this._tileNodeCache.removeUnused(this.deleteTileNode);
        this.displayNeedUpdate = false;
    };
    ShaderTrack.prototype.updateTileNode = function (tileNode, tile, x0, span, displayLodLevel) {
        tileNode.layoutParentX = (tile.x - x0) / span;
        tileNode.layoutW = tile.span / span;
        tileNode.layoutH = 1;
        tileNode.displayLodLevel = displayLodLevel;
        tileNode.setTile(tile);
    };
    ShaderTrack.prototype.tileNodeIsOpaque = function (tileNode) {
        return (tileNode.render === true) &&
            (tileNode.opacity >= 1) &&
            (tileNode.getTile().state === TileStore_1.TileState.Complete);
    };
    return ShaderTrack;
}(BaseTrack_1.TrackObject));
exports.ShaderTrack = ShaderTrack;
var TileNode = /** @class */ (function (_super) {
    __extends(TileNode, _super);
    function TileNode() {
        var _this = _super.call(this) || this;
        _this.tileCompleteListener = function () {
            _this.tile.removeEventListener('complete', _this.tileCompleteListener);
            _this.onTileComplete();
        };
        _this.opacity = 1;
        _this.render = false;
        return _this;
    }
    Object.defineProperty(TileNode.prototype, "opacity", {
        get: function () {
            return this._opacity;
        },
        set: function (opacity) {
            this._opacity = opacity;
            // switch to opaque rendering as soon as opacity hits 1
            this.transparent = opacity < 1;
        },
        enumerable: true,
        configurable: true
    });
    TileNode.prototype.setTile = function (tile) {
        // early exit case
        if (tile === this.tile)
            return;
        if (this.tile != null) {
            this.tile.removeEventListener('complete', this.tileCompleteListener);
        }
        this.tile = tile;
        if (tile != null) {
            if (tile.state === TileStore_1.TileState.Complete) {
                this.opacity = 1;
                this.onTileComplete();
            }
            else {
                tile.addEventListener('complete', this.tileCompleteListener);
                this.opacity = 0;
                this.render = false;
            }
        }
        else {
            this.render = false;
        }
    };
    TileNode.prototype.getTile = function () {
        return this.tile;
    };
    TileNode.prototype.onTileComplete = function () {
        Animator_1.default.springTo(this, { 'opacity': 1 }, UIConstants_1.DEFAULT_SPRING);
        this.render = true;
        this.gpuResourcesNeedAllocate = true;
    };
    return TileNode;
}(Object2D_1.default));
exports.TileNode = TileNode;
exports.default = ShaderTrack;


/***/ }),

/***/ "./ui/track/VariantTrack.ts":
/*!**********************************!*\
  !*** ./ui/track/VariantTrack.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Animator_1 = __webpack_require__(/*! engine/animation/Animator */ "../node_modules/engine/animation/Animator.js");
var UsageCache_1 = __webpack_require__(/*! engine/ds/UsageCache */ "../node_modules/engine/ds/UsageCache.js");
var Scalar_1 = __webpack_require__(/*! engine/math/Scalar */ "../node_modules/engine/math/Scalar.js");
var SharedTileStores_1 = __webpack_require__(/*! ../../tile-store/SharedTileStores */ "./tile-store/SharedTileStores.ts");
var TileStore_1 = __webpack_require__(/*! ../../tile-store/TileStore */ "./tile-store/TileStore.ts");
var VariantTileStore_1 = __webpack_require__(/*! ../../tile-store/VariantTileStore */ "./tile-store/VariantTileStore.ts");
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
var Rect_1 = __webpack_require__(/*! engine/ui/Rect */ "../node_modules/engine/ui/Rect.js");
var Text_1 = __webpack_require__(/*! engine/ui/Text */ "../node_modules/engine/ui/Text.js");
var Fonts_1 = __webpack_require__(/*! ../font/Fonts */ "./ui/font/Fonts.ts");
var BaseTrack_1 = __webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts");
var IntervalInstances_1 = __webpack_require__(/*! ./util/IntervalInstances */ "./ui/track/util/IntervalInstances.ts");
var TextClone_1 = __webpack_require__(/*! ./util/TextClone */ "./ui/track/util/TextClone.ts");
var valis_1 = __webpack_require__(/*! valis */ "../node_modules/valis/dist/index.js");
var VariantTrack = /** @class */ (function (_super) {
    __extends(VariantTrack, _super);
    function VariantTrack(model) {
        var _this = _super.call(this, model) || this;
        _this.macroLodBlendRange = 1;
        _this.macroLodThresholdLow = 8;
        _this.macroLodThresholdHigh = _this.macroLodThresholdLow + _this.macroLodBlendRange;
        _this.pointerOverTrack = false;
        _this._microTileCache = new UsageCache_1.default();
        _this._onStageAnnotations = new UsageCache_1.default();
        _this._sequenceLabelCache = new UsageCache_1.default();
        _this.createBaseLabel = function (baseCharacter, color, onClick) {
            var root = new Rect_1.Rect(0, 0, color);
            root.blendFactor = 0;
            root.mask = _this;
            root.opacity = 0;
            root.z = 0.5;
            // highlight on mouse-over
            var springStrength = 250;
            root.addInteractionListener('pointermove', function (e) {
                if (_this.pointerOverTrack) {
                    root.cursorStyle = 'pointer';
                    Animator_1.Animator.springTo(root, { opacity: 0.6 }, springStrength);
                }
                else {
                    root.cursorStyle = null;
                    Animator_1.Animator.springTo(root, { opacity: 0 }, springStrength);
                }
            });
            root.addInteractionListener('pointerleave', function () {
                root.cursorStyle = null;
                Animator_1.Animator.springTo(root, { opacity: 0 }, springStrength);
            });
            // callback on click
            root.addInteractionListener('pointerup', function (e) {
                if (_this.pointerOverTrack && e.isPrimary) {
                    e.preventDefault();
                    e.stopPropagation();
                    onClick();
                }
            });
            // add a 0-sized element centered in the root
            // this is used to position the text
            var textParent = new Object2D_1.default();
            textParent.z = 0;
            textParent.layoutParentX = 0.5;
            textParent.layoutParentY = 0.5;
            var textClone = null;
            // create textClone
            if (baseCharacter !== null) {
                var textInstance = VariantTrack.baseTextInstances[baseCharacter];
                if (textInstance === undefined) {
                    textInstance = VariantTrack.baseTextInstances['?'];
                }
                var textClone_1 = new TextClone_1.default(textInstance, [1, 1, 1, 1]);
                textClone_1.additiveBlendFactor = 1.0;
                textClone_1.layoutX = -0.5;
                textClone_1.layoutY = -0.5;
                textClone_1.mask = _this;
                textParent.add(textClone_1);
                root.add(textParent);
            }
            _this.add(root);
            return { root: root, textParent: textParent, text: textClone };
        };
        _this.deleteBaseLabel = function (label) {
            if (label.text != null) {
                label.textParent.remove(label.text); // ensure textClone cleanup is fired
                label.text.releaseGPUResources();
            }
            _this.remove(label.root);
        };
        _this.addInteractionListener('pointerenter', function (e) {
            _this.pointerOverTrack = true;
        });
        _this.addInteractionListener('pointerleave', function (e) {
            _this.pointerOverTrack = false;
        });
        return _this;
    }
    VariantTrack.prototype.setContig = function (contig) {
        var _this = this;
        var typeKey = this.model.type + ':' + JSON.stringify(this.model.query);
        this.tileStore = SharedTileStores_1.SharedTileStore.getTileStore(typeKey, contig, function (c) { return new VariantTileStore_1.VariantTileStore(_this.model, contig); });
        _super.prototype.setContig.call(this, contig);
    };
    VariantTrack.prototype.updateDisplay = function () {
        var _this = this;
        this._pendingTiles.markAllUnused();
        this._onStageAnnotations.markAllUnused();
        this._sequenceLabelCache.markAllUnused();
        var x0 = this.x0;
        var x1 = this.x1;
        var span = x1 - x0;
        var widthPx = this.getComputedWidth();
        if (widthPx > 0) {
            var basePairsPerDOMPixel = (span / widthPx);
            var continuousLodLevel = Scalar_1.default.log2(Math.max(basePairsPerDOMPixel, 1));
            var macroOpacity = Scalar_1.default.linstep(this.macroLodThresholdLow, this.macroLodThresholdHigh, continuousLodLevel);
            var microOpacity_1 = 1.0 - macroOpacity;
            // when query is provided, show micro-view at all scales
            if (this.model.query) {
                microOpacity_1 = 1;
                macroOpacity = 0;
            }
            // micro-scale details
            if (microOpacity_1 > 0) {
                this.tileStore.getTiles(x0, x1, basePairsPerDOMPixel, true, function (tile) {
                    var e_1, _a, e_2, _b;
                    if (tile.state !== TileStore_1.TileState.Complete) {
                        _this._pendingTiles.get(tile.key, function () { return _this.createTileLoadingDependency(tile); });
                        return;
                    }
                    var altHeightPx = 25;
                    var tileY = 15;
                    var baseLayoutW = 1 / span;
                    var baseDisplayWidth = widthPx * baseLayoutW;
                    var maxTextSize = 16;
                    var minTextSize = 1;
                    var padding = 1;
                    var maxOpacity = 1.0;
                    var textSizePx = Math.min(baseDisplayWidth - padding, maxTextSize);
                    var textOpacity = Math.min(Math.max((textSizePx - minTextSize) / (maxTextSize - minTextSize), 0.0), 1.0) * maxOpacity;
                    textOpacity = textOpacity * textOpacity;
                    // suboptimal: draw each character individually; would be faster be using a batch text object
                    // display text
                    if (textOpacity > 0 && textSizePx > 0) {
                        try {
                            for (var _c = __values(tile.payload), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var variant = _d.value;
                                var startIndex = variant.baseIndex;
                                var altIndex = 0;
                                var refSpan = variant.refSequence.length;
                                var color = [1, 0, 0, 1.0]; // default to deletion
                                try {
                                    for (var _e = __values(variant.alts), _f = _e.next(); !_f.done; _f = _e.next()) {
                                        var altSequence = _f.value;
                                        var altSpan = altSequence.length;
                                        var lengthDelta = altSpan - refSpan;
                                        // generate color from lengthDelta
                                        var opacity = 1;
                                        if (lengthDelta === 0) {
                                            color = [1.0, 1.0, 1.0, opacity];
                                        }
                                        else if (lengthDelta < 0) {
                                            color = [1.0, 0.3, 0.5, opacity];
                                        }
                                        else {
                                            color = [0.3, 1.0, 0.5, opacity];
                                        }
                                        for (var i = 0; i < altSpan; i++) {
                                            var baseCharacter = altSequence[i];
                                            var layoutParentX = ((startIndex + i) - x0) / span;
                                            // skip text outside visible range
                                            if ((layoutParentX + baseLayoutW) < 0 || layoutParentX > 1) {
                                                continue;
                                            }
                                            _this.displayLabel(variant.id, baseCharacter, color, startIndex, altIndex, i, layoutParentX, baseLayoutW, altHeightPx, textSizePx, textOpacity, tileY);
                                        }
                                        altIndex++;
                                    }
                                }
                                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                                finally {
                                    try {
                                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                                    }
                                    finally { if (e_2) throw e_2.error; }
                                }
                                // no alts were drawn so there's no handle to click, create an empty one to make them clickable
                                if (altIndex === 0) {
                                    var layoutParentX = ((startIndex + 0) - x0) / span;
                                    // skip text outside visible range
                                    if ((layoutParentX + baseLayoutW) < 0 || layoutParentX > 1) {
                                        continue;
                                    }
                                    _this.displayLabel(variant.id, null, color, startIndex, altIndex, 0, layoutParentX, baseLayoutW, altHeightPx, textSizePx, textOpacity, tileY);
                                }
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                    }
                    var tileObject = _this._microTileCache.get(_this.contig + ':' + tile.key, function () {
                        var e_3, _a, e_4, _b;
                        var instanceData = new Array();
                        try {
                            // GC -> G = deletion of G
                            // C -> A,TT = replace A, insert TT
                            // ATCCTG -> A { A: 0.005591 }
                            // GCCGCCC -> GCCGCCCCCGCCC, G, GCCGCCCCCGCCCCCGCCC {GCCGCCCCCGCCC: 0.031, G: 0.00009917, GCCGCCCCCGCCCCCGCCC: 0.00006611}
                            for (var _c = __values(tile.payload), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var variant = _d.value;
                                var fractionX = (variant.baseIndex - tile.x) / tile.span;
                                // multiple boxes
                                var refSpan = variant.refSequence.length;
                                var color = [1, 0, 0, 1.0]; // default to deletion
                                var altIndex = 0;
                                try {
                                    for (var _e = __values(variant.alts), _f = _e.next(); !_f.done; _f = _e.next()) {
                                        var altSequence = _f.value;
                                        var altSpan = altSequence.length;
                                        var lengthDelta = altSpan - refSpan;
                                        // generate color from lengthDelta
                                        var opacity = 0.7;
                                        if (lengthDelta === 0) {
                                            color = [0.8, 0.8, 0.8, opacity];
                                        }
                                        else if (lengthDelta < 0) {
                                            color = [1, 0, 0, opacity];
                                        }
                                        else {
                                            color = [0, 1, 0, opacity];
                                        }
                                        instanceData.push({
                                            xFractional: fractionX,
                                            y: altIndex * altHeightPx,
                                            z: 0,
                                            wFractional: altSpan / tile.span,
                                            h: altHeightPx,
                                            color: color,
                                        });
                                        altIndex++;
                                    }
                                }
                                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                                finally {
                                    try {
                                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                                    }
                                    finally { if (e_4) throw e_4.error; }
                                }
                                // no alts were drawn so there's no handle to click, create an empty one to make them clickable
                                if (altIndex === 0) {
                                    instanceData.push({
                                        xFractional: fractionX,
                                        y: 0,
                                        z: 0,
                                        wFractional: refSpan / tile.span,
                                        h: altHeightPx,
                                        color: [1, 0, 0, 0.5],
                                    });
                                }
                                // draw line to show reference span
                                instanceData.push({
                                    xFractional: fractionX,
                                    y: -5,
                                    z: 0,
                                    wFractional: refSpan / tile.span,
                                    h: 2,
                                    color: color.slice(0, 3).concat([1]),
                                });
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                        var instancesTile = new IntervalInstances_1.default(instanceData);
                        instancesTile.minWidth = 1.0;
                        instancesTile.blendFactor = 0.0; // full additive blending
                        instancesTile.y = tileY;
                        instancesTile.z = 0.75;
                        instancesTile.mask = _this;
                        return instancesTile;
                    });
                    tileObject.layoutParentX = (tile.x - x0) / span;
                    tileObject.layoutW = tile.span / span;
                    tileObject.opacity = microOpacity_1;
                    _this._onStageAnnotations.get('micro-tile:' + _this.contig + ':' + tile.key, function () {
                        _this.add(tileObject);
                        return tileObject;
                    });
                });
            }
        }
        this._pendingTiles.removeUnused(this.removeTileLoadingDependency);
        this._onStageAnnotations.removeUnused(function (t) { return _this.remove(t); });
        this._sequenceLabelCache.removeUnused(this.deleteBaseLabel);
        this.toggleLoadingIndicator(this._pendingTiles.count > 0, true);
        this.displayNeedUpdate = false;
    };
    VariantTrack.prototype.displayLabel = function (variantId, baseCharacter, color, startIndex, altIndex, charIndex, layoutParentX, baseLayoutW, altHeightPx, textSizePx, textOpacity, tileY) {
        var _this = this;
        var cacheKey = this.contig + ':' + startIndex + ',' + altIndex + ',' + charIndex;
        var label = this._sequenceLabelCache.get(cacheKey, function () {
            return _this.createBaseLabel(baseCharacter, color, function () {
                var entity = { id: variantId, type: valis_1.EntityType.SNP };
                console.log('@! todo: variant label clicked', entity);
            });
        });
        label.root.layoutParentX = layoutParentX;
        label.root.layoutW = baseLayoutW;
        label.root.y = altIndex * altHeightPx + tileY;
        label.root.h = altHeightPx;
        label.textParent.sx = label.textParent.sy = textSizePx;
        if (label.text != null) {
            label.text.color[3] = textOpacity;
        }
    };
    // we only need 1 text instance of each letter which we can render multiple times
    // this saves reallocating new vertex buffers for each letter
    // this is a stop-gap solution before something like batching or instancing
    VariantTrack.baseTextInstances = {
        'A': new Text_1.Text(Fonts_1.OpenSansRegular, 'A', 1, [1, 1, 1, 1]),
        'C': new Text_1.Text(Fonts_1.OpenSansRegular, 'C', 1, [1, 1, 1, 1]),
        'G': new Text_1.Text(Fonts_1.OpenSansRegular, 'G', 1, [1, 1, 1, 1]),
        'T': new Text_1.Text(Fonts_1.OpenSansRegular, 'T', 1, [1, 1, 1, 1]),
        '?': new Text_1.Text(Fonts_1.OpenSansRegular, '?', 1, [1, 1, 1, 1]),
    };
    return VariantTrack;
}(BaseTrack_1.default));
exports.VariantTrack = VariantTrack;
exports.default = VariantTrack;


/***/ }),

/***/ "./ui/track/index.ts":
/*!***************************!*\
  !*** ./ui/track/index.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./util */ "./ui/track/util/index.ts"));
__export(__webpack_require__(/*! ./AnnotationTrack */ "./ui/track/AnnotationTrack.ts"));
__export(__webpack_require__(/*! ./BaseTrack */ "./ui/track/BaseTrack.ts"));
__export(__webpack_require__(/*! ./ConstructTrack */ "./ui/track/ConstructTrack.ts"));
__export(__webpack_require__(/*! ./IntervalTrack */ "./ui/track/IntervalTrack.ts"));
__export(__webpack_require__(/*! ./SequenceTrack */ "./ui/track/SequenceTrack.ts"));
__export(__webpack_require__(/*! ./ShaderTrack */ "./ui/track/ShaderTrack.ts"));
__export(__webpack_require__(/*! ./VariantTrack */ "./ui/track/VariantTrack.ts"));


/***/ }),

/***/ "./ui/track/util/IntervalInstances.ts":
/*!********************************************!*\
  !*** ./ui/track/util/IntervalInstances.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var GPUDevice_1 = __webpack_require__(/*! engine/rendering/GPUDevice */ "../node_modules/engine/rendering/GPUDevice.js");
var Renderer_1 = __webpack_require__(/*! engine/rendering/Renderer */ "../node_modules/engine/rendering/Renderer.js");
var Object2DInstances_1 = __webpack_require__(/*! engine/ui/Object2DInstances */ "../node_modules/engine/ui/Object2DInstances.js");
var SharedResources_1 = __webpack_require__(/*! engine/SharedResources */ "../node_modules/engine/SharedResources.js");
var IntervalInstances = /** @class */ (function (_super) {
    __extends(IntervalInstances, _super);
    function IntervalInstances(instances) {
        var _this = _super.call(this, instances, [
            { name: 'position', type: GPUDevice_1.AttributeType.VEC2 }
        ], [
            { name: 'instancePosition', type: GPUDevice_1.AttributeType.VEC3 },
            { name: 'instanceSize', type: GPUDevice_1.AttributeType.VEC2 },
            { name: 'instanceColor', type: GPUDevice_1.AttributeType.VEC4 },
        ], {
            'instancePosition': function (inst) { return [inst.xFractional, inst.y, inst.z]; },
            'instanceSize': function (inst) { return [inst.wFractional, inst.h]; },
            'instanceColor': function (inst) { return inst.color; },
        }) || this;
        _this.minWidth = 0;
        _this.blendFactor = 1;
        _this.borderStrength = 0.3;
        _this.transparent = true;
        return _this;
    }
    IntervalInstances.prototype.draw = function (context) {
        context.uniform1f('minWidth', this.minWidth);
        context.uniform1f('blendFactor', this.blendFactor);
        context.uniform1f('borderStrength', this.borderStrength);
        context.uniform2f('groupSize', this.computedWidth, this.computedHeight);
        context.uniform1f('groupOpacity', this.opacity);
        context.uniformMatrix4fv('groupModel', false, this.worldTransformMat4);
        context.extDrawInstanced(Renderer_1.DrawMode.TRIANGLES, 6, 0, this.instanceCount);
    };
    IntervalInstances.prototype.allocateGPUVertexState = function (device, attributeLayout, instanceVertexAttributes) {
        return device.createVertexState({
            indexBuffer: SharedResources_1.default.quadIndexBuffer,
            attributeLayout: attributeLayout,
            attributes: __assign({ 
                // vertices
                'position': {
                    buffer: SharedResources_1.default.quad1x1VertexBuffer,
                    offsetBytes: 0,
                    strideBytes: 2 * 4,
                } }, instanceVertexAttributes)
        });
    };
    IntervalInstances.prototype.getVertexCode = function () {
        return "\n            #version 100\n\n            // for all instances\n            attribute vec2 position;\n            uniform float minWidth;\n            uniform mat4 groupModel;\n            uniform vec2 groupSize;\n\n            // per instance attributes\n            attribute vec3 instancePosition;\n            attribute vec2 instanceSize;\n            attribute vec4 instanceColor;\n\n            varying vec2 vUv;\n\n            varying vec2 size;\n            varying vec4 color;\n\n            void main() {\n                vUv = position;\n\n                // yz are absolute domPx units, x is in fractions of groupSize\n                vec3 pos = vec3(groupSize.x * instancePosition.x, instancePosition.yz);\n                size = vec2(groupSize.x * instanceSize.x, instanceSize.y);\n\n                // apply a minimum size\n                size.x = max(size.x, minWidth);\n\n                color = instanceColor;\n\n                gl_Position = groupModel * vec4(vec3(position * size, 0.0) + pos, 1.0);\n            }\n        ";
    };
    IntervalInstances.prototype.getFragmentCode = function () {
        return "\n            #version 100\n\n            precision highp float;\n\n            uniform float blendFactor;\n            uniform float borderStrength;\n            uniform float groupOpacity;\n\n            varying vec2 size;\n            varying vec4 color;\n\n            varying vec2 vUv;\n\n            void main() {\n                vec2 domPx = vUv * size;\n\n                const vec2 borderWidthPx = vec2(1.);\n\n                vec2 inner = step(borderWidthPx, domPx) * step(domPx, size - borderWidthPx);\n                \n                float border = 1.0 - inner.x * inner.y;\n\n                vec4 c = color;\n\n                c.rgb += border * vec3(borderStrength);\n                c.a = mix(c.a, c.a + borderStrength, border);\n\n                gl_FragColor = vec4(c.rgb, blendFactor) * c.a * groupOpacity;\n            }\n        ";
    };
    return IntervalInstances;
}(Object2DInstances_1.default));
exports.IntervalInstances = IntervalInstances;
exports.default = IntervalInstances;


/***/ }),

/***/ "./ui/track/util/TextClone.ts":
/*!************************************!*\
  !*** ./ui/track/util/TextClone.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Object2D_1 = __webpack_require__(/*! engine/ui/Object2D */ "../node_modules/engine/ui/Object2D.js");
/**
 * If we're repeating the same text a lot we can improve performance by having a single text instance and re-rendering it at different locations
 *
 * **The original text instance is modified an should not be rendered on its own after using in a TextClone**
 */
var TextClone = /** @class */ (function (_super) {
    __extends(TextClone, _super);
    function TextClone(text, color) {
        if (color === void 0) { color = [0, 0, 0, 1]; }
        var _this = _super.call(this) || this;
        _this.text = text;
        _this.color = new Float32Array(4);
        _this.additiveBlendFactor = 0.0;
        _this.glyphLayoutChanged = function () {
            _this.worldTransformNeedsUpdate = true;
            _this.text.removeEventListener('glyphLayoutChanged', _this.glyphLayoutChanged);
        };
        _this.color.set(color);
        _this.transparent = true;
        _this.blendMode = text.blendMode;
        return _this;
    }
    Object.defineProperty(TextClone.prototype, "_w", {
        get: function () { return this.text.w; },
        set: function (v) { },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextClone.prototype, "_h", {
        get: function () { return this.text.h; },
        set: function (v) { },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextClone.prototype, "render", {
        get: function () { return this.text.render; },
        set: function (v) { },
        enumerable: true,
        configurable: true
    });
    TextClone.prototype.onAdded = function () {
        if (this.text.w === 0) {
            this.text.addEventListener('glyphLayoutChanged', this.glyphLayoutChanged);
        }
    };
    TextClone.prototype.allocateGPUResources = function (device) {
        var textInternal = this.text;
        if (textInternal.gpuResourcesNeedAllocate) {
            textInternal.allocateGPUResources(device);
            textInternal.gpuResourcesNeedAllocate = false;
        }
        this.gpuProgram = textInternal.gpuProgram;
        this.gpuVertexState = textInternal.gpuVertexState;
    };
    TextClone.prototype.releaseGPUResources = function () { };
    TextClone.prototype.draw = function (context) {
        var textInternal = this.text;
        // override with local transform and color
        textInternal.worldTransformMat4 = this.worldTransformMat4;
        this.text.color = this.color;
        this.text.additiveBlendFactor = this.additiveBlendFactor;
        this.text.draw(context);
    };
    return TextClone;
}(Object2D_1.default));
exports.TextClone = TextClone;
exports.default = TextClone;


/***/ }),

/***/ "./ui/track/util/index.ts":
/*!********************************!*\
  !*** ./ui/track/util/index.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// created from 'create-ts-index'
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./IntervalInstances */ "./ui/track/util/IntervalInstances.ts"));
__export(__webpack_require__(/*! ./TextClone */ "./ui/track/util/TextClone.ts"));


/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"react","commonjs2":"react","amd":"React","root":"React"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/*!****************************************************************************************************!*\
  !*** external {"commonjs":"react-dom","commonjs2":"react-dom","amd":"ReactDOM","root":"ReactDOM"} ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ })

/******/ });
});
//# sourceMappingURL=index.js.map